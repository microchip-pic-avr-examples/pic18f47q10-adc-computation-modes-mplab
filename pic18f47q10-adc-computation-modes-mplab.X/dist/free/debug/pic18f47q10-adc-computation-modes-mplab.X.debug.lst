

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Jan 24 11:38:45 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F47Q10
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	text43,global,reloc=2,class=CODE,delta=1
    55                           	psect	text44,global,reloc=2,class=CODE,delta=1
    56                           	psect	text45,global,reloc=2,class=CODE,delta=1
    57                           	psect	text46,global,reloc=2,class=CODE,delta=1
    58                           	psect	text47,global,reloc=2,class=CODE,delta=1
    59                           	psect	text48,global,reloc=2,class=CODE,delta=1
    60                           	psect	text49,global,reloc=2,class=CODE,delta=1
    61                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    62                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    63                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    64                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    65   000000                     
    66                           ; Generated 18/12/2023 GMT
    67                           ; 
    68                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    69                           ; All rights reserved.
    70                           ; 
    71                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    72                           ; 
    73                           ; Redistribution and use in source and binary forms, with or without modification, are
    74                           ; permitted provided that the following conditions are met:
    75                           ; 
    76                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    77                           ;        conditions and the following disclaimer.
    78                           ; 
    79                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    80                           ;        of conditions and the following disclaimer in the documentation and/or other
    81                           ;        materials provided with the distribution. Publication is not required when
    82                           ;        this file is used in an embedded application.
    83                           ; 
    84                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    85                           ;        software without specific prior written permission.
    86                           ; 
    87                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    88                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    89                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    90                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    91                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    92                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    93                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    94                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    95                           ; 
    96                           ; 
    97                           ; Code-generator required, PIC18F47Q10 Definitions
    98                           ; 
    99                           ; SFR Addresses
   100   000000                     
   101 ;; Function _INT0_DefaultInterruptHandler is unused but had its address taken
   102   000000                     
   103 ;; Function _INT1_DefaultInterruptHandler is unused but had its address taken
   104   000000                     
   105 ;; Function _INT2_DefaultInterruptHandler is unused but had its address taken
   106   000000                     
   107 ;; Function _TMR0_Tasks is unused but had its address taken
   108   000000                     
   109 ;; Function _EUSART1_Deinitialize is unused but had its address taken
   110   000000                     
   111 ;; Function _EUSART1_TransmitEnable is unused but had its address taken
   112   000000                     
   113 ;; Function _EUSART1_TransmitDisable is unused but had its address taken
   114   000000                     
   115 ;; Function _EUSART1_AutoBaudSet is unused but had its address taken
   116   000000                     
   117 ;; Function _EUSART1_AutoBaudQuery is unused but had its address taken
   118   000000                     
   119 ;; Function _EUSART1_IsRxReady is unused but had its address taken
   120   000000                     
   121 ;; Function _EUSART1_IsTxDone is unused but had its address taken
   122   000000                     
   123 ;; Function _EUSART1_ErrorGet is unused but had its address taken
   124   000000                     
   125 ;; Function _EUSART1_Read is unused but had its address taken
   126   000000                     
   127 ;; Function _EUSART1_DefaultFramingErrorCallback is unused but had its address taken
   128   000000                     
   129 ;; Function _EUSART1_DefaultOverrunErrorCallback is unused but had its address taken
   130   000000                     
   131                           	psect	mediumconst
   132   00FEEA                     __pmediumconst:
   133                           	callstack 0
   134   00FEEA  00                 	db	0
   135   00FEEB                     _UART1:
   136                           	callstack 0
   137   00FEEB  E0                 	db	low _EUSART1_Initialize
   138   00FEEC  0B                 	db	high _EUSART1_Initialize
   139   00FEED  01                 	db	low (_EUSART1_Initialize shr (0+16))
   140   00FEEE  00                 	db	0
   141   00FEEF  00                 	db	0
   142   00FEF0  00                 	db	0
   143   00FEF1  00                 	db	0
   144   00FEF2  00                 	db	0
   145   00FEF3  00                 	db	0
   146   00FEF4  34                 	db	low _EUSART1_Write
   147   00FEF5  0F                 	db	high _EUSART1_Write
   148   00FEF6  01                 	db	low (_EUSART1_Write shr (0+16))
   149   00FEF7  00                 	db	0
   150   00FEF8  00                 	db	0
   151   00FEF9  00                 	db	0
   152   00FEFA  4A                 	db	low _EUSART1_IsTxReady
   153   00FEFB  0D                 	db	high _EUSART1_IsTxReady
   154   00FEFC  01                 	db	low (_EUSART1_IsTxReady shr (0+16))
   155   00FEFD  00                 	db	0
   156   00FEFE  00                 	db	0
   157   00FEFF  00                 	db	0
   158   00FF00  00                 	db	0
   159   00FF01  00                 	db	0
   160   00FF02  00                 	db	0
   161   00FF03  00                 	db	0
   162   00FF04  00                 	db	0
   163   00FF05  00                 	db	0
   164   00FF06  00                 	db	0
   165   00FF07  00                 	db	0
   166   00FF08  00                 	db	0
   167   00FF09  00                 	db	0
   168   00FF0A  00                 	db	0
   169   00FF0B  00                 	db	0
   170   00FF0C  00                 	db	0
   171   00FF0D  00                 	db	0
   172   00FF0E  00                 	db	0
   173   00FF0F  00                 	db	0
   174   00FF10  00                 	db	0
   175   00FF11  00                 	db	0
   176   00FF12  00                 	db	0
   177   00FF13  00                 	db	0
   178   00FF14  00                 	db	0
   179   00FF15  00                 	db	0
   180   00FF16  00                 	db	0
   181   00FF17  00                 	db	0
   182   00FF18  00                 	db	0
   183   00FF19  00                 	db	0
   184   00FF1A  00                 	db	0
   185   00FF1B  00                 	db	0
   186   00FF1C  00                 	db	0
   187   00FF1D  00                 	db	0
   188   00FF1E  00                 	db	0
   189   00FF1F  00                 	db	0
   190   00FF20  00                 	db	0
   191   00FF21  00                 	db	0
   192   00FF22  00                 	db	0
   193   00FF23  00                 	db	0
   194   00FF24  00                 	db	0
   195   00FF25  00                 	db	0
   196   00FF26  00                 	db	0
   197   00FF27  DE                 	db	low _EUSART1_FramingErrorCallbackRegister
   198   00FF28  0D                 	db	high _EUSART1_FramingErrorCallbackRegister
   199   00FF29  01                 	db	low (_EUSART1_FramingErrorCallbackRegister shr (0+16))
   200   00FF2A  BC                 	db	low _EUSART1_OverrunErrorCallbackRegister
   201   00FF2B  0D                 	db	high _EUSART1_OverrunErrorCallbackRegister
   202   00FF2C  01                 	db	low (_EUSART1_OverrunErrorCallbackRegister shr (0+16))
   203   00FF2D  00                 	db	0
   204   00FF2E  00                 	db	0
   205   00FF2F  00                 	db	0
   206   00FF30  00                 	db	0
   207   00FF31  00                 	db	0
   208   00FF32  00                 	db	0
   209   00FF33                     __end_of_UART1:
   210                           	callstack 0
   211   00FF33                     _Timer0:
   212                           	callstack 0
   213   00FF33  74                 	db	low _TMR0_Initialize
   214   00FF34  0D                 	db	high _TMR0_Initialize
   215   00FF35  01                 	db	low (_TMR0_Initialize shr (0+16))
   216   00FF36  5E                 	db	low _TMR0_Start
   217   00FF37  0F                 	db	high _TMR0_Start
   218   00FF38  01                 	db	low (_TMR0_Start shr (0+16))
   219   00FF39  56                 	db	low _TMR0_Stop
   220   00FF3A  0F                 	db	high _TMR0_Stop
   221   00FF3B  01                 	db	low (_TMR0_Stop shr (0+16))
   222   00FF3C  44                 	db	low _TMR0_Reload
   223   00FF3D  0F                 	db	high _TMR0_Reload
   224   00FF3E  01                 	db	low (_TMR0_Reload shr (0+16))
   225   00FF3F  E0                 	db	low _TMR0_OverflowCallbackRegister
   226   00FF40  0E                 	db	high _TMR0_OverflowCallbackRegister
   227   00FF41  01                 	db	low (_TMR0_OverflowCallbackRegister shr (0+16))
   228   00FF42  00                 	db	0
   229   00FF43  00                 	db	0
   230   00FF44  00                 	db	0
   231   00FF45                     __end_of_Timer0:
   232                           	callstack 0
   233   00FF45                     _Timer4:
   234                           	callstack 0
   235   00FF45  BA                 	db	low _TMR4_Initialize
   236   00FF46  0C                 	db	high _TMR4_Initialize
   237   00FF47  01                 	db	low (_TMR4_Initialize shr (0+16))
   238   00FF48  62                 	db	low _TMR4_Start
   239   00FF49  0F                 	db	high _TMR4_Start
   240   00FF4A  01                 	db	low (_TMR4_Start shr (0+16))
   241   00FF4B  5A                 	db	low _TMR4_Stop
   242   00FF4C  0F                 	db	high _TMR4_Stop
   243   00FF4D  01                 	db	low (_TMR4_Stop shr (0+16))
   244   00FF4E  4A                 	db	low _TMR4_PeriodCountSet
   245   00FF4F  0F                 	db	high _TMR4_PeriodCountSet
   246   00FF50  01                 	db	low (_TMR4_PeriodCountSet shr (0+16))
   247   00FF51  EE                 	db	low _TMR4_OverflowCallbackRegister
   248   00FF52  0E                 	db	high _TMR4_OverflowCallbackRegister
   249   00FF53  01                 	db	low (_TMR4_OverflowCallbackRegister shr (0+16))
   250   00FF54  00                 	db	0
   251   00FF55  00                 	db	0
   252   00FF56  00                 	db	0
   253   00FF57                     __end_of_Timer4:
   254                           	callstack 0
   255   000000                     _TX1REG	set	3993
   256   000000                     _SP1BRGH	set	3995
   257   000000                     _TX1STA	set	3997
   258   000000                     _T0CON0	set	4052
   259   000000                     _T0CON1	set	4053
   260   000000                     _T4CON	set	4022
   261   000000                     _OSCTUNE	set	3800
   262   000000                     _OSCFRQ	set	3801
   263   000000                     _IOCEF	set	3874
   264   000000                     _IOCEN	set	3875
   265   000000                     _IOCEP	set	3876
   266   000000                     _IOCCF	set	3861
   267   000000                     _IOCCN	set	3862
   268   000000                     _IOCCP	set	3863
   269   000000                     _IOCBF	set	3853
   270   000000                     _IOCBN	set	3854
   271   000000                     _IOCBP	set	3855
   272   000000                     _INLVLE	set	3877
   273   000000                     _INLVLD	set	3869
   274   000000                     _INLVLC	set	3864
   275   000000                     _INLVLB	set	3856
   276   000000                     _SLRCONE	set	3878
   277   000000                     _SLRCOND	set	3870
   278   000000                     _SLRCONC	set	3865
   279   000000                     _SLRCONB	set	3857
   280   000000                     _ODCONE	set	3879
   281   000000                     _ODCOND	set	3871
   282   000000                     _ODCONC	set	3866
   283   000000                     _ODCONB	set	3858
   284   000000                     _WPUE	set	3880
   285   000000                     _WPUD	set	3872
   286   000000                     _WPUC	set	3867
   287   000000                     _WPUB	set	3859
   288   000000                     _ANSELE	set	3881
   289   000000                     _ANSELD	set	3873
   290   000000                     _ANSELC	set	3868
   291   000000                     _ANSELB	set	3860
   292   000000                     _ADERRL	set	3945
   293   000000                     _ADERRH	set	3946
   294   000000                     _ADPREVL	set	3932
   295   000000                     _ADPREVH	set	3933
   296   000000                     _ADFLTRL	set	3949
   297   000000                     _ADFLTRH	set	3950
   298   000000                     _ADACCL	set	3947
   299   000000                     _ADACCH	set	3948
   300   000000                     _ADCNT	set	3938
   301   000000                     _ADRESL	set	3934
   302   000000                     _ADRESH	set	3935
   303   000000                     _ADACQ	set	3927
   304   000000                     _ADCON0	set	3931
   305   000000                     _ADCLK	set	3922
   306   000000                     _ADSTAT	set	3936
   307   000000                     _ADCON3	set	3926
   308   000000                     _ADCON2	set	3925
   309   000000                     _ADPRE	set	3929
   310   000000                     _ADSTPTH	set	3940
   311   000000                     _ADUTHH	set	3944
   312   000000                     _ADUTHL	set	3943
   313   000000                     _ADLTHH	set	3942
   314   00FF57                     STR_7:
   315   00FF57  42                 	db	66	;'B'
   316   00FF58  75                 	db	117	;'u'
   317   00FF59  72                 	db	114	;'r'
   318   00FF5A  73                 	db	115	;'s'
   319   00FF5B  74                 	db	116	;'t'
   320   00FF5C  20                 	db	32
   321   00FF5D  41                 	db	65	;'A'
   322   00FF5E  56                 	db	86	;'V'
   323   00FF5F  47                 	db	71	;'G'
   324   00FF60  20                 	db	32
   325   00FF61  4D                 	db	77	;'M'
   326   00FF62  6F                 	db	111	;'o'
   327   00FF63  64                 	db	100	;'d'
   328   00FF64  65                 	db	101	;'e'
   329   00FF65  20                 	db	32
   330   00FF66  2D                 	db	45
   331   00FF67  20                 	db	32
   332   00FF68  41                 	db	65	;'A'
   333   00FF69  44                 	db	68	;'D'
   334   00FF6A  46                 	db	70	;'F'
   335   00FF6B  4C                 	db	76	;'L'
   336   00FF6C  54                 	db	84	;'T'
   337   00FF6D  3D                 	db	61	;'='
   338   00FF6E  25                 	db	37
   339   00FF6F  64                 	db	100	;'d'
   340   00FF70  20                 	db	32
   341   00FF71  2D                 	db	45
   342   00FF72  20                 	db	32
   343   00FF73  53                 	db	83	;'S'
   344   00FF74  50                 	db	80	;'P'
   345   00FF75  3D                 	db	61	;'='
   346   00FF76  25                 	db	37
   347   00FF77  64                 	db	100	;'d'
   348   00FF78  20                 	db	32
   349   00FF79  2D                 	db	45
   350   00FF7A  20                 	db	32
   351   00FF7B  4C                 	db	76	;'L'
   352   00FF7C  54                 	db	84	;'T'
   353   00FF7D  3D                 	db	61	;'='
   354   00FF7E  25                 	db	37
   355   00FF7F  64                 	db	100	;'d'
   356   00FF80  20                 	db	32
   357   00FF81  2D                 	db	45
   358   00FF82  20                 	db	32
   359   00FF83  4C                 	db	76	;'L'
   360   00FF84  54                 	db	84	;'T'
   361   00FF85  20                 	db	32
   362   00FF86  43                 	db	67	;'C'
   363   00FF87  72                 	db	114	;'r'
   364   00FF88  6F                 	db	111	;'o'
   365   00FF89  73                 	db	115	;'s'
   366   00FF8A  73                 	db	115	;'s'
   367   00FF8B  65                 	db	101	;'e'
   368   00FF8C  64                 	db	100	;'d'
   369   00FF8D  0D                 	db	13
   370   00FF8E  0A                 	db	10
   371   00FF8F  00                 	db	0
   372   00FF90                     STR_6:
   373   00FF90  42                 	db	66	;'B'
   374   00FF91  75                 	db	117	;'u'
   375   00FF92  72                 	db	114	;'r'
   376   00FF93  73                 	db	115	;'s'
   377   00FF94  74                 	db	116	;'t'
   378   00FF95  20                 	db	32
   379   00FF96  41                 	db	65	;'A'
   380   00FF97  56                 	db	86	;'V'
   381   00FF98  47                 	db	71	;'G'
   382   00FF99  20                 	db	32
   383   00FF9A  4D                 	db	77	;'M'
   384   00FF9B  6F                 	db	111	;'o'
   385   00FF9C  64                 	db	100	;'d'
   386   00FF9D  65                 	db	101	;'e'
   387   00FF9E  20                 	db	32
   388   00FF9F  2D                 	db	45
   389   00FFA0  20                 	db	32
   390   00FFA1  41                 	db	65	;'A'
   391   00FFA2  44                 	db	68	;'D'
   392   00FFA3  46                 	db	70	;'F'
   393   00FFA4  4C                 	db	76	;'L'
   394   00FFA5  54                 	db	84	;'T'
   395   00FFA6  3D                 	db	61	;'='
   396   00FFA7  25                 	db	37
   397   00FFA8  64                 	db	100	;'d'
   398   00FFA9  20                 	db	32
   399   00FFAA  2D                 	db	45
   400   00FFAB  20                 	db	32
   401   00FFAC  53                 	db	83	;'S'
   402   00FFAD  50                 	db	80	;'P'
   403   00FFAE  3D                 	db	61	;'='
   404   00FFAF  25                 	db	37
   405   00FFB0  64                 	db	100	;'d'
   406   00FFB1  20                 	db	32
   407   00FFB2  2D                 	db	45
   408   00FFB3  20                 	db	32
   409   00FFB4  55                 	db	85	;'U'
   410   00FFB5  54                 	db	84	;'T'
   411   00FFB6  3D                 	db	61	;'='
   412   00FFB7  25                 	db	37
   413   00FFB8  64                 	db	100	;'d'
   414   00FFB9  20                 	db	32
   415   00FFBA  2D                 	db	45
   416   00FFBB  20                 	db	32
   417   00FFBC  55                 	db	85	;'U'
   418   00FFBD  54                 	db	84	;'T'
   419   00FFBE  20                 	db	32
   420   00FFBF  43                 	db	67	;'C'
   421   00FFC0  72                 	db	114	;'r'
   422   00FFC1  6F                 	db	111	;'o'
   423   00FFC2  73                 	db	115	;'s'
   424   00FFC3  73                 	db	115	;'s'
   425   00FFC4  65                 	db	101	;'e'
   426   00FFC5  64                 	db	100	;'d'
   427   00FFC6  0D                 	db	13
   428   00FFC7  0A                 	db	10
   429   00FFC8  00                 	db	0
   430   00FFC9                     STR_5:
   431   00FFC9  42                 	db	66	;'B'
   432   00FFCA  75                 	db	117	;'u'
   433   00FFCB  72                 	db	114	;'r'
   434   00FFCC  73                 	db	115	;'s'
   435   00FFCD  74                 	db	116	;'t'
   436   00FFCE  20                 	db	32
   437   00FFCF  41                 	db	65	;'A'
   438   00FFD0  56                 	db	86	;'V'
   439   00FFD1  47                 	db	71	;'G'
   440   00FFD2  20                 	db	32
   441   00FFD3  4D                 	db	77	;'M'
   442   00FFD4  6F                 	db	111	;'o'
   443   00FFD5  64                 	db	100	;'d'
   444   00FFD6  65                 	db	101	;'e'
   445   00FFD7  20                 	db	32
   446   00FFD8  2D                 	db	45
   447   00FFD9  20                 	db	32
   448   00FFDA  41                 	db	65	;'A'
   449   00FFDB  44                 	db	68	;'D'
   450   00FFDC  46                 	db	70	;'F'
   451   00FFDD  4C                 	db	76	;'L'
   452   00FFDE  54                 	db	84	;'T'
   453   00FFDF  3D                 	db	61	;'='
   454   00FFE0  25                 	db	37
   455   00FFE1  64                 	db	100	;'d'
   456   00FFE2  20                 	db	32
   457   00FFE3  0D                 	db	13
   458   00FFE4  0A                 	db	10
   459   00FFE5  00                 	db	0
   460   00FFE6                     STR_1:
   461   00FFE6  42                 	db	66	;'B'
   462   00FFE7  61                 	db	97	;'a'
   463   00FFE8  73                 	db	115	;'s'
   464   00FFE9  69                 	db	105	;'i'
   465   00FFEA  63                 	db	99	;'c'
   466   00FFEB  20                 	db	32
   467   00FFEC  4D                 	db	77	;'M'
   468   00FFED  6F                 	db	111	;'o'
   469   00FFEE  64                 	db	100	;'d'
   470   00FFEF  65                 	db	101	;'e'
   471   00FFF0  20                 	db	32
   472   00FFF1  2D                 	db	45
   473   00FFF2  20                 	db	32
   474   00FFF3  41                 	db	65	;'A'
   475   00FFF4  44                 	db	68	;'D'
   476   00FFF5  52                 	db	82	;'R'
   477   00FFF6  45                 	db	69	;'E'
   478   00FFF7  53                 	db	83	;'S'
   479   00FFF8  3D                 	db	61	;'='
   480   00FFF9  25                 	db	37
   481   00FFFA  64                 	db	100	;'d'
   482   00FFFB  20                 	db	32
   483   00FFFC  0D                 	db	13
   484   00FFFD  0A                 	db	10
   485   00FFFE  00                 	db	0
   486   00FFFF  00                 	db	0	; dummy byte at the end
   487   000000                     
   488                           	psect	nvCOMRAM
   489   00004E                     __pnvCOMRAM:
   490                           	callstack 0
   491   00004E                     _ADCC_ADTI_InterruptHandler:
   492                           	callstack 0
   493   00004E                     	ds	3
   494   000000                     _ADRES	set	3934
   495   000000                     _ADCON1bits	set	3924
   496   000000                     _ADCON2bits	set	3925
   497   000000                     _ADCON3bits	set	3926
   498   000000                     _ADCON0bits	set	3931
   499   000000                     _ADLTH	set	3941
   500   000000                     _ADUTH	set	3943
   501   000000                     _ADSTPT	set	3939
   502   000000                     _ADFLTR	set	3949
   503   000000                     _LATAbits	set	3970
   504   000000                     _BAUD1CONbits	set	3998
   505   000000                     _TX1STAbits	set	3997
   506   000000                     _RC1STAbits	set	3996
   507   000000                     _T0CON0bits	set	4052
   508   000000                     _PR4	set	4021
   509   000000                     _TMR4	set	4020
   510   000000                     _T4CONbits	set	4022
   511   000000                     _T4RSTbits	set	4025
   512   000000                     _T4HLTbits	set	4023
   513   000000                     _ADSTATbits	set	3936
   514   000000                     _T4INPPS	set	3751
   515   000000                     _RX1PPS	set	3760
   516   000000                     _PIE1bits	set	3774
   517   000000                     _PIR1bits	set	3782
   518   000000                     _ADACT	set	3921
   519   000000                     _ADREF	set	3923
   520   000000                     _ADCON1	set	3924
   521   000000                     _ADCAP	set	3928
   522   000000                     _ADPCH	set	3930
   523   000000                     _ADRPT	set	3937
   524   000000                     _ADSTPTL	set	3939
   525   000000                     _ADLTHL	set	3941
   526   000000                     _PIR3bits	set	3784
   527   000000                     _PIR4bits	set	3785
   528   000000                     _OSCCON1	set	3795
   529   000000                     _RC6PPS	set	3832
   530   000000                     _INLVLA	set	3848
   531   000000                     _SLRCONA	set	3849
   532   000000                     _ODCONA	set	3850
   533   000000                     _WPUA	set	3851
   534   000000                     _ANSELA	set	3852
   535   000000                     _PIE4bits	set	3777
   536   000000                     _PIR0bits	set	3781
   537   000000                     _LATA	set	3970
   538   000000                     _PORTCbits	set	3982
   539   000000                     _RC1REG	set	3992
   540   000000                     _SP1BRGL	set	3994
   541   000000                     _RC1STA	set	3996
   542   000000                     _BAUD1CON	set	3998
   543   000000                     _T4TMR	set	4020
   544   000000                     _T4PR	set	4021
   545   000000                     _T4HLT	set	4023
   546   000000                     _T4CLKCON	set	4024
   547   000000                     _INTCONbits	set	4082
   548   000000                     _TRISE	set	3979
   549   000000                     _TRISD	set	3978
   550   000000                     _TRISC	set	3977
   551   000000                     _TRISB	set	3976
   552   000000                     _TRISA	set	3975
   553   000000                     _LATE	set	3974
   554   000000                     _LATD	set	3973
   555   000000                     _LATC	set	3972
   556   000000                     _LATB	set	3971
   557   000000                     _PIE0bits	set	3773
   558   000000                     _IOCAF	set	3845
   559   000000                     _IOCAN	set	3846
   560   000000                     _IOCAP	set	3847
   561   000000                     _OSCCON3	set	3797
   562   000000                     _OSCEN	set	3799
   563   000000                     _TMR0L	set	4050
   564   000000                     _TMR0H	set	4051
   565   000000                     _T4RST	set	4025
   566                           
   567                           ; #config settings
   568                           
   569                           	psect	cinit
   570   010D9A                     __pcinit:
   571                           	callstack 0
   572   010D9A                     start_initialization:
   573                           	callstack 0
   574   010D9A                     __initialization:
   575                           	callstack 0
   576                           
   577                           ; Clear objects allocated to BANK0 (32 bytes)
   578   010D9A  EE00  F060         	lfsr	0,__pbssBANK0
   579   010D9E  0E20               	movlw	32
   580   010DA0                     clear_0:
   581   010DA0  6AEE               	clrf	postinc0,c
   582   010DA2  06E8               	decf	wreg,f,c
   583   010DA4  E1FD               	bnz	clear_0
   584                           
   585                           ; Clear objects allocated to COMRAM (34 bytes)
   586   010DA6  EE00  F02C         	lfsr	0,__pbssCOMRAM
   587   010DAA  0E22               	movlw	34
   588   010DAC                     clear_1:
   589   010DAC  6AEE               	clrf	postinc0,c
   590   010DAE  06E8               	decf	wreg,f,c
   591   010DB0  E1FD               	bnz	clear_1
   592   010DB2                     end_of_initialization:
   593                           	callstack 0
   594   010DB2                     __end_of__initialization:
   595                           	callstack 0
   596   010DB2  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   597   010DB4  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   598   010DB6  0100               	movlb	0
   599   010DB8  EF7A  F085         	goto	_main	;jump to C main() function
   600                           
   601                           	psect	bssCOMRAM
   602   00002C                     __pbssCOMRAM:
   603                           	callstack 0
   604   00002C                     _EUSART1_OverrunErrorHandler:
   605                           	callstack 0
   606   00002C                     	ds	3
   607   00002F                     _EUSART1_FramingErrorHandler:
   608                           	callstack 0
   609   00002F                     	ds	3
   610   000032                     _TMR0_OverflowCallback:
   611                           	callstack 0
   612   000032                     	ds	3
   613   000035                     _TMR4_OverflowCallback:
   614                           	callstack 0
   615   000035                     	ds	3
   616   000038                     _INT2_InterruptHandler:
   617                           	callstack 0
   618   000038                     	ds	3
   619   00003B                     _INT1_InterruptHandler:
   620                           	callstack 0
   621   00003B                     	ds	3
   622   00003E                     _INT0_InterruptHandler:
   623                           	callstack 0
   624   00003E                     	ds	3
   625   000041                     _width:
   626                           	callstack 0
   627   000041                     	ds	2
   628   000043                     _prec:
   629                           	callstack 0
   630   000043                     	ds	2
   631   000045                     _eusart1RxLastError:
   632                           	callstack 0
   633   000045                     	ds	2
   634   000047                     _flags:
   635                           	callstack 0
   636   000047                     	ds	1
   637   000048                     _lpfModeInit:
   638                           	callstack 0
   639   000048                     	ds	1
   640   000049                     _burstAvgModeInit:
   641                           	callstack 0
   642   000049                     	ds	1
   643   00004A                     _avgModeInit:
   644                           	callstack 0
   645   00004A                     	ds	1
   646   00004B                     _basicModeInit:
   647                           	callstack 0
   648   00004B                     	ds	1
   649   00004C                     _adcReadyFlag:
   650                           	callstack 0
   651   00004C                     	ds	1
   652   00004D                     _count:
   653                           	callstack 0
   654   00004D                     	ds	1
   655                           
   656                           	psect	bssBANK0
   657   000060                     __pbssBANK0:
   658                           	callstack 0
   659   000060                     _dbuf:
   660                           	callstack 0
   661   000060                     	ds	32
   662                           
   663                           	psect	cstackCOMRAM
   664   000001                     __pcstackCOMRAM:
   665                           	callstack 0
   666   000001                     ??_INTERRUPT_InterruptManager:
   667   000001                     
   668                           ; 2 bytes @ 0x0
   669   000001                     	ds	2
   670   000003                     ?___awdiv:
   671                           	callstack 0
   672   000003                     ?___awmod:
   673                           	callstack 0
   674   000003                     _EUSART1_IsTxReady$1490:
   675                           	callstack 0
   676   000003                     EUSART1_Write@txData:
   677                           	callstack 0
   678   000003                     ADCC_SetChannel@channel:
   679                           	callstack 0
   680   000003                     TMR4_PeriodCountSet@periodVal:
   681                           	callstack 0
   682   000003                     TMR0_Reload@periodVal:
   683                           	callstack 0
   684   000003                     ___awdiv@dividend:
   685                           	callstack 0
   686   000003                     ___awmod@dividend:
   687                           	callstack 0
   688   000003                     ADCC_SetADTIInterruptHandler@InterruptHandler:
   689                           	callstack 0
   690   000003                     INT0_SetInterruptHandler@InterruptHandler:
   691                           	callstack 0
   692   000003                     INT1_SetInterruptHandler@InterruptHandler:
   693                           	callstack 0
   694   000003                     INT2_SetInterruptHandler@InterruptHandler:
   695                           	callstack 0
   696   000003                     TMR4_OverflowCallbackRegister@InterruptHandler:
   697                           	callstack 0
   698   000003                     TMR0_OverflowCallbackRegister@CallbackHandler:
   699                           	callstack 0
   700   000003                     EUSART1_FramingErrorCallbackRegister@callbackHandler:
   701                           	callstack 0
   702   000003                     EUSART1_OverrunErrorCallbackRegister@callbackHandler:
   703                           	callstack 0
   704                           
   705                           ; 3 bytes @ 0x2
   706   000003                     	ds	1
   707   000004                     putch@txData:
   708                           	callstack 0
   709                           
   710                           ; 1 bytes @ 0x3
   711   000004                     	ds	1
   712   000005                     ___awdiv@divisor:
   713                           	callstack 0
   714   000005                     ___awmod@divisor:
   715                           	callstack 0
   716   000005                     fputc@c:
   717                           	callstack 0
   718                           
   719                           ; 2 bytes @ 0x4
   720   000005                     	ds	1
   721   000006                     
   722                           ; 1 bytes @ 0x5
   723   000006                     	ds	1
   724   000007                     ___awdiv@counter:
   725                           	callstack 0
   726   000007                     ___awmod@counter:
   727                           	callstack 0
   728   000007                     fputc@fp:
   729                           	callstack 0
   730                           
   731                           ; 2 bytes @ 0x6
   732   000007                     	ds	1
   733   000008                     ___awdiv@sign:
   734                           	callstack 0
   735   000008                     ___awmod@sign:
   736                           	callstack 0
   737                           
   738                           ; 1 bytes @ 0x7
   739   000008                     	ds	1
   740   000009                     ??_fputc:
   741   000009                     ?_abs:
   742                           	callstack 0
   743   000009                     ___awdiv@quotient:
   744                           	callstack 0
   745   000009                     abs@a:
   746                           	callstack 0
   747                           
   748                           ; 2 bytes @ 0x8
   749   000009                     	ds	2
   750   00000B                     ??_abs:
   751                           
   752                           ; 1 bytes @ 0xA
   753   00000B                     	ds	3
   754   00000E                     vfpfcnvrt@fp:
   755                           	callstack 0
   756                           
   757                           ; 2 bytes @ 0xD
   758   00000E                     	ds	2
   759   000010                     vfpfcnvrt@fmt:
   760                           	callstack 0
   761                           
   762                           ; 1 bytes @ 0xF
   763   000010                     	ds	1
   764   000011                     vfpfcnvrt@ap:
   765                           	callstack 0
   766                           
   767                           ; 1 bytes @ 0x10
   768   000011                     	ds	1
   769   000012                     ??_vfpfcnvrt:
   770                           
   771                           ; 1 bytes @ 0x11
   772   000012                     	ds	2
   773   000014                     vfpfcnvrt@done:
   774                           	callstack 0
   775                           
   776                           ; 1 bytes @ 0x13
   777   000014                     	ds	1
   778   000015                     vfpfcnvrt@cp:
   779                           	callstack 0
   780                           
   781                           ; 2 bytes @ 0x14
   782   000015                     	ds	2
   783   000017                     vfpfcnvrt@convarg:
   784                           	callstack 0
   785                           
   786                           ; 4 bytes @ 0x16
   787   000017                     	ds	4
   788   00001B                     vfpfcnvrt@c:
   789                           	callstack 0
   790                           
   791                           ; 1 bytes @ 0x1A
   792   00001B                     	ds	1
   793   00001C                     ?_vfprintf:
   794                           	callstack 0
   795   00001C                     vfprintf@fp:
   796                           	callstack 0
   797                           
   798                           ; 2 bytes @ 0x1B
   799   00001C                     	ds	2
   800   00001E                     vfprintf@fmt:
   801                           	callstack 0
   802                           
   803                           ; 2 bytes @ 0x1D
   804   00001E                     	ds	2
   805   000020                     vfprintf@ap:
   806                           	callstack 0
   807                           
   808                           ; 1 bytes @ 0x1F
   809   000020                     	ds	1
   810   000021                     vfprintf@cfmt:
   811                           	callstack 0
   812                           
   813                           ; 2 bytes @ 0x20
   814   000021                     	ds	2
   815   000023                     ?_printf:
   816                           	callstack 0
   817   000023                     printf@fmt:
   818                           	callstack 0
   819                           
   820                           ; 2 bytes @ 0x22
   821   000023                     	ds	8
   822   00002B                     printf@ap:
   823                           	callstack 0
   824                           
   825                           ; 1 bytes @ 0x2A
   826   00002B                     	ds	1
   827   00002C                     
   828                           ; 1 bytes @ 0x2B
   829 ;;
   830 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   831 ;;
   832 ;; *************** function _main *****************
   833 ;; Defined at:
   834 ;;		line 40 in file "main.c"
   835 ;; Parameters:    Size  Location     Type
   836 ;;		None
   837 ;; Auto vars:     Size  Location     Type
   838 ;;		None
   839 ;; Return value:  Size  Location     Type
   840 ;;                  2  717[None  ] int 
   841 ;; Registers used:
   842 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, cstack
   843 ;; Tracked objects:
   844 ;;		On entry : 0/0
   845 ;;		On exit  : 0/0
   846 ;;		Unchanged: 0/0
   847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
   848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   852 ;;Total ram usage:        0 bytes
   853 ;; Hardware stack levels required when called: 10
   854 ;; This function calls:
   855 ;;		_ADCC_SetADTIInterruptHandler
   856 ;;		_ApplicationTask
   857 ;;		_SYSTEM_Initialize
   858 ;;		_TMR0_OverflowCallbackRegister
   859 ;;		_TMR4_OverflowCallbackRegister
   860 ;; This function is called by:
   861 ;;		Startup code after reset
   862 ;; This function uses a non-reentrant model
   863 ;;
   864                           
   865                           	psect	text0
   866   010AF4                     __ptext0:
   867                           	callstack 0
   868   010AF4                     _main:
   869                           	callstack 21
   870   010AF4                     
   871                           ;main.c: 42:     SYSTEM_Initialize();
   872   010AF4  EC00  F087         	call	_SYSTEM_Initialize	;wreg free
   873   010AF8                     
   874                           ;main.c: 49:     (INTCONbits.GIE = 1);
   875   010AF8  8EF2               	bsf	242,7,c	;volatile
   876   010AFA                     
   877                           ;main.c: 55:     (INTCONbits.PEIE = 1);
   878   010AFA  8CF2               	bsf	242,6,c	;volatile
   879                           
   880                           ;main.c: 60:     ADCC_SetADTIInterruptHandler(ADCUserInterrupt);
   881   010AFC  0E50               	movlw	low _ADCUserInterrupt
   882   010AFE  6E03               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler^0,c
   883   010B00  0E0F               	movlw	high _ADCUserInterrupt
   884   010B02  6E04               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)^0,c
   885   010B04  0E01               	movlw	low (_ADCUserInterrupt shr (0+16))
   886   010B06  6E05               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+2)^0,c
   887   010B08  EC93  F087         	call	_ADCC_SetADTIInterruptHandler	;wreg free
   888   010B0C                     
   889                           ;main.c: 61:     Timer4.TimeoutCallbackRegister(TMR4UserInterrupt);
   890   010B0C  0ECE               	movlw	low _TMR4UserInterrupt
   891   010B0E  6E03               	movwf	TMR0_OverflowCallbackRegister@CallbackHandler^0,c
   892   010B10  0E0E               	movlw	high _TMR4UserInterrupt
   893   010B12  6E04               	movwf	(TMR0_OverflowCallbackRegister@CallbackHandler+1)^0,c
   894   010B14  0E01               	movlw	low (_TMR4UserInterrupt shr (0+16))
   895   010B16  6E05               	movwf	(TMR0_OverflowCallbackRegister@CallbackHandler+2)^0,c
   896   010B18  0E51               	movlw	low (_Timer4+12)
   897   010B1A  6EF6               	movwf	tblptrl,c
   898   010B1C  0EFF               	movlw	high (_Timer4+12)
   899   010B1E  6EF7               	movwf	tblptrh,c
   900   010B20                     	if	0	;tblptru may be non-zero
   901   010B20                     	endif
   902   010B20                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
   903   010B20  0E00               	movlw	low (__mediumconst shr (0+16))
   904   010B22  6EF8               	movwf	tblptru,c
   905   010B24                     	endif
   906   010B24  D802               	call	u1688
   907   010B26  EFA2  F085         	goto	u1689
   908   010B2A                     u1688:
   909   010B2A  0005               	push	
   910   010B2C  6EFA               	movwf	pclath,c
   911   010B2E  0009               	tblrd		*+
   912   010B30  50F5               	movf	tablat,w,c
   913   010B32  6EFD               	movwf	tosl,c
   914   010B34  0009               	tblrd		*+
   915   010B36  50F5               	movf	tablat,w,c
   916   010B38  6EFE               	movwf	tosh,c
   917   010B3A  0009               	tblrd		*+
   918   010B3C  50F5               	movf	tablat,w,c
   919   010B3E  6EFF               	movwf	tosu,c
   920   010B40  50FA               	movf	pclath,w,c
   921   010B42  0012               	return		;indir
   922   010B44                     u1689:
   923   010B44                     l2749:
   924                           
   925                           ;main.c: 64:     {;main.c: 65:         ApplicationTask();
   926   010B44  EC00  F080         	call	_ApplicationTask	;wreg free
   927   010B48  EFA2  F085         	goto	l2749
   928   010B4C  EF4D  F000         	goto	start
   929   010B50                     __end_of_main:
   930                           	callstack 0
   931                           
   932 ;; *************** function _SYSTEM_Initialize *****************
   933 ;; Defined at:
   934 ;;		line 36 in file "mcc_generated_files/system/src/system.c"
   935 ;; Parameters:    Size  Location     Type
   936 ;;		None
   937 ;; Auto vars:     Size  Location     Type
   938 ;;		None
   939 ;; Return value:  Size  Location     Type
   940 ;;                  1    wreg      void 
   941 ;; Registers used:
   942 ;;		wreg, status,2, status,0, cstack
   943 ;; Tracked objects:
   944 ;;		On entry : 0/0
   945 ;;		On exit  : 0/0
   946 ;;		Unchanged: 0/0
   947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
   948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   952 ;;Total ram usage:        0 bytes
   953 ;; Hardware stack levels used: 1
   954 ;; Hardware stack levels required when called: 5
   955 ;; This function calls:
   956 ;;		_ADCC_Initialize
   957 ;;		_CLOCK_Initialize
   958 ;;		_EUSART1_Initialize
   959 ;;		_INTERRUPT_Initialize
   960 ;;		_PIN_MANAGER_Initialize
   961 ;;		_TMR0_Initialize
   962 ;;		_TMR4_Initialize
   963 ;; This function is called by:
   964 ;;		_main
   965 ;; This function uses a non-reentrant model
   966 ;;
   967                           
   968                           	psect	text1
   969   010E00                     __ptext1:
   970                           	callstack 0
   971   010E00                     _SYSTEM_Initialize:
   972                           	callstack 25
   973   010E00                     
   974                           ;mcc_generated_files/system/src/system.c: 38:     CLOCK_Initialize();
   975   010E00  EC3B  F087         	call	_CLOCK_Initialize	;wreg free
   976                           
   977                           ;mcc_generated_files/system/src/system.c: 39:     PIN_MANAGER_Initialize();
   978   010E04  EC91  F084         	call	_PIN_MANAGER_Initialize	;wreg free
   979   010E08                     
   980                           ;mcc_generated_files/system/src/system.c: 40:     ADCC_Initialize();
   981   010E08  EC45  F085         	call	_ADCC_Initialize	;wreg free
   982   010E0C                     
   983                           ;mcc_generated_files/system/src/system.c: 41:     EUSART1_Initialize();
   984   010E0C  ECF0  F085         	call	_EUSART1_Initialize	;wreg free
   985   010E10                     
   986                           ;mcc_generated_files/system/src/system.c: 42:     TMR0_Initialize();
   987   010E10  ECBA  F086         	call	_TMR0_Initialize	;wreg free
   988   010E14                     
   989                           ;mcc_generated_files/system/src/system.c: 43:     TMR4_Initialize();
   990   010E14  EC5D  F086         	call	_TMR4_Initialize	;wreg free
   991   010E18                     
   992                           ;mcc_generated_files/system/src/system.c: 44:     INTERRUPT_Initialize();
   993   010E18  ECCD  F085         	call	_INTERRUPT_Initialize	;wreg free
   994   010E1C  0012               	return		;funcret
   995   010E1E                     __end_of_SYSTEM_Initialize:
   996                           	callstack 0
   997                           
   998 ;; *************** function _TMR4_Initialize *****************
   999 ;; Defined at:
  1000 ;;		line 57 in file "mcc_generated_files/timer/src/tmr4.c"
  1001 ;; Parameters:    Size  Location     Type
  1002 ;;		None
  1003 ;; Auto vars:     Size  Location     Type
  1004 ;;		None
  1005 ;; Return value:  Size  Location     Type
  1006 ;;                  1    wreg      void 
  1007 ;; Registers used:
  1008 ;;		wreg, status,2, status,0, cstack
  1009 ;; Tracked objects:
  1010 ;;		On entry : 0/0
  1011 ;;		On exit  : 0/0
  1012 ;;		Unchanged: 0/0
  1013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1018 ;;Total ram usage:        0 bytes
  1019 ;; Hardware stack levels used: 1
  1020 ;; Hardware stack levels required when called: 4
  1021 ;; This function calls:
  1022 ;;		_TMR4_OverflowCallbackRegister
  1023 ;; This function is called by:
  1024 ;;		_SYSTEM_Initialize
  1025 ;; This function uses a non-reentrant model
  1026 ;;
  1027                           
  1028                           	psect	text2
  1029   010CBA                     __ptext2:
  1030                           	callstack 0
  1031   010CBA                     _TMR4_Initialize:
  1032                           	callstack 25
  1033   010CBA                     
  1034                           ;mcc_generated_files/timer/src/tmr4.c: 61:     T4CLKCON = 0x4;
  1035   010CBA  0E04               	movlw	4
  1036   010CBC  6EB8               	movwf	184,c	;volatile
  1037                           
  1038                           ;mcc_generated_files/timer/src/tmr4.c: 63:     T4HLT = 0x11;
  1039   010CBE  0E11               	movlw	17
  1040   010CC0  6EB7               	movwf	183,c	;volatile
  1041                           
  1042                           ;mcc_generated_files/timer/src/tmr4.c: 65:     T4RST = 0x0;
  1043   010CC2  0E00               	movlw	0
  1044   010CC4  6EB9               	movwf	185,c	;volatile
  1045                           
  1046                           ;mcc_generated_files/timer/src/tmr4.c: 67:     T4PR = 0x9A;
  1047   010CC6  0E9A               	movlw	154
  1048   010CC8  6EB5               	movwf	181,c	;volatile
  1049                           
  1050                           ;mcc_generated_files/timer/src/tmr4.c: 69:     T4TMR = 0x0;
  1051   010CCA  0E00               	movlw	0
  1052   010CCC  6EB4               	movwf	180,c	;volatile
  1053   010CCE                     
  1054                           ;mcc_generated_files/timer/src/tmr4.c: 72:     TMR4_OverflowCallbackRegister(TMR4_Defaul
      +                          tOverflowCallback);
  1055   010CCE  0E68               	movlw	low _TMR4_DefaultOverflowCallback
  1056   010CD0  6E03               	movwf	TMR4_OverflowCallbackRegister@InterruptHandler^0,c
  1057   010CD2  0E0F               	movlw	high _TMR4_DefaultOverflowCallback
  1058   010CD4  6E04               	movwf	(TMR4_OverflowCallbackRegister@InterruptHandler+1)^0,c
  1059   010CD6  0E01               	movlw	low (_TMR4_DefaultOverflowCallback shr (0+16))
  1060   010CD8  6E05               	movwf	(TMR4_OverflowCallbackRegister@InterruptHandler+2)^0,c
  1061   010CDA  EC77  F087         	call	_TMR4_OverflowCallbackRegister	;wreg free
  1062   010CDE                     
  1063                           ;mcc_generated_files/timer/src/tmr4.c: 75:     PIR4bits.TMR4IF = 0;
  1064   010CDE  010E               	movlb	14	; () banked
  1065   010CE0  97C9               	bcf	201,3,b	;volatile
  1066   010CE2                     
  1067                           ; BSR set to: 14
  1068                           ;mcc_generated_files/timer/src/tmr4.c: 77:     PIE4bits.TMR4IE = 1;
  1069   010CE2  87C1               	bsf	193,3,b	;volatile
  1070   010CE4                     
  1071                           ; BSR set to: 14
  1072                           ;mcc_generated_files/timer/src/tmr4.c: 79:     T4CON = 0x90;
  1073   010CE4  0E90               	movlw	144
  1074   010CE6  6EB6               	movwf	182,c	;volatile
  1075   010CE8                     
  1076                           ; BSR set to: 14
  1077   010CE8  0012               	return		;funcret
  1078   010CEA                     __end_of_TMR4_Initialize:
  1079                           	callstack 0
  1080                           
  1081 ;; *************** function _TMR0_OverflowCallbackRegister *****************
  1082 ;; Defined at:
  1083 ;;		line 108 in file "mcc_generated_files/timer/src/tmr0.c"
  1084 ;; Parameters:    Size  Location     Type
  1085 ;;  CallbackHand    3    2[COMRAM] PTR FTN()void 
  1086 ;;		 -> TMR4UserInterrupt(1), TMR0_DefaultOverflowCallback(1), TMR4_DefaultOverflowCallback(1), 
  1087 ;; Auto vars:     Size  Location     Type
  1088 ;;		None
  1089 ;; Return value:  Size  Location     Type
  1090 ;;                  1    wreg      void 
  1091 ;; Registers used:
  1092 ;;		wreg, status,2, status,0
  1093 ;; Tracked objects:
  1094 ;;		On entry : 0/0
  1095 ;;		On exit  : 0/0
  1096 ;;		Unchanged: 0/0
  1097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1098 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1101 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1102 ;;Total ram usage:        3 bytes
  1103 ;; Hardware stack levels used: 1
  1104 ;; Hardware stack levels required when called: 3
  1105 ;; This function calls:
  1106 ;;		Nothing
  1107 ;; This function is called by:
  1108 ;;		_TMR0_Initialize
  1109 ;;		_main
  1110 ;; This function uses a non-reentrant model
  1111 ;;
  1112                           
  1113                           	psect	text3
  1114   010EE0                     __ptext3:
  1115                           	callstack 0
  1116   010EE0                     _TMR0_OverflowCallbackRegister:
  1117                           	callstack 27
  1118   010EE0                     
  1119                           ;mcc_generated_files/timer/src/tmr0.c: 108: void TMR0_OverflowCallbackRegister(void (* C
      +                          allbackHandler)(void));mcc_generated_files/timer/src/tmr0.c: 109: {;mcc_generated_files/
      +                          timer/src/tmr0.c: 110:     TMR0_OverflowCallback = CallbackHandler;
  1120   010EE0  C003  F032         	movff	TMR0_OverflowCallbackRegister@CallbackHandler,_TMR0_OverflowCallback
  1121   010EE4  C004  F033         	movff	TMR0_OverflowCallbackRegister@CallbackHandler+1,_TMR0_OverflowCallback+1
  1122   010EE8  C005  F034         	movff	TMR0_OverflowCallbackRegister@CallbackHandler+2,_TMR0_OverflowCallback+2
  1123   010EEC  0012               	return		;funcret
  1124   010EEE                     __end_of_TMR0_OverflowCallbackRegister:
  1125                           	callstack 0
  1126                           
  1127 ;; *************** function _TMR4_OverflowCallbackRegister *****************
  1128 ;; Defined at:
  1129 ;;		line 135 in file "mcc_generated_files/timer/src/tmr4.c"
  1130 ;; Parameters:    Size  Location     Type
  1131 ;;  InterruptHan    3    2[COMRAM] PTR FTN()void 
  1132 ;;		 -> TMR4UserInterrupt(1), TMR0_DefaultOverflowCallback(1), TMR4_DefaultOverflowCallback(1), 
  1133 ;; Auto vars:     Size  Location     Type
  1134 ;;		None
  1135 ;; Return value:  Size  Location     Type
  1136 ;;                  1    wreg      void 
  1137 ;; Registers used:
  1138 ;;		wreg, status,2, status,0
  1139 ;; Tracked objects:
  1140 ;;		On entry : 0/0
  1141 ;;		On exit  : 0/0
  1142 ;;		Unchanged: 0/0
  1143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1144 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1147 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1148 ;;Total ram usage:        3 bytes
  1149 ;; Hardware stack levels used: 1
  1150 ;; Hardware stack levels required when called: 3
  1151 ;; This function calls:
  1152 ;;		Nothing
  1153 ;; This function is called by:
  1154 ;;		_TMR4_Initialize
  1155 ;;		_main
  1156 ;; This function uses a non-reentrant model
  1157 ;;
  1158                           
  1159                           	psect	text4
  1160   010EEE                     __ptext4:
  1161                           	callstack 0
  1162   010EEE                     _TMR4_OverflowCallbackRegister:
  1163                           	callstack 27
  1164   010EEE                     
  1165                           ;mcc_generated_files/timer/src/tmr4.c: 135: void TMR4_OverflowCallbackRegister(void (* I
      +                          nterruptHandler)(void));mcc_generated_files/timer/src/tmr4.c: 136: {;mcc_generated_files
      +                          /timer/src/tmr4.c: 137:    TMR4_OverflowCallback = InterruptHandler;
  1166   010EEE  C003  F035         	movff	TMR4_OverflowCallbackRegister@InterruptHandler,_TMR4_OverflowCallback
  1167   010EF2  C004  F036         	movff	TMR4_OverflowCallbackRegister@InterruptHandler+1,_TMR4_OverflowCallback+1
  1168   010EF6  C005  F037         	movff	TMR4_OverflowCallbackRegister@InterruptHandler+2,_TMR4_OverflowCallback+2
  1169   010EFA  0012               	return		;funcret
  1170   010EFC                     __end_of_TMR4_OverflowCallbackRegister:
  1171                           	callstack 0
  1172                           
  1173 ;; *************** function _TMR0_Initialize *****************
  1174 ;; Defined at:
  1175 ;;		line 53 in file "mcc_generated_files/timer/src/tmr0.c"
  1176 ;; Parameters:    Size  Location     Type
  1177 ;;		None
  1178 ;; Auto vars:     Size  Location     Type
  1179 ;;		None
  1180 ;; Return value:  Size  Location     Type
  1181 ;;                  1    wreg      void 
  1182 ;; Registers used:
  1183 ;;		wreg, status,2, status,0, cstack
  1184 ;; Tracked objects:
  1185 ;;		On entry : 0/0
  1186 ;;		On exit  : 0/0
  1187 ;;		Unchanged: 0/0
  1188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1193 ;;Total ram usage:        0 bytes
  1194 ;; Hardware stack levels used: 1
  1195 ;; Hardware stack levels required when called: 4
  1196 ;; This function calls:
  1197 ;;		_TMR0_OverflowCallbackRegister
  1198 ;; This function is called by:
  1199 ;;		_SYSTEM_Initialize
  1200 ;; This function uses a non-reentrant model
  1201 ;;
  1202                           
  1203                           	psect	text5
  1204   010D74                     __ptext5:
  1205                           	callstack 0
  1206   010D74                     _TMR0_Initialize:
  1207                           	callstack 25
  1208   010D74                     
  1209                           ;mcc_generated_files/timer/src/tmr0.c: 56:     TMR0H = 0x12;
  1210   010D74  0E12               	movlw	18
  1211   010D76  6ED3               	movwf	211,c	;volatile
  1212                           
  1213                           ;mcc_generated_files/timer/src/tmr0.c: 59:     TMR0L = 0x0;
  1214   010D78  0E00               	movlw	0
  1215   010D7A  6ED2               	movwf	210,c	;volatile
  1216                           
  1217                           ;mcc_generated_files/timer/src/tmr0.c: 62:     T0CON1 = 0x4D;
  1218   010D7C  0E4D               	movlw	77
  1219   010D7E  6ED5               	movwf	213,c	;volatile
  1220   010D80                     
  1221                           ;mcc_generated_files/timer/src/tmr0.c: 66:     TMR0_OverflowCallbackRegister(TMR0_Defaul
      +                          tOverflowCallback);
  1222   010D80  0E66               	movlw	low _TMR0_DefaultOverflowCallback
  1223   010D82  6E03               	movwf	TMR0_OverflowCallbackRegister@CallbackHandler^0,c
  1224   010D84  0E0F               	movlw	high _TMR0_DefaultOverflowCallback
  1225   010D86  6E04               	movwf	(TMR0_OverflowCallbackRegister@CallbackHandler+1)^0,c
  1226   010D88  0E01               	movlw	low (_TMR0_DefaultOverflowCallback shr (0+16))
  1227   010D8A  6E05               	movwf	(TMR0_OverflowCallbackRegister@CallbackHandler+2)^0,c
  1228   010D8C  EC70  F087         	call	_TMR0_OverflowCallbackRegister	;wreg free
  1229   010D90                     
  1230                           ;mcc_generated_files/timer/src/tmr0.c: 69:     PIR0bits.TMR0IF = 0;
  1231   010D90  010E               	movlb	14	; () banked
  1232   010D92  9BC5               	bcf	197,5,b	;volatile
  1233   010D94                     
  1234                           ; BSR set to: 14
  1235                           ;mcc_generated_files/timer/src/tmr0.c: 72:     T0CON0 = 0x80;
  1236   010D94  0E80               	movlw	128
  1237   010D96  6ED4               	movwf	212,c	;volatile
  1238   010D98                     
  1239                           ; BSR set to: 14
  1240   010D98  0012               	return		;funcret
  1241   010D9A                     __end_of_TMR0_Initialize:
  1242                           	callstack 0
  1243                           
  1244 ;; *************** function _PIN_MANAGER_Initialize *****************
  1245 ;; Defined at:
  1246 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
  1247 ;; Parameters:    Size  Location     Type
  1248 ;;		None
  1249 ;; Auto vars:     Size  Location     Type
  1250 ;;		None
  1251 ;; Return value:  Size  Location     Type
  1252 ;;                  1    wreg      void 
  1253 ;; Registers used:
  1254 ;;		wreg, status,2
  1255 ;; Tracked objects:
  1256 ;;		On entry : 0/0
  1257 ;;		On exit  : 0/0
  1258 ;;		Unchanged: 0/0
  1259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1264 ;;Total ram usage:        0 bytes
  1265 ;; Hardware stack levels used: 1
  1266 ;; Hardware stack levels required when called: 3
  1267 ;; This function calls:
  1268 ;;		Nothing
  1269 ;; This function is called by:
  1270 ;;		_SYSTEM_Initialize
  1271 ;; This function uses a non-reentrant model
  1272 ;;
  1273                           
  1274                           	psect	text6
  1275   010922                     __ptext6:
  1276                           	callstack 0
  1277   010922                     _PIN_MANAGER_Initialize:
  1278                           	callstack 26
  1279   010922                     
  1280                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
  1281   010922  0E00               	movlw	0
  1282   010924  6E82               	movwf	130,c	;volatile
  1283                           
  1284                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x0;
  1285   010926  0E00               	movlw	0
  1286   010928  6E83               	movwf	131,c	;volatile
  1287                           
  1288                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x0;
  1289   01092A  0E00               	movlw	0
  1290   01092C  6E84               	movwf	132,c	;volatile
  1291                           
  1292                           ;mcc_generated_files/system/src/pins.c: 46:     LATD = 0x0;
  1293   01092E  0E00               	movlw	0
  1294   010930  6E85               	movwf	133,c	;volatile
  1295                           
  1296                           ;mcc_generated_files/system/src/pins.c: 47:     LATE = 0x0;
  1297   010932  0E00               	movlw	0
  1298   010934  6E86               	movwf	134,c	;volatile
  1299                           
  1300                           ;mcc_generated_files/system/src/pins.c: 52:     TRISA = 0xCF;
  1301   010936  0ECF               	movlw	207
  1302   010938  6E87               	movwf	135,c	;volatile
  1303   01093A                     
  1304                           ;mcc_generated_files/system/src/pins.c: 53:     TRISB = 0xFF;
  1305   01093A  6888               	setf	136,c	;volatile
  1306                           
  1307                           ;mcc_generated_files/system/src/pins.c: 54:     TRISC = 0xBF;
  1308   01093C  0EBF               	movlw	191
  1309   01093E  6E89               	movwf	137,c	;volatile
  1310   010940                     
  1311                           ;mcc_generated_files/system/src/pins.c: 55:     TRISD = 0xFF;
  1312   010940  688A               	setf	138,c	;volatile
  1313                           
  1314                           ;mcc_generated_files/system/src/pins.c: 56:     TRISE = 0x7;
  1315   010942  0E07               	movlw	7
  1316   010944  6E8B               	movwf	139,c	;volatile
  1317                           
  1318                           ;mcc_generated_files/system/src/pins.c: 61:     ANSELA = 0xCF;
  1319   010946  0ECF               	movlw	207
  1320   010948  010F               	movlb	15	; () banked
  1321   01094A  6F0C               	movwf	12,b	;volatile
  1322   01094C                     
  1323                           ; BSR set to: 15
  1324                           ;mcc_generated_files/system/src/pins.c: 62:     ANSELB = 0xFF;
  1325   01094C  6914               	setf	20,b	;volatile
  1326                           
  1327                           ;mcc_generated_files/system/src/pins.c: 63:     ANSELC = 0x1F;
  1328   01094E  0E1F               	movlw	31
  1329   010950  6F1C               	movwf	28,b	;volatile
  1330   010952                     
  1331                           ; BSR set to: 15
  1332                           ;mcc_generated_files/system/src/pins.c: 64:     ANSELD = 0xFF;
  1333   010952  6921               	setf	33,b	;volatile
  1334                           
  1335                           ;mcc_generated_files/system/src/pins.c: 65:     ANSELE = 0x7;
  1336   010954  0E07               	movlw	7
  1337   010956  6F29               	movwf	41,b	;volatile
  1338                           
  1339                           ;mcc_generated_files/system/src/pins.c: 70:     WPUA = 0x0;
  1340   010958  0E00               	movlw	0
  1341   01095A  6F0B               	movwf	11,b	;volatile
  1342                           
  1343                           ;mcc_generated_files/system/src/pins.c: 71:     WPUB = 0x0;
  1344   01095C  0E00               	movlw	0
  1345   01095E  6F13               	movwf	19,b	;volatile
  1346                           
  1347                           ;mcc_generated_files/system/src/pins.c: 72:     WPUC = 0x0;
  1348   010960  0E00               	movlw	0
  1349   010962  6F1B               	movwf	27,b	;volatile
  1350                           
  1351                           ;mcc_generated_files/system/src/pins.c: 73:     WPUD = 0x0;
  1352   010964  0E00               	movlw	0
  1353   010966  6F20               	movwf	32,b	;volatile
  1354                           
  1355                           ;mcc_generated_files/system/src/pins.c: 74:     WPUE = 0x0;
  1356   010968  0E00               	movlw	0
  1357   01096A  6F28               	movwf	40,b	;volatile
  1358                           
  1359                           ;mcc_generated_files/system/src/pins.c: 79:     ODCONA = 0x0;
  1360   01096C  0E00               	movlw	0
  1361   01096E  6F0A               	movwf	10,b	;volatile
  1362                           
  1363                           ;mcc_generated_files/system/src/pins.c: 80:     ODCONB = 0x0;
  1364   010970  0E00               	movlw	0
  1365   010972  6F12               	movwf	18,b	;volatile
  1366                           
  1367                           ;mcc_generated_files/system/src/pins.c: 81:     ODCONC = 0x0;
  1368   010974  0E00               	movlw	0
  1369   010976  6F1A               	movwf	26,b	;volatile
  1370                           
  1371                           ;mcc_generated_files/system/src/pins.c: 82:     ODCOND = 0x0;
  1372   010978  0E00               	movlw	0
  1373   01097A  6F1F               	movwf	31,b	;volatile
  1374                           
  1375                           ;mcc_generated_files/system/src/pins.c: 83:     ODCONE = 0x0;
  1376   01097C  0E00               	movlw	0
  1377   01097E  6F27               	movwf	39,b	;volatile
  1378   010980                     
  1379                           ; BSR set to: 15
  1380                           ;mcc_generated_files/system/src/pins.c: 88:     SLRCONA = 0xFF;
  1381   010980  6909               	setf	9,b	;volatile
  1382   010982                     
  1383                           ; BSR set to: 15
  1384                           ;mcc_generated_files/system/src/pins.c: 89:     SLRCONB = 0xFF;
  1385   010982  6911               	setf	17,b	;volatile
  1386   010984                     
  1387                           ; BSR set to: 15
  1388                           ;mcc_generated_files/system/src/pins.c: 90:     SLRCONC = 0xFF;
  1389   010984  6919               	setf	25,b	;volatile
  1390   010986                     
  1391                           ; BSR set to: 15
  1392                           ;mcc_generated_files/system/src/pins.c: 91:     SLRCOND = 0xFF;
  1393   010986  691E               	setf	30,b	;volatile
  1394                           
  1395                           ;mcc_generated_files/system/src/pins.c: 92:     SLRCONE = 0x7;
  1396   010988  0E07               	movlw	7
  1397   01098A  6F26               	movwf	38,b	;volatile
  1398   01098C                     
  1399                           ; BSR set to: 15
  1400                           ;mcc_generated_files/system/src/pins.c: 97:     INLVLA = 0xFF;
  1401   01098C  6908               	setf	8,b	;volatile
  1402   01098E                     
  1403                           ; BSR set to: 15
  1404                           ;mcc_generated_files/system/src/pins.c: 98:     INLVLB = 0xFF;
  1405   01098E  6910               	setf	16,b	;volatile
  1406   010990                     
  1407                           ; BSR set to: 15
  1408                           ;mcc_generated_files/system/src/pins.c: 99:     INLVLC = 0xFF;
  1409   010990  6918               	setf	24,b	;volatile
  1410   010992                     
  1411                           ; BSR set to: 15
  1412                           ;mcc_generated_files/system/src/pins.c: 100:     INLVLD = 0xFF;
  1413   010992  691D               	setf	29,b	;volatile
  1414                           
  1415                           ;mcc_generated_files/system/src/pins.c: 101:     INLVLE = 0xF;
  1416   010994  0E0F               	movlw	15
  1417   010996  6F25               	movwf	37,b	;volatile
  1418                           
  1419                           ;mcc_generated_files/system/src/pins.c: 109:     RX1PPS = 0x17;
  1420   010998  0E17               	movlw	23
  1421   01099A  010E               	movlb	14	; () banked
  1422   01099C  6FB0               	movwf	176,b	;volatile
  1423                           
  1424                           ;mcc_generated_files/system/src/pins.c: 110:     T4INPPS = 0x15;
  1425   01099E  0E15               	movlw	21
  1426   0109A0  6FA7               	movwf	167,b	;volatile
  1427                           
  1428                           ;mcc_generated_files/system/src/pins.c: 111:     RC6PPS = 0x09;
  1429   0109A2  0E09               	movlw	9
  1430   0109A4  6FF8               	movwf	248,b	;volatile
  1431                           
  1432                           ;mcc_generated_files/system/src/pins.c: 116:     IOCAP = 0x0;
  1433   0109A6  0E00               	movlw	0
  1434   0109A8  010F               	movlb	15	; () banked
  1435   0109AA  6F07               	movwf	7,b	;volatile
  1436                           
  1437                           ;mcc_generated_files/system/src/pins.c: 117:     IOCAN = 0x0;
  1438   0109AC  0E00               	movlw	0
  1439   0109AE  6F06               	movwf	6,b	;volatile
  1440                           
  1441                           ;mcc_generated_files/system/src/pins.c: 118:     IOCAF = 0x0;
  1442   0109B0  0E00               	movlw	0
  1443   0109B2  6F05               	movwf	5,b	;volatile
  1444                           
  1445                           ;mcc_generated_files/system/src/pins.c: 119:     IOCBP = 0x0;
  1446   0109B4  0E00               	movlw	0
  1447   0109B6  6F0F               	movwf	15,b	;volatile
  1448                           
  1449                           ;mcc_generated_files/system/src/pins.c: 120:     IOCBN = 0x0;
  1450   0109B8  0E00               	movlw	0
  1451   0109BA  6F0E               	movwf	14,b	;volatile
  1452                           
  1453                           ;mcc_generated_files/system/src/pins.c: 121:     IOCBF = 0x0;
  1454   0109BC  0E00               	movlw	0
  1455   0109BE  6F0D               	movwf	13,b	;volatile
  1456                           
  1457                           ;mcc_generated_files/system/src/pins.c: 122:     IOCCP = 0x0;
  1458   0109C0  0E00               	movlw	0
  1459   0109C2  6F17               	movwf	23,b	;volatile
  1460                           
  1461                           ;mcc_generated_files/system/src/pins.c: 123:     IOCCN = 0x0;
  1462   0109C4  0E00               	movlw	0
  1463   0109C6  6F16               	movwf	22,b	;volatile
  1464                           
  1465                           ;mcc_generated_files/system/src/pins.c: 124:     IOCCF = 0x0;
  1466   0109C8  0E00               	movlw	0
  1467   0109CA  6F15               	movwf	21,b	;volatile
  1468                           
  1469                           ;mcc_generated_files/system/src/pins.c: 125:     IOCEP = 0x0;
  1470   0109CC  0E00               	movlw	0
  1471   0109CE  6F24               	movwf	36,b	;volatile
  1472                           
  1473                           ;mcc_generated_files/system/src/pins.c: 126:     IOCEN = 0x0;
  1474   0109D0  0E00               	movlw	0
  1475   0109D2  6F23               	movwf	35,b	;volatile
  1476                           
  1477                           ;mcc_generated_files/system/src/pins.c: 127:     IOCEF = 0x0;
  1478   0109D4  0E00               	movlw	0
  1479   0109D6  6F22               	movwf	34,b	;volatile
  1480   0109D8                     
  1481                           ; BSR set to: 15
  1482   0109D8  0012               	return		;funcret
  1483   0109DA                     __end_of_PIN_MANAGER_Initialize:
  1484                           	callstack 0
  1485                           
  1486 ;; *************** function _INTERRUPT_Initialize *****************
  1487 ;; Defined at:
  1488 ;;		line 42 in file "mcc_generated_files/system/src/interrupt.c"
  1489 ;; Parameters:    Size  Location     Type
  1490 ;;		None
  1491 ;; Auto vars:     Size  Location     Type
  1492 ;;		None
  1493 ;; Return value:  Size  Location     Type
  1494 ;;                  1    wreg      void 
  1495 ;; Registers used:
  1496 ;;		wreg, status,2, status,0, cstack
  1497 ;; Tracked objects:
  1498 ;;		On entry : 0/0
  1499 ;;		On exit  : 0/0
  1500 ;;		Unchanged: 0/0
  1501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1506 ;;Total ram usage:        0 bytes
  1507 ;; Hardware stack levels used: 1
  1508 ;; Hardware stack levels required when called: 4
  1509 ;; This function calls:
  1510 ;;		_INT0_SetInterruptHandler
  1511 ;;		_INT1_SetInterruptHandler
  1512 ;;		_INT2_SetInterruptHandler
  1513 ;; This function is called by:
  1514 ;;		_SYSTEM_Initialize
  1515 ;; This function uses a non-reentrant model
  1516 ;;
  1517                           
  1518                           	psect	text7
  1519   010B9A                     __ptext7:
  1520                           	callstack 0
  1521   010B9A                     _INTERRUPT_Initialize:
  1522                           	callstack 25
  1523   010B9A                     
  1524                           ;mcc_generated_files/system/src/interrupt.c: 45:     INTCONbits.IPEN = 0;
  1525   010B9A  9AF2               	bcf	242,5,c	;volatile
  1526                           
  1527                           ;mcc_generated_files/system/src/interrupt.c: 49:     (PIR0bits.INT0IF = 0);
  1528   010B9C  010E               	movlb	14	; () banked
  1529   010B9E  91C5               	bcf	197,0,b	;volatile
  1530                           
  1531                           ;mcc_generated_files/system/src/interrupt.c: 50:     (INTCONbits.INT0EDG = 1);
  1532   010BA0  80F2               	bsf	242,0,c	;volatile
  1533   010BA2                     
  1534                           ; BSR set to: 14
  1535                           ;mcc_generated_files/system/src/interrupt.c: 52:     INT0_SetInterruptHandler(INT0_Defau
      +                          ltInterruptHandler);
  1536   010BA2  0E00               	movlw	0
  1537   010BA4  6E03               	movwf	INT0_SetInterruptHandler@InterruptHandler^0,c
  1538   010BA6  0E00               	movlw	0
  1539   010BA8  6E04               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^0,c
  1540   010BAA  0E00               	movlw	0
  1541   010BAC  6E05               	movwf	(INT0_SetInterruptHandler@InterruptHandler+2)^0,c
  1542   010BAE  EC8C  F087         	call	_INT0_SetInterruptHandler	;wreg free
  1543   010BB2                     
  1544                           ;mcc_generated_files/system/src/interrupt.c: 57:     (PIR0bits.INT1IF = 0);
  1545   010BB2  010E               	movlb	14	; () banked
  1546   010BB4  93C5               	bcf	197,1,b	;volatile
  1547   010BB6                     
  1548                           ; BSR set to: 14
  1549                           ;mcc_generated_files/system/src/interrupt.c: 58:     (INTCONbits.INT1EDG = 1);
  1550   010BB6  82F2               	bsf	242,1,c	;volatile
  1551                           
  1552                           ;mcc_generated_files/system/src/interrupt.c: 60:     INT1_SetInterruptHandler(INT1_Defau
      +                          ltInterruptHandler);
  1553   010BB8  0E00               	movlw	0
  1554   010BBA  6E03               	movwf	INT1_SetInterruptHandler@InterruptHandler^0,c
  1555   010BBC  0E00               	movlw	0
  1556   010BBE  6E04               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)^0,c
  1557   010BC0  0E00               	movlw	0
  1558   010BC2  6E05               	movwf	(INT1_SetInterruptHandler@InterruptHandler+2)^0,c
  1559   010BC4  EC85  F087         	call	_INT1_SetInterruptHandler	;wreg free
  1560   010BC8                     
  1561                           ;mcc_generated_files/system/src/interrupt.c: 65:     (PIR0bits.INT2IF = 0);
  1562   010BC8  010E               	movlb	14	; () banked
  1563   010BCA  95C5               	bcf	197,2,b	;volatile
  1564   010BCC                     
  1565                           ; BSR set to: 14
  1566                           ;mcc_generated_files/system/src/interrupt.c: 66:     (INTCONbits.INT2EDG = 1);
  1567   010BCC  84F2               	bsf	242,2,c	;volatile
  1568                           
  1569                           ;mcc_generated_files/system/src/interrupt.c: 68:     INT2_SetInterruptHandler(INT2_Defau
      +                          ltInterruptHandler);
  1570   010BCE  0E00               	movlw	0
  1571   010BD0  6E03               	movwf	INT2_SetInterruptHandler@InterruptHandler^0,c
  1572   010BD2  0E00               	movlw	0
  1573   010BD4  6E04               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)^0,c
  1574   010BD6  0E00               	movlw	0
  1575   010BD8  6E05               	movwf	(INT2_SetInterruptHandler@InterruptHandler+2)^0,c
  1576   010BDA  EC7E  F087         	call	_INT2_SetInterruptHandler	;wreg free
  1577   010BDE  0012               	return		;funcret
  1578   010BE0                     __end_of_INTERRUPT_Initialize:
  1579                           	callstack 0
  1580                           
  1581 ;; *************** function _INT2_SetInterruptHandler *****************
  1582 ;; Defined at:
  1583 ;;		line 178 in file "mcc_generated_files/system/src/interrupt.c"
  1584 ;; Parameters:    Size  Location     Type
  1585 ;;  InterruptHan    3    2[COMRAM] PTR FTN()void 
  1586 ;;		 -> INT2_DefaultInterruptHandler(1), 
  1587 ;; Auto vars:     Size  Location     Type
  1588 ;;		None
  1589 ;; Return value:  Size  Location     Type
  1590 ;;                  1    wreg      void 
  1591 ;; Registers used:
  1592 ;;		wreg, status,2, status,0
  1593 ;; Tracked objects:
  1594 ;;		On entry : 0/0
  1595 ;;		On exit  : 0/0
  1596 ;;		Unchanged: 0/0
  1597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1598 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1601 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1602 ;;Total ram usage:        3 bytes
  1603 ;; Hardware stack levels used: 1
  1604 ;; Hardware stack levels required when called: 3
  1605 ;; This function calls:
  1606 ;;		Nothing
  1607 ;; This function is called by:
  1608 ;;		_INTERRUPT_Initialize
  1609 ;; This function uses a non-reentrant model
  1610 ;;
  1611                           
  1612                           	psect	text8
  1613   010EFC                     __ptext8:
  1614                           	callstack 0
  1615   010EFC                     _INT2_SetInterruptHandler:
  1616                           	callstack 25
  1617   010EFC                     
  1618                           ;mcc_generated_files/system/src/interrupt.c: 179:     INT2_InterruptHandler = InterruptH
      +                          andler;
  1619   010EFC  C003  F038         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  1620   010F00  C004  F039         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  1621   010F04  C005  F03A         	movff	INT2_SetInterruptHandler@InterruptHandler+2,_INT2_InterruptHandler+2
  1622   010F08  0012               	return		;funcret
  1623   010F0A                     __end_of_INT2_SetInterruptHandler:
  1624                           	callstack 0
  1625                           
  1626 ;; *************** function _INT1_SetInterruptHandler *****************
  1627 ;; Defined at:
  1628 ;;		line 152 in file "mcc_generated_files/system/src/interrupt.c"
  1629 ;; Parameters:    Size  Location     Type
  1630 ;;  InterruptHan    3    2[COMRAM] PTR FTN()void 
  1631 ;;		 -> INT1_DefaultInterruptHandler(1), 
  1632 ;; Auto vars:     Size  Location     Type
  1633 ;;		None
  1634 ;; Return value:  Size  Location     Type
  1635 ;;                  1    wreg      void 
  1636 ;; Registers used:
  1637 ;;		wreg, status,2, status,0
  1638 ;; Tracked objects:
  1639 ;;		On entry : 0/0
  1640 ;;		On exit  : 0/0
  1641 ;;		Unchanged: 0/0
  1642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1643 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1646 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1647 ;;Total ram usage:        3 bytes
  1648 ;; Hardware stack levels used: 1
  1649 ;; Hardware stack levels required when called: 3
  1650 ;; This function calls:
  1651 ;;		Nothing
  1652 ;; This function is called by:
  1653 ;;		_INTERRUPT_Initialize
  1654 ;; This function uses a non-reentrant model
  1655 ;;
  1656                           
  1657                           	psect	text9
  1658   010F0A                     __ptext9:
  1659                           	callstack 0
  1660   010F0A                     _INT1_SetInterruptHandler:
  1661                           	callstack 25
  1662   010F0A                     
  1663                           ;mcc_generated_files/system/src/interrupt.c: 153:     INT1_InterruptHandler = InterruptH
      +                          andler;
  1664   010F0A  C003  F03B         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  1665   010F0E  C004  F03C         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  1666   010F12  C005  F03D         	movff	INT1_SetInterruptHandler@InterruptHandler+2,_INT1_InterruptHandler+2
  1667   010F16  0012               	return		;funcret
  1668   010F18                     __end_of_INT1_SetInterruptHandler:
  1669                           	callstack 0
  1670                           
  1671 ;; *************** function _INT0_SetInterruptHandler *****************
  1672 ;; Defined at:
  1673 ;;		line 126 in file "mcc_generated_files/system/src/interrupt.c"
  1674 ;; Parameters:    Size  Location     Type
  1675 ;;  InterruptHan    3    2[COMRAM] PTR FTN()void 
  1676 ;;		 -> INT0_DefaultInterruptHandler(1), 
  1677 ;; Auto vars:     Size  Location     Type
  1678 ;;		None
  1679 ;; Return value:  Size  Location     Type
  1680 ;;                  1    wreg      void 
  1681 ;; Registers used:
  1682 ;;		wreg, status,2, status,0
  1683 ;; Tracked objects:
  1684 ;;		On entry : 0/0
  1685 ;;		On exit  : 0/0
  1686 ;;		Unchanged: 0/0
  1687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1688 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1691 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1692 ;;Total ram usage:        3 bytes
  1693 ;; Hardware stack levels used: 1
  1694 ;; Hardware stack levels required when called: 3
  1695 ;; This function calls:
  1696 ;;		Nothing
  1697 ;; This function is called by:
  1698 ;;		_INTERRUPT_Initialize
  1699 ;; This function uses a non-reentrant model
  1700 ;;
  1701                           
  1702                           	psect	text10
  1703   010F18                     __ptext10:
  1704                           	callstack 0
  1705   010F18                     _INT0_SetInterruptHandler:
  1706                           	callstack 25
  1707   010F18                     
  1708                           ;mcc_generated_files/system/src/interrupt.c: 127:     INT0_InterruptHandler = InterruptH
      +                          andler;
  1709   010F18  C003  F03E         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  1710   010F1C  C004  F03F         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  1711   010F20  C005  F040         	movff	INT0_SetInterruptHandler@InterruptHandler+2,_INT0_InterruptHandler+2
  1712   010F24  0012               	return		;funcret
  1713   010F26                     __end_of_INT0_SetInterruptHandler:
  1714                           	callstack 0
  1715                           
  1716 ;; *************** function _EUSART1_Initialize *****************
  1717 ;; Defined at:
  1718 ;;		line 94 in file "mcc_generated_files/uart/src/eusart1.c"
  1719 ;; Parameters:    Size  Location     Type
  1720 ;;		None
  1721 ;; Auto vars:     Size  Location     Type
  1722 ;;		None
  1723 ;; Return value:  Size  Location     Type
  1724 ;;                  1    wreg      void 
  1725 ;; Registers used:
  1726 ;;		wreg, status,2, status,0, cstack
  1727 ;; Tracked objects:
  1728 ;;		On entry : 0/0
  1729 ;;		On exit  : 0/0
  1730 ;;		Unchanged: 0/0
  1731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1736 ;;Total ram usage:        0 bytes
  1737 ;; Hardware stack levels used: 1
  1738 ;; Hardware stack levels required when called: 4
  1739 ;; This function calls:
  1740 ;;		_EUSART1_FramingErrorCallbackRegister
  1741 ;;		_EUSART1_OverrunErrorCallbackRegister
  1742 ;; This function is called by:
  1743 ;;		_SYSTEM_Initialize
  1744 ;; This function uses a non-reentrant model
  1745 ;;
  1746                           
  1747                           	psect	text11
  1748   010BE0                     __ptext11:
  1749                           	callstack 0
  1750   010BE0                     _EUSART1_Initialize:
  1751                           	callstack 25
  1752   010BE0                     
  1753                           ;mcc_generated_files/uart/src/eusart1.c: 99:     BAUD1CON = 0x48;
  1754   010BE0  0E48               	movlw	72
  1755   010BE2  6E9E               	movwf	158,c	;volatile
  1756                           
  1757                           ;mcc_generated_files/uart/src/eusart1.c: 101:     RC1STA = 0x90;
  1758   010BE4  0E90               	movlw	144
  1759   010BE6  6E9C               	movwf	156,c	;volatile
  1760                           
  1761                           ;mcc_generated_files/uart/src/eusart1.c: 103:     TX1STA = 0x26;
  1762   010BE8  0E26               	movlw	38
  1763   010BEA  6E9D               	movwf	157,c	;volatile
  1764                           
  1765                           ;mcc_generated_files/uart/src/eusart1.c: 105:     SP1BRGL = 0x8A;
  1766   010BEC  0E8A               	movlw	138
  1767   010BEE  6E9A               	movwf	154,c	;volatile
  1768                           
  1769                           ;mcc_generated_files/uart/src/eusart1.c: 107:     SP1BRGH = 0x0;
  1770   010BF0  0E00               	movlw	0
  1771   010BF2  6E9B               	movwf	155,c	;volatile
  1772   010BF4                     
  1773                           ;mcc_generated_files/uart/src/eusart1.c: 109:     EUSART1_FramingErrorCallbackRegister(E
      +                          USART1_DefaultFramingErrorCallback);
  1774   010BF4  0E00               	movlw	0
  1775   010BF6  6E03               	movwf	EUSART1_FramingErrorCallbackRegister@callbackHandler^0,c
  1776   010BF8  0E00               	movlw	0
  1777   010BFA  6E04               	movwf	(EUSART1_FramingErrorCallbackRegister@callbackHandler+1)^0,c
  1778   010BFC  0E00               	movlw	0
  1779   010BFE  6E05               	movwf	(EUSART1_FramingErrorCallbackRegister@callbackHandler+2)^0,c
  1780   010C00  ECEF  F086         	call	_EUSART1_FramingErrorCallbackRegister	;wreg free
  1781   010C04                     
  1782                           ;mcc_generated_files/uart/src/eusart1.c: 110:     EUSART1_OverrunErrorCallbackRegister(E
      +                          USART1_DefaultOverrunErrorCallback);
  1783   010C04  0E00               	movlw	0
  1784   010C06  6E03               	movwf	EUSART1_OverrunErrorCallbackRegister@callbackHandler^0,c
  1785   010C08  0E00               	movlw	0
  1786   010C0A  6E04               	movwf	(EUSART1_OverrunErrorCallbackRegister@callbackHandler+1)^0,c
  1787   010C0C  0E00               	movlw	0
  1788   010C0E  6E05               	movwf	(EUSART1_OverrunErrorCallbackRegister@callbackHandler+2)^0,c
  1789   010C10  ECDE  F086         	call	_EUSART1_OverrunErrorCallbackRegister	;wreg free
  1790                           
  1791                           ;mcc_generated_files/uart/src/eusart1.c: 111:     eusart1RxLastError.status = 0;
  1792   010C14  0E00               	movlw	0
  1793   010C16  6E46               	movwf	(_eusart1RxLastError+1)^0,c	;volatile
  1794   010C18  0E00               	movlw	0
  1795   010C1A  6E45               	movwf	_eusart1RxLastError^0,c	;volatile
  1796   010C1C  0012               	return		;funcret
  1797   010C1E                     __end_of_EUSART1_Initialize:
  1798                           	callstack 0
  1799                           
  1800 ;; *************** function _EUSART1_OverrunErrorCallbackRegister *****************
  1801 ;; Defined at:
  1802 ;;		line 272 in file "mcc_generated_files/uart/src/eusart1.c"
  1803 ;; Parameters:    Size  Location     Type
  1804 ;;  callbackHand    3    2[COMRAM] PTR FTN()void 
  1805 ;;		 -> EUSART1_DefaultOverrunErrorCallback(1), 
  1806 ;; Auto vars:     Size  Location     Type
  1807 ;;		None
  1808 ;; Return value:  Size  Location     Type
  1809 ;;                  1    wreg      void 
  1810 ;; Registers used:
  1811 ;;		wreg, status,2, status,0
  1812 ;; Tracked objects:
  1813 ;;		On entry : 0/0
  1814 ;;		On exit  : 0/0
  1815 ;;		Unchanged: 0/0
  1816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1817 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1820 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1821 ;;Total ram usage:        3 bytes
  1822 ;; Hardware stack levels used: 1
  1823 ;; Hardware stack levels required when called: 3
  1824 ;; This function calls:
  1825 ;;		Nothing
  1826 ;; This function is called by:
  1827 ;;		_EUSART1_Initialize
  1828 ;; This function uses a non-reentrant model
  1829 ;;
  1830                           
  1831                           	psect	text12
  1832   010DBC                     __ptext12:
  1833                           	callstack 0
  1834   010DBC                     _EUSART1_OverrunErrorCallbackRegister:
  1835                           	callstack 25
  1836   010DBC                     
  1837                           ;mcc_generated_files/uart/src/eusart1.c: 272: void EUSART1_OverrunErrorCallbackRegister(
      +                          void (* callbackHandler)(void));mcc_generated_files/uart/src/eusart1.c: 273: {;mcc_gener
      +                          ated_files/uart/src/eusart1.c: 274:     if(((void*)0) != callbackHandler)
  1838   010DBC  5003               	movf	EUSART1_OverrunErrorCallbackRegister@callbackHandler^0,w,c
  1839   010DBE  1004               	iorwf	(EUSART1_OverrunErrorCallbackRegister@callbackHandler+1)^0,w,c
  1840   010DC0  1005               	iorwf	(EUSART1_OverrunErrorCallbackRegister@callbackHandler+2)^0,w,c
  1841   010DC2  B4D8               	btfsc	status,2,c
  1842   010DC4  EFE6  F086         	goto	u1321
  1843   010DC8  EFE8  F086         	goto	u1320
  1844   010DCC                     u1321:
  1845   010DCC  EFEE  F086         	goto	l699
  1846   010DD0                     u1320:
  1847   010DD0                     
  1848                           ;mcc_generated_files/uart/src/eusart1.c: 275:     {;mcc_generated_files/uart/src/eusart1
      +                          .c: 276:         EUSART1_OverrunErrorHandler = callbackHandler;
  1849   010DD0  C003  F02C         	movff	EUSART1_OverrunErrorCallbackRegister@callbackHandler,_EUSART1_OverrunErrorHandler
  1850   010DD4  C004  F02D         	movff	EUSART1_OverrunErrorCallbackRegister@callbackHandler+1,_EUSART1_OverrunErrorHandl
      +                          er+1
  1851   010DD8  C005  F02E         	movff	EUSART1_OverrunErrorCallbackRegister@callbackHandler+2,_EUSART1_OverrunErrorHandl
      +                          er+2
  1852   010DDC                     l699:
  1853   010DDC  0012               	return		;funcret
  1854   010DDE                     __end_of_EUSART1_OverrunErrorCallbackRegister:
  1855                           	callstack 0
  1856                           
  1857 ;; *************** function _EUSART1_FramingErrorCallbackRegister *****************
  1858 ;; Defined at:
  1859 ;;		line 264 in file "mcc_generated_files/uart/src/eusart1.c"
  1860 ;; Parameters:    Size  Location     Type
  1861 ;;  callbackHand    3    2[COMRAM] PTR FTN()void 
  1862 ;;		 -> EUSART1_DefaultFramingErrorCallback(1), 
  1863 ;; Auto vars:     Size  Location     Type
  1864 ;;		None
  1865 ;; Return value:  Size  Location     Type
  1866 ;;                  1    wreg      void 
  1867 ;; Registers used:
  1868 ;;		wreg, status,2, status,0
  1869 ;; Tracked objects:
  1870 ;;		On entry : 0/0
  1871 ;;		On exit  : 0/0
  1872 ;;		Unchanged: 0/0
  1873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1874 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1877 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1878 ;;Total ram usage:        3 bytes
  1879 ;; Hardware stack levels used: 1
  1880 ;; Hardware stack levels required when called: 3
  1881 ;; This function calls:
  1882 ;;		Nothing
  1883 ;; This function is called by:
  1884 ;;		_EUSART1_Initialize
  1885 ;; This function uses a non-reentrant model
  1886 ;;
  1887                           
  1888                           	psect	text13
  1889   010DDE                     __ptext13:
  1890                           	callstack 0
  1891   010DDE                     _EUSART1_FramingErrorCallbackRegister:
  1892                           	callstack 25
  1893   010DDE                     
  1894                           ;mcc_generated_files/uart/src/eusart1.c: 264: void EUSART1_FramingErrorCallbackRegister(
      +                          void (* callbackHandler)(void));mcc_generated_files/uart/src/eusart1.c: 265: {;mcc_gener
      +                          ated_files/uart/src/eusart1.c: 266:     if(((void*)0) != callbackHandler)
  1895   010DDE  5003               	movf	EUSART1_FramingErrorCallbackRegister@callbackHandler^0,w,c
  1896   010DE0  1004               	iorwf	(EUSART1_FramingErrorCallbackRegister@callbackHandler+1)^0,w,c
  1897   010DE2  1005               	iorwf	(EUSART1_FramingErrorCallbackRegister@callbackHandler+2)^0,w,c
  1898   010DE4  B4D8               	btfsc	status,2,c
  1899   010DE6  EFF7  F086         	goto	u1311
  1900   010DEA  EFF9  F086         	goto	u1310
  1901   010DEE                     u1311:
  1902   010DEE  EFFF  F086         	goto	l695
  1903   010DF2                     u1310:
  1904   010DF2                     
  1905                           ;mcc_generated_files/uart/src/eusart1.c: 267:     {;mcc_generated_files/uart/src/eusart1
      +                          .c: 268:         EUSART1_FramingErrorHandler = callbackHandler;
  1906   010DF2  C003  F02F         	movff	EUSART1_FramingErrorCallbackRegister@callbackHandler,_EUSART1_FramingErrorHandler
  1907   010DF6  C004  F030         	movff	EUSART1_FramingErrorCallbackRegister@callbackHandler+1,_EUSART1_FramingErrorHandl
      +                          er+1
  1908   010DFA  C005  F031         	movff	EUSART1_FramingErrorCallbackRegister@callbackHandler+2,_EUSART1_FramingErrorHandl
      +                          er+2
  1909   010DFE                     l695:
  1910   010DFE  0012               	return		;funcret
  1911   010E00                     __end_of_EUSART1_FramingErrorCallbackRegister:
  1912                           	callstack 0
  1913                           
  1914 ;; *************** function _CLOCK_Initialize *****************
  1915 ;; Defined at:
  1916 ;;		line 37 in file "mcc_generated_files/system/src/clock.c"
  1917 ;; Parameters:    Size  Location     Type
  1918 ;;		None
  1919 ;; Auto vars:     Size  Location     Type
  1920 ;;		None
  1921 ;; Return value:  Size  Location     Type
  1922 ;;                  1    wreg      void 
  1923 ;; Registers used:
  1924 ;;		wreg, status,2
  1925 ;; Tracked objects:
  1926 ;;		On entry : 0/0
  1927 ;;		On exit  : 0/0
  1928 ;;		Unchanged: 0/0
  1929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1934 ;;Total ram usage:        0 bytes
  1935 ;; Hardware stack levels used: 1
  1936 ;; Hardware stack levels required when called: 3
  1937 ;; This function calls:
  1938 ;;		Nothing
  1939 ;; This function is called by:
  1940 ;;		_SYSTEM_Initialize
  1941 ;; This function uses a non-reentrant model
  1942 ;;
  1943                           
  1944                           	psect	text14
  1945   010E76                     __ptext14:
  1946                           	callstack 0
  1947   010E76                     _CLOCK_Initialize:
  1948                           	callstack 26
  1949   010E76                     
  1950                           ;mcc_generated_files/system/src/clock.c: 41:     OSCCON1 = 0x60;
  1951   010E76  0E60               	movlw	96
  1952   010E78  010E               	movlb	14	; () banked
  1953   010E7A  6FD3               	movwf	211,b	;volatile
  1954                           
  1955                           ;mcc_generated_files/system/src/clock.c: 43:     OSCCON3 = 0x0;
  1956   010E7C  0E00               	movlw	0
  1957   010E7E  6FD5               	movwf	213,b	;volatile
  1958                           
  1959                           ;mcc_generated_files/system/src/clock.c: 45:     OSCEN = 0x0;
  1960   010E80  0E00               	movlw	0
  1961   010E82  6FD7               	movwf	215,b	;volatile
  1962                           
  1963                           ;mcc_generated_files/system/src/clock.c: 47:     OSCFRQ = 0x8;
  1964   010E84  0E08               	movlw	8
  1965   010E86  6FD9               	movwf	217,b	;volatile
  1966                           
  1967                           ;mcc_generated_files/system/src/clock.c: 49:     OSCTUNE = 0x0;
  1968   010E88  0E00               	movlw	0
  1969   010E8A  6FD8               	movwf	216,b	;volatile
  1970   010E8C                     
  1971                           ; BSR set to: 14
  1972   010E8C  0012               	return		;funcret
  1973   010E8E                     __end_of_CLOCK_Initialize:
  1974                           	callstack 0
  1975                           
  1976 ;; *************** function _ADCC_Initialize *****************
  1977 ;; Defined at:
  1978 ;;		line 47 in file "mcc_generated_files/adc/src/adcc.c"
  1979 ;; Parameters:    Size  Location     Type
  1980 ;;		None
  1981 ;; Auto vars:     Size  Location     Type
  1982 ;;		None
  1983 ;; Return value:  Size  Location     Type
  1984 ;;                  1    wreg      void 
  1985 ;; Registers used:
  1986 ;;		wreg, status,2, status,0, cstack
  1987 ;; Tracked objects:
  1988 ;;		On entry : 0/0
  1989 ;;		On exit  : 0/0
  1990 ;;		Unchanged: 0/0
  1991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1996 ;;Total ram usage:        0 bytes
  1997 ;; Hardware stack levels used: 1
  1998 ;; Hardware stack levels required when called: 4
  1999 ;; This function calls:
  2000 ;;		_ADCC_SetADTIInterruptHandler
  2001 ;; This function is called by:
  2002 ;;		_SYSTEM_Initialize
  2003 ;; This function uses a non-reentrant model
  2004 ;;
  2005                           
  2006                           	psect	text15
  2007   010A8A                     __ptext15:
  2008                           	callstack 0
  2009   010A8A                     _ADCC_Initialize:
  2010                           	callstack 25
  2011   010A8A                     
  2012                           ;mcc_generated_files/adc/src/adcc.c: 51:     ADLTHL = 0x0;
  2013   010A8A  0E00               	movlw	0
  2014   010A8C  6E65               	movwf	101,c	;volatile
  2015                           
  2016                           ;mcc_generated_files/adc/src/adcc.c: 53:     ADLTHH = 0x0;
  2017   010A8E  0E00               	movlw	0
  2018   010A90  6E66               	movwf	102,c	;volatile
  2019                           
  2020                           ;mcc_generated_files/adc/src/adcc.c: 55:     ADUTHL = 0x0;
  2021   010A92  0E00               	movlw	0
  2022   010A94  6E67               	movwf	103,c	;volatile
  2023                           
  2024                           ;mcc_generated_files/adc/src/adcc.c: 57:     ADUTHH = 0x0;
  2025   010A96  0E00               	movlw	0
  2026   010A98  6E68               	movwf	104,c	;volatile
  2027                           
  2028                           ;mcc_generated_files/adc/src/adcc.c: 59:     ADSTPTL = 0x0;
  2029   010A9A  0E00               	movlw	0
  2030   010A9C  6E63               	movwf	99,c	;volatile
  2031                           
  2032                           ;mcc_generated_files/adc/src/adcc.c: 61:     ADSTPTH = 0x0;
  2033   010A9E  0E00               	movlw	0
  2034   010AA0  6E64               	movwf	100,c	;volatile
  2035                           
  2036                           ;mcc_generated_files/adc/src/adcc.c: 63:     ADRPT = 0x0;
  2037   010AA2  0E00               	movlw	0
  2038   010AA4  6E61               	movwf	97,c	;volatile
  2039                           
  2040                           ;mcc_generated_files/adc/src/adcc.c: 65:     ADPCH = 0x0;
  2041   010AA6  0E00               	movlw	0
  2042   010AA8  010F               	movlb	15	; () banked
  2043   010AAA  6F5A               	movwf	90,b	;volatile
  2044                           
  2045                           ;mcc_generated_files/adc/src/adcc.c: 67:     ADCAP = 0x0;
  2046   010AAC  0E00               	movlw	0
  2047   010AAE  6F58               	movwf	88,b	;volatile
  2048                           
  2049                           ;mcc_generated_files/adc/src/adcc.c: 69:     ADPRE = 0x0;
  2050   010AB0  0E00               	movlw	0
  2051   010AB2  6F59               	movwf	89,b	;volatile
  2052                           
  2053                           ;mcc_generated_files/adc/src/adcc.c: 71:     ADCON1 = 0x0;
  2054   010AB4  0E00               	movlw	0
  2055   010AB6  6F54               	movwf	84,b	;volatile
  2056                           
  2057                           ;mcc_generated_files/adc/src/adcc.c: 73:     ADCON2 = 0x4;
  2058   010AB8  0E04               	movlw	4
  2059   010ABA  6F55               	movwf	85,b	;volatile
  2060                           
  2061                           ;mcc_generated_files/adc/src/adcc.c: 75:     ADCON3 = 0x50;
  2062   010ABC  0E50               	movlw	80
  2063   010ABE  6F56               	movwf	86,b	;volatile
  2064                           
  2065                           ;mcc_generated_files/adc/src/adcc.c: 77:     ADSTAT = 0x0;
  2066   010AC0  0E00               	movlw	0
  2067   010AC2  6E60               	movwf	96,c	;volatile
  2068                           
  2069                           ;mcc_generated_files/adc/src/adcc.c: 79:     ADREF = 0x0;
  2070   010AC4  0E00               	movlw	0
  2071   010AC6  6F53               	movwf	83,b	;volatile
  2072                           
  2073                           ;mcc_generated_files/adc/src/adcc.c: 81:     ADACT = 0x2;
  2074   010AC8  0E02               	movlw	2
  2075   010ACA  6F51               	movwf	81,b	;volatile
  2076                           
  2077                           ;mcc_generated_files/adc/src/adcc.c: 83:     ADCLK = 0x1F;
  2078   010ACC  0E1F               	movlw	31
  2079   010ACE  6F52               	movwf	82,b	;volatile
  2080                           
  2081                           ;mcc_generated_files/adc/src/adcc.c: 85:     ADCON0 = 0x85;
  2082   010AD0  0E85               	movlw	133
  2083   010AD2  6F5B               	movwf	91,b	;volatile
  2084                           
  2085                           ;mcc_generated_files/adc/src/adcc.c: 87:     ADACQ = 0x0;
  2086   010AD4  0E00               	movlw	0
  2087   010AD6  6F57               	movwf	87,b	;volatile
  2088   010AD8                     
  2089                           ; BSR set to: 15
  2090                           ;mcc_generated_files/adc/src/adcc.c: 90:     PIR1bits.ADIF = 0;
  2091   010AD8  010E               	movlb	14	; () banked
  2092   010ADA  91C6               	bcf	198,0,b	;volatile
  2093   010ADC                     
  2094                           ; BSR set to: 14
  2095                           ;mcc_generated_files/adc/src/adcc.c: 93:     PIR1bits.ADTIF = 0;
  2096   010ADC  93C6               	bcf	198,1,b	;volatile
  2097   010ADE                     
  2098                           ; BSR set to: 14
  2099                           ;mcc_generated_files/adc/src/adcc.c: 95:     ADCC_SetADTIInterruptHandler(ADCC_DefaultAD
      +                          TI_ISR);
  2100   010ADE  0E6C               	movlw	low _ADCC_DefaultADTI_ISR
  2101   010AE0  6E03               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler^0,c
  2102   010AE2  0E0F               	movlw	high _ADCC_DefaultADTI_ISR
  2103   010AE4  6E04               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)^0,c
  2104   010AE6  0E01               	movlw	low (_ADCC_DefaultADTI_ISR shr (0+16))
  2105   010AE8  6E05               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+2)^0,c
  2106   010AEA  EC93  F087         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  2107   010AEE                     
  2108                           ;mcc_generated_files/adc/src/adcc.c: 97:     PIE1bits.ADTIE = 1;
  2109   010AEE  010E               	movlb	14	; () banked
  2110   010AF0  83BE               	bsf	190,1,b	;volatile
  2111   010AF2                     
  2112                           ; BSR set to: 14
  2113   010AF2  0012               	return		;funcret
  2114   010AF4                     __end_of_ADCC_Initialize:
  2115                           	callstack 0
  2116                           
  2117 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
  2118 ;; Defined at:
  2119 ;;		line 296 in file "mcc_generated_files/adc/src/adcc.c"
  2120 ;; Parameters:    Size  Location     Type
  2121 ;;  InterruptHan    3    2[COMRAM] PTR FTN()void 
  2122 ;;		 -> ADCUserInterrupt(1), ADCC_DefaultADTI_ISR(1), 
  2123 ;; Auto vars:     Size  Location     Type
  2124 ;;		None
  2125 ;; Return value:  Size  Location     Type
  2126 ;;                  1    wreg      void 
  2127 ;; Registers used:
  2128 ;;		wreg, status,2, status,0
  2129 ;; Tracked objects:
  2130 ;;		On entry : 0/0
  2131 ;;		On exit  : 0/0
  2132 ;;		Unchanged: 0/0
  2133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2134 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2137 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2138 ;;Total ram usage:        3 bytes
  2139 ;; Hardware stack levels used: 1
  2140 ;; Hardware stack levels required when called: 3
  2141 ;; This function calls:
  2142 ;;		Nothing
  2143 ;; This function is called by:
  2144 ;;		_ADCC_Initialize
  2145 ;;		_main
  2146 ;; This function uses a non-reentrant model
  2147 ;;
  2148                           
  2149                           	psect	text16
  2150   010F26                     __ptext16:
  2151                           	callstack 0
  2152   010F26                     _ADCC_SetADTIInterruptHandler:
  2153                           	callstack 25
  2154   010F26                     
  2155                           ;mcc_generated_files/adc/src/adcc.c: 296: void ADCC_SetADTIInterruptHandler(void (* Inte
      +                          rruptHandler)(void));mcc_generated_files/adc/src/adcc.c: 297: {;mcc_generated_files/adc/
      +                          src/adcc.c: 298:     ADCC_ADTI_InterruptHandler = InterruptHandler;
  2156   010F26  C003  F04E         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler,_ADCC_ADTI_InterruptHandler
  2157   010F2A  C004  F04F         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+1,_ADCC_ADTI_InterruptHandler+1
  2158   010F2E  C005  F050         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+2,_ADCC_ADTI_InterruptHandler+2
  2159   010F32  0012               	return		;funcret
  2160   010F34                     __end_of_ADCC_SetADTIInterruptHandler:
  2161                           	callstack 0
  2162                           
  2163 ;; *************** function _ApplicationTask *****************
  2164 ;; Defined at:
  2165 ;;		line 21 in file "application.c"
  2166 ;; Parameters:    Size  Location     Type
  2167 ;;		None
  2168 ;; Auto vars:     Size  Location     Type
  2169 ;;		None
  2170 ;; Return value:  Size  Location     Type
  2171 ;;                  1    wreg      void 
  2172 ;; Registers used:
  2173 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, cstack
  2174 ;; Tracked objects:
  2175 ;;		On entry : 0/0
  2176 ;;		On exit  : 0/0
  2177 ;;		Unchanged: 0/0
  2178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2183 ;;Total ram usage:        0 bytes
  2184 ;; Hardware stack levels used: 1
  2185 ;; Hardware stack levels required when called: 9
  2186 ;; This function calls:
  2187 ;;		_ADCC_HasErrorCrossedLowerThreshold
  2188 ;;		_ADCC_HasErrorCrossedUpperThreshold
  2189 ;;		_ADCC_Initialize_AverageMode
  2190 ;;		_ADCC_Initialize_BasicMode
  2191 ;;		_ADCC_Initialize_BurstAverageMode
  2192 ;;		_ADCC_Initialize_LowPassFilterMode
  2193 ;;		_ADCC_SetChannel
  2194 ;;		_EUSART1_IsTxReady
  2195 ;;		_EUSART1_Write
  2196 ;;		_TMR0_Reload
  2197 ;;		_TMR0_Start
  2198 ;;		_TMR0_Stop
  2199 ;;		_TMR4_PeriodCountSet
  2200 ;;		_TMR4_Start
  2201 ;;		_TMR4_Stop
  2202 ;;		_printf
  2203 ;; This function is called by:
  2204 ;;		_main
  2205 ;; This function uses a non-reentrant model
  2206 ;;
  2207                           
  2208                           	psect	text17
  2209   010000                     __ptext17:
  2210                           	callstack 0
  2211   010000                     _ApplicationTask:
  2212                           	callstack 21
  2213   010000                     
  2214                           ;application.c: 25:     switch (count)
  2215   010000  EFC0  F082         	goto	l2739
  2216   010004                     l2603:
  2217                           
  2218                           ;application.c: 29:             if (!basicModeInit)
  2219   010004  504B               	movf	_basicModeInit^0,w,c	;volatile
  2220   010006  A4D8               	btfss	status,2,c
  2221   010008  EF08  F080         	goto	u1341
  2222   01000C  EF0A  F080         	goto	u1340
  2223   010010                     u1341:
  2224   010010  EF59  F080         	goto	l2619
  2225   010014                     u1340:
  2226   010014                     
  2227                           ;application.c: 30:             {;application.c: 32:                 Timer0.Stop();
  2228   010014  0E39               	movlw	low (_Timer0+6)
  2229   010016  6EF6               	movwf	tblptrl,c
  2230   010018  0EFF               	movlw	high (_Timer0+6)
  2231   01001A  6EF7               	movwf	tblptrh,c
  2232   01001C                     	if	0	;tblptru may be non-zero
  2233   01001C                     	endif
  2234   01001C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2235   01001C  0E00               	movlw	low (__mediumconst shr (0+16))
  2236   01001E  6EF8               	movwf	tblptru,c
  2237   010020                     	endif
  2238   010020  D802               	call	u1358
  2239   010022  EF20  F080         	goto	u1359
  2240   010026                     u1358:
  2241   010026  0005               	push	
  2242   010028  6EFA               	movwf	pclath,c
  2243   01002A  0009               	tblrd		*+
  2244   01002C  50F5               	movf	tablat,w,c
  2245   01002E  6EFD               	movwf	tosl,c
  2246   010030  0009               	tblrd		*+
  2247   010032  50F5               	movf	tablat,w,c
  2248   010034  6EFE               	movwf	tosh,c
  2249   010036  0009               	tblrd		*+
  2250   010038  50F5               	movf	tablat,w,c
  2251   01003A  6EFF               	movwf	tosu,c
  2252   01003C  50FA               	movf	pclath,w,c
  2253   01003E  0012               	return		;indir
  2254   010040                     u1359:
  2255                           
  2256                           ;application.c: 33:                 Timer0.PeriodCountSet(0x13);
  2257   010040  0E00               	movlw	0
  2258   010042  6E04               	movwf	(TMR0_Reload@periodVal+1)^0,c
  2259   010044  0E13               	movlw	19
  2260   010046  6E03               	movwf	TMR0_Reload@periodVal^0,c
  2261   010048  0E3C               	movlw	low (_Timer0+9)
  2262   01004A  6EF6               	movwf	tblptrl,c
  2263   01004C  0EFF               	movlw	high (_Timer0+9)
  2264   01004E  6EF7               	movwf	tblptrh,c
  2265   010050                     	if	0	;tblptru may be non-zero
  2266   010050                     	endif
  2267   010050                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2268   010050  0E00               	movlw	low (__mediumconst shr (0+16))
  2269   010052  6EF8               	movwf	tblptru,c
  2270   010054                     	endif
  2271   010054  D802               	call	u1368
  2272   010056  EF3A  F080         	goto	u1369
  2273   01005A                     u1368:
  2274   01005A  0005               	push	
  2275   01005C  6EFA               	movwf	pclath,c
  2276   01005E  0009               	tblrd		*+
  2277   010060  50F5               	movf	tablat,w,c
  2278   010062  6EFD               	movwf	tosl,c
  2279   010064  0009               	tblrd		*+
  2280   010066  50F5               	movf	tablat,w,c
  2281   010068  6EFE               	movwf	tosh,c
  2282   01006A  0009               	tblrd		*+
  2283   01006C  50F5               	movf	tablat,w,c
  2284   01006E  6EFF               	movwf	tosu,c
  2285   010070  50FA               	movf	pclath,w,c
  2286   010072  0012               	return		;indir
  2287   010074                     u1369:
  2288   010074  9A82               	bcf	130,5,c	;volatile
  2289   010076  9882               	bcf	130,4,c	;volatile
  2290   010078                     
  2291                           ;application.c: 38:                 ADCC_Initialize_BasicMode();
  2292   010078  EC47  F087         	call	_ADCC_Initialize_BasicMode	;wreg free
  2293   01007C                     
  2294                           ;application.c: 39:                 ADCC_SetChannel(POT_DATA);
  2295   01007C  0E00               	movlw	0
  2296   01007E  EC9E  F087         	call	_ADCC_SetChannel
  2297   010082                     
  2298                           ;application.c: 41:                 Timer0.Start();
  2299   010082  0E36               	movlw	low (_Timer0+3)
  2300   010084  6EF6               	movwf	tblptrl,c
  2301   010086  0EFF               	movlw	high (_Timer0+3)
  2302   010088  6EF7               	movwf	tblptrh,c
  2303   01008A                     	if	0	;tblptru may be non-zero
  2304   01008A                     	endif
  2305   01008A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2306   01008A  0E00               	movlw	low (__mediumconst shr (0+16))
  2307   01008C  6EF8               	movwf	tblptru,c
  2308   01008E                     	endif
  2309   01008E  D802               	call	u1378
  2310   010090  EF57  F080         	goto	u1379
  2311   010094                     u1378:
  2312   010094  0005               	push	
  2313   010096  6EFA               	movwf	pclath,c
  2314   010098  0009               	tblrd		*+
  2315   01009A  50F5               	movf	tablat,w,c
  2316   01009C  6EFD               	movwf	tosl,c
  2317   01009E  0009               	tblrd		*+
  2318   0100A0  50F5               	movf	tablat,w,c
  2319   0100A2  6EFE               	movwf	tosh,c
  2320   0100A4  0009               	tblrd		*+
  2321   0100A6  50F5               	movf	tablat,w,c
  2322   0100A8  6EFF               	movwf	tosu,c
  2323   0100AA  50FA               	movf	pclath,w,c
  2324   0100AC  0012               	return		;indir
  2325   0100AE                     u1379:
  2326   0100AE                     
  2327                           ;application.c: 42:                 basicModeInit = 1;
  2328   0100AE  0E01               	movlw	1
  2329   0100B0  6E4B               	movwf	_basicModeInit^0,c	;volatile
  2330   0100B2                     l2619:
  2331                           
  2332                           ;application.c: 45:             if (adcReadyFlag)
  2333   0100B2  504C               	movf	_adcReadyFlag^0,w,c	;volatile
  2334   0100B4  B4D8               	btfsc	status,2,c
  2335   0100B6  EF5F  F080         	goto	u1381
  2336   0100BA  EF61  F080         	goto	u1380
  2337   0100BE                     u1381:
  2338   0100BE  EFD3  F082         	goto	l861
  2339   0100C2                     u1380:
  2340   0100C2                     
  2341                           ;application.c: 46:             {;application.c: 47:                 adcReadyFlag = 0;
  2342   0100C2  0E00               	movlw	0
  2343   0100C4  6E4C               	movwf	_adcReadyFlag^0,c	;volatile
  2344   0100C6                     
  2345                           ;application.c: 48:                 printf("Basic Mode - ADRES=%d \r\n", ADRES);
  2346   0100C6  0EE6               	movlw	low STR_1
  2347   0100C8  6E23               	movwf	printf@fmt^0,c
  2348   0100CA  0EFF               	movlw	high STR_1
  2349   0100CC  6E24               	movwf	(printf@fmt+1)^0,c
  2350   0100CE  CF5E F025          	movff	3934,?_printf+2	;volatile
  2351   0100D2  CF5F F026          	movff	3935,?_printf+3	;volatile
  2352   0100D6  EC0F  F087         	call	_printf	;wreg free
  2353   0100DA  EFD3  F082         	goto	l861
  2354   0100DE                     l2625:
  2355                           
  2356                           ;application.c: 54:             if (!avgModeInit)
  2357   0100DE  504A               	movf	_avgModeInit^0,w,c	;volatile
  2358   0100E0  A4D8               	btfss	status,2,c
  2359   0100E2  EF75  F080         	goto	u1391
  2360   0100E6  EF77  F080         	goto	u1390
  2361   0100EA                     u1391:
  2362   0100EA  EFAE  F080         	goto	l2643
  2363   0100EE                     u1390:
  2364   0100EE                     
  2365                           ;application.c: 55:             {;application.c: 57:                 Timer0.Stop();
  2366   0100EE  0E39               	movlw	low (_Timer0+6)
  2367   0100F0  6EF6               	movwf	tblptrl,c
  2368   0100F2  0EFF               	movlw	high (_Timer0+6)
  2369   0100F4  6EF7               	movwf	tblptrh,c
  2370   0100F6                     	if	0	;tblptru may be non-zero
  2371   0100F6                     	endif
  2372   0100F6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2373   0100F6  0E00               	movlw	low (__mediumconst shr (0+16))
  2374   0100F8  6EF8               	movwf	tblptru,c
  2375   0100FA                     	endif
  2376   0100FA  D802               	call	u1408
  2377   0100FC  EF8D  F080         	goto	u1409
  2378   010100                     u1408:
  2379   010100  0005               	push	
  2380   010102  6EFA               	movwf	pclath,c
  2381   010104  0009               	tblrd		*+
  2382   010106  50F5               	movf	tablat,w,c
  2383   010108  6EFD               	movwf	tosl,c
  2384   01010A  0009               	tblrd		*+
  2385   01010C  50F5               	movf	tablat,w,c
  2386   01010E  6EFE               	movwf	tosh,c
  2387   010110  0009               	tblrd		*+
  2388   010112  50F5               	movf	tablat,w,c
  2389   010114  6EFF               	movwf	tosu,c
  2390   010116  50FA               	movf	pclath,w,c
  2391   010118  0012               	return		;indir
  2392   01011A                     u1409:
  2393   01011A  9A82               	bcf	130,5,c	;volatile
  2394   01011C  8882               	bsf	130,4,c	;volatile
  2395   01011E                     
  2396                           ;application.c: 62:                 ADCC_Initialize_AverageMode();
  2397   01011E  EC8D  F086         	call	_ADCC_Initialize_AverageMode	;wreg free
  2398   010122                     
  2399                           ;application.c: 63:                 ADCC_SetChannel(POT_DATA);
  2400   010122  0E00               	movlw	0
  2401   010124  EC9E  F087         	call	_ADCC_SetChannel
  2402   010128                     
  2403                           ;application.c: 65:                 Timer0.Start();
  2404   010128  0E36               	movlw	low (_Timer0+3)
  2405   01012A  6EF6               	movwf	tblptrl,c
  2406   01012C  0EFF               	movlw	high (_Timer0+3)
  2407   01012E  6EF7               	movwf	tblptrh,c
  2408   010130                     	if	0	;tblptru may be non-zero
  2409   010130                     	endif
  2410   010130                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2411   010130  0E00               	movlw	low (__mediumconst shr (0+16))
  2412   010132  6EF8               	movwf	tblptru,c
  2413   010134                     	endif
  2414   010134  D802               	call	u1418
  2415   010136  EFAA  F080         	goto	u1419
  2416   01013A                     u1418:
  2417   01013A  0005               	push	
  2418   01013C  6EFA               	movwf	pclath,c
  2419   01013E  0009               	tblrd		*+
  2420   010140  50F5               	movf	tablat,w,c
  2421   010142  6EFD               	movwf	tosl,c
  2422   010144  0009               	tblrd		*+
  2423   010146  50F5               	movf	tablat,w,c
  2424   010148  6EFE               	movwf	tosh,c
  2425   01014A  0009               	tblrd		*+
  2426   01014C  50F5               	movf	tablat,w,c
  2427   01014E  6EFF               	movwf	tosu,c
  2428   010150  50FA               	movf	pclath,w,c
  2429   010152  0012               	return		;indir
  2430   010154                     u1419:
  2431   010154                     
  2432                           ;application.c: 66:                 avgModeInit = 1;
  2433   010154  0E01               	movlw	1
  2434   010156  6E4A               	movwf	_avgModeInit^0,c	;volatile
  2435   010158                     
  2436                           ;application.c: 67:                 basicModeInit = 0;
  2437   010158  0E00               	movlw	0
  2438   01015A  6E4B               	movwf	_basicModeInit^0,c	;volatile
  2439   01015C                     l2643:
  2440                           
  2441                           ;application.c: 70:             if (adcReadyFlag)
  2442   01015C  504C               	movf	_adcReadyFlag^0,w,c	;volatile
  2443   01015E  B4D8               	btfsc	status,2,c
  2444   010160  EFB4  F080         	goto	u1421
  2445   010164  EFB6  F080         	goto	u1420
  2446   010168                     u1421:
  2447   010168  EFC2  F080         	goto	l2649
  2448   01016C                     u1420:
  2449   01016C                     
  2450                           ;application.c: 71:             {;application.c: 72:                 adcReadyFlag = 0;
  2451   01016C  0E00               	movlw	0
  2452   01016E  6E4C               	movwf	_adcReadyFlag^0,c	;volatile
  2453   010170                     
  2454                           ;application.c: 73:                 printf("AVG Mode - ADFLT=%d \r\n", ADFLTR);
  2455   010170  0ECF               	movlw	low (STR_5+6)
  2456   010172  6E23               	movwf	printf@fmt^0,c
  2457   010174  0EFF               	movlw	high (STR_5+6)
  2458   010176  6E24               	movwf	(printf@fmt+1)^0,c
  2459   010178  CF6D F025          	movff	3949,?_printf+2	;volatile
  2460   01017C  CF6E F026          	movff	3950,?_printf+3	;volatile
  2461   010180  EC0F  F087         	call	_printf	;wreg free
  2462   010184                     l2649:
  2463                           
  2464                           ;application.c: 76:             if (ADCC_HasErrorCrossedUpperThreshold())
  2465   010184  EC53  F087         	call	_ADCC_HasErrorCrossedUpperThreshold	;wreg free
  2466   010188  0900               	iorlw	0
  2467   01018A  B4D8               	btfsc	status,2,c
  2468   01018C  EFCA  F080         	goto	u1431
  2469   010190  EFCC  F080         	goto	u1430
  2470   010194                     u1431:
  2471   010194  EFE0  F080         	goto	l2653
  2472   010198                     u1430:
  2473   010198                     
  2474                           ;application.c: 77:             {;application.c: 78:                 printf("AVG Mode - 
      +                          ADFLT=%d - SP=%d - UT=%d - UT Crossed\r\n", ADFLTR, ADSTPT, ADUTH);
  2475   010198  0E96               	movlw	low (STR_6+6)
  2476   01019A  6E23               	movwf	printf@fmt^0,c
  2477   01019C  0EFF               	movlw	high (STR_6+6)
  2478   01019E  6E24               	movwf	(printf@fmt+1)^0,c
  2479   0101A0  CF6D F025          	movff	3949,?_printf+2	;volatile
  2480   0101A4  CF6E F026          	movff	3950,?_printf+3	;volatile
  2481   0101A8  CF63 F027          	movff	3939,?_printf+4	;volatile
  2482   0101AC  CF64 F028          	movff	3940,?_printf+5	;volatile
  2483   0101B0  CF67 F029          	movff	3943,?_printf+6	;volatile
  2484   0101B4  CF68 F02A          	movff	3944,?_printf+7	;volatile
  2485   0101B8  EC0F  F087         	call	_printf	;wreg free
  2486                           
  2487                           ;application.c: 80:             }
  2488   0101BC  EFD3  F082         	goto	l861
  2489   0101C0                     l2653:
  2490   0101C0  EC5D  F087         	call	_ADCC_HasErrorCrossedLowerThreshold	;wreg free
  2491   0101C4  0900               	iorlw	0
  2492   0101C6  B4D8               	btfsc	status,2,c
  2493   0101C8  EFE8  F080         	goto	u1441
  2494   0101CC  EFEA  F080         	goto	u1440
  2495   0101D0                     u1441:
  2496   0101D0  EFD3  F082         	goto	l861
  2497   0101D4                     u1440:
  2498   0101D4                     
  2499                           ;application.c: 83:             {;application.c: 84:                     printf("AVG Mod
      +                          e - ADFLT=%d - SP=%d - LT=%d - LT Crossed\r\n", ADFLTR, ADSTPT, ADLTH);
  2500   0101D4  0E5D               	movlw	low (STR_7+6)
  2501   0101D6  6E23               	movwf	printf@fmt^0,c
  2502   0101D8  0EFF               	movlw	high (STR_7+6)
  2503   0101DA  6E24               	movwf	(printf@fmt+1)^0,c
  2504   0101DC  CF6D F025          	movff	3949,?_printf+2	;volatile
  2505   0101E0  CF6E F026          	movff	3950,?_printf+3	;volatile
  2506   0101E4  CF63 F027          	movff	3939,?_printf+4	;volatile
  2507   0101E8  CF64 F028          	movff	3940,?_printf+5	;volatile
  2508   0101EC  CF65 F029          	movff	3941,?_printf+6	;volatile
  2509   0101F0  CF66 F02A          	movff	3942,?_printf+7	;volatile
  2510   0101F4  EC0F  F087         	call	_printf	;wreg free
  2511   0101F8  EFD3  F082         	goto	l861
  2512   0101FC                     l2657:
  2513                           
  2514                           ;application.c: 88:             if (!burstAvgModeInit)
  2515   0101FC  5049               	movf	_burstAvgModeInit^0,w,c	;volatile
  2516   0101FE  A4D8               	btfss	status,2,c
  2517   010200  EF04  F081         	goto	u1451
  2518   010204  EF06  F081         	goto	u1450
  2519   010208                     u1451:
  2520   010208  EF3D  F081         	goto	l2675
  2521   01020C                     u1450:
  2522   01020C                     
  2523                           ;application.c: 89:             {;application.c: 91:                 Timer0.Stop();
  2524   01020C  0E39               	movlw	low (_Timer0+6)
  2525   01020E  6EF6               	movwf	tblptrl,c
  2526   010210  0EFF               	movlw	high (_Timer0+6)
  2527   010212  6EF7               	movwf	tblptrh,c
  2528   010214                     	if	0	;tblptru may be non-zero
  2529   010214                     	endif
  2530   010214                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2531   010214  0E00               	movlw	low (__mediumconst shr (0+16))
  2532   010216  6EF8               	movwf	tblptru,c
  2533   010218                     	endif
  2534   010218  D802               	call	u1468
  2535   01021A  EF1C  F081         	goto	u1469
  2536   01021E                     u1468:
  2537   01021E  0005               	push	
  2538   010220  6EFA               	movwf	pclath,c
  2539   010222  0009               	tblrd		*+
  2540   010224  50F5               	movf	tablat,w,c
  2541   010226  6EFD               	movwf	tosl,c
  2542   010228  0009               	tblrd		*+
  2543   01022A  50F5               	movf	tablat,w,c
  2544   01022C  6EFE               	movwf	tosh,c
  2545   01022E  0009               	tblrd		*+
  2546   010230  50F5               	movf	tablat,w,c
  2547   010232  6EFF               	movwf	tosu,c
  2548   010234  50FA               	movf	pclath,w,c
  2549   010236  0012               	return		;indir
  2550   010238                     u1469:
  2551   010238  8A82               	bsf	130,5,c	;volatile
  2552   01023A  9882               	bcf	130,4,c	;volatile
  2553   01023C                     
  2554                           ;application.c: 96:                 ADCC_Initialize_BurstAverageMode();
  2555   01023C  EC75  F086         	call	_ADCC_Initialize_BurstAverageMode	;wreg free
  2556   010240                     
  2557                           ;application.c: 97:                 ADCC_SetChannel(POT_DATA);
  2558   010240  0E00               	movlw	0
  2559   010242  EC9E  F087         	call	_ADCC_SetChannel
  2560   010246                     
  2561                           ;application.c: 99:                 Timer0.Start();
  2562   010246  0E36               	movlw	low (_Timer0+3)
  2563   010248  6EF6               	movwf	tblptrl,c
  2564   01024A  0EFF               	movlw	high (_Timer0+3)
  2565   01024C  6EF7               	movwf	tblptrh,c
  2566   01024E                     	if	0	;tblptru may be non-zero
  2567   01024E                     	endif
  2568   01024E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2569   01024E  0E00               	movlw	low (__mediumconst shr (0+16))
  2570   010250  6EF8               	movwf	tblptru,c
  2571   010252                     	endif
  2572   010252  D802               	call	u1478
  2573   010254  EF39  F081         	goto	u1479
  2574   010258                     u1478:
  2575   010258  0005               	push	
  2576   01025A  6EFA               	movwf	pclath,c
  2577   01025C  0009               	tblrd		*+
  2578   01025E  50F5               	movf	tablat,w,c
  2579   010260  6EFD               	movwf	tosl,c
  2580   010262  0009               	tblrd		*+
  2581   010264  50F5               	movf	tablat,w,c
  2582   010266  6EFE               	movwf	tosh,c
  2583   010268  0009               	tblrd		*+
  2584   01026A  50F5               	movf	tablat,w,c
  2585   01026C  6EFF               	movwf	tosu,c
  2586   01026E  50FA               	movf	pclath,w,c
  2587   010270  0012               	return		;indir
  2588   010272                     u1479:
  2589   010272                     
  2590                           ;application.c: 100:                 burstAvgModeInit = 1;
  2591   010272  0E01               	movlw	1
  2592   010274  6E49               	movwf	_burstAvgModeInit^0,c	;volatile
  2593   010276                     
  2594                           ;application.c: 101:                 avgModeInit = 0;
  2595   010276  0E00               	movlw	0
  2596   010278  6E4A               	movwf	_avgModeInit^0,c	;volatile
  2597   01027A                     l2675:
  2598                           
  2599                           ;application.c: 105:            if (adcReadyFlag)
  2600   01027A  504C               	movf	_adcReadyFlag^0,w,c	;volatile
  2601   01027C  B4D8               	btfsc	status,2,c
  2602   01027E  EF43  F081         	goto	u1481
  2603   010282  EF45  F081         	goto	u1480
  2604   010286                     u1481:
  2605   010286  EF51  F081         	goto	l2681
  2606   01028A                     u1480:
  2607   01028A                     
  2608                           ;application.c: 106:             {;application.c: 107:                 adcReadyFlag = 0;
  2609   01028A  0E00               	movlw	0
  2610   01028C  6E4C               	movwf	_adcReadyFlag^0,c	;volatile
  2611   01028E                     
  2612                           ;application.c: 108:                 printf("Burst AVG Mode - ADFLT=%d \r\n", ADFLTR);
  2613   01028E  0EC9               	movlw	low STR_5
  2614   010290  6E23               	movwf	printf@fmt^0,c
  2615   010292  0EFF               	movlw	high STR_5
  2616   010294  6E24               	movwf	(printf@fmt+1)^0,c
  2617   010296  CF6D F025          	movff	3949,?_printf+2	;volatile
  2618   01029A  CF6E F026          	movff	3950,?_printf+3	;volatile
  2619   01029E  EC0F  F087         	call	_printf	;wreg free
  2620   0102A2                     l2681:
  2621                           
  2622                           ;application.c: 111:            if (ADCC_HasErrorCrossedUpperThreshold())
  2623   0102A2  EC53  F087         	call	_ADCC_HasErrorCrossedUpperThreshold	;wreg free
  2624   0102A6  0900               	iorlw	0
  2625   0102A8  B4D8               	btfsc	status,2,c
  2626   0102AA  EF59  F081         	goto	u1491
  2627   0102AE  EF5B  F081         	goto	u1490
  2628   0102B2                     u1491:
  2629   0102B2  EF6F  F081         	goto	l2685
  2630   0102B6                     u1490:
  2631   0102B6                     
  2632                           ;application.c: 112:             {;application.c: 113:                 printf("Burst AVG
      +                           Mode - ADFLT=%d - SP=%d - UT=%d - UT Crossed\r\n", ADFLTR, ADSTPT, ADUTH);
  2633   0102B6  0E90               	movlw	low STR_6
  2634   0102B8  6E23               	movwf	printf@fmt^0,c
  2635   0102BA  0EFF               	movlw	high STR_6
  2636   0102BC  6E24               	movwf	(printf@fmt+1)^0,c
  2637   0102BE  CF6D F025          	movff	3949,?_printf+2	;volatile
  2638   0102C2  CF6E F026          	movff	3950,?_printf+3	;volatile
  2639   0102C6  CF63 F027          	movff	3939,?_printf+4	;volatile
  2640   0102CA  CF64 F028          	movff	3940,?_printf+5	;volatile
  2641   0102CE  CF67 F029          	movff	3943,?_printf+6	;volatile
  2642   0102D2  CF68 F02A          	movff	3944,?_printf+7	;volatile
  2643   0102D6  EC0F  F087         	call	_printf	;wreg free
  2644                           
  2645                           ;application.c: 115:             }
  2646   0102DA  EFD3  F082         	goto	l861
  2647   0102DE                     l2685:
  2648   0102DE  EC5D  F087         	call	_ADCC_HasErrorCrossedLowerThreshold	;wreg free
  2649   0102E2  0900               	iorlw	0
  2650   0102E4  B4D8               	btfsc	status,2,c
  2651   0102E6  EF77  F081         	goto	u1501
  2652   0102EA  EF79  F081         	goto	u1500
  2653   0102EE                     u1501:
  2654   0102EE  EFD3  F082         	goto	l861
  2655   0102F2                     u1500:
  2656   0102F2                     
  2657                           ;application.c: 118:             {;application.c: 119:                printf("Burst AVG 
      +                          Mode - ADFLT=%d - SP=%d - LT=%d - LT Crossed\r\n", ADFLTR, ADSTPT, ADLTH);
  2658   0102F2  0E57               	movlw	low STR_7
  2659   0102F4  6E23               	movwf	printf@fmt^0,c
  2660   0102F6  0EFF               	movlw	high STR_7
  2661   0102F8  6E24               	movwf	(printf@fmt+1)^0,c
  2662   0102FA  CF6D F025          	movff	3949,?_printf+2	;volatile
  2663   0102FE  CF6E F026          	movff	3950,?_printf+3	;volatile
  2664   010302  CF63 F027          	movff	3939,?_printf+4	;volatile
  2665   010306  CF64 F028          	movff	3940,?_printf+5	;volatile
  2666   01030A  CF65 F029          	movff	3941,?_printf+6	;volatile
  2667   01030E  CF66 F02A          	movff	3942,?_printf+7	;volatile
  2668   010312  EC0F  F087         	call	_printf	;wreg free
  2669   010316  EFD3  F082         	goto	l861
  2670   01031A                     l2689:
  2671                           
  2672                           ;application.c: 124:             if (!lpfModeInit)
  2673   01031A  5048               	movf	_lpfModeInit^0,w,c	;volatile
  2674   01031C  A4D8               	btfss	status,2,c
  2675   01031E  EF93  F081         	goto	u1511
  2676   010322  EF95  F081         	goto	u1510
  2677   010326                     u1511:
  2678   010326  EFE6  F081         	goto	l2707
  2679   01032A                     u1510:
  2680   01032A                     
  2681                           ;application.c: 125:             {;application.c: 127:                 Timer0.Stop();
  2682   01032A  0E39               	movlw	low (_Timer0+6)
  2683   01032C  6EF6               	movwf	tblptrl,c
  2684   01032E  0EFF               	movlw	high (_Timer0+6)
  2685   010330  6EF7               	movwf	tblptrh,c
  2686   010332                     	if	0	;tblptru may be non-zero
  2687   010332                     	endif
  2688   010332                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2689   010332  0E00               	movlw	low (__mediumconst shr (0+16))
  2690   010334  6EF8               	movwf	tblptru,c
  2691   010336                     	endif
  2692   010336  D802               	call	u1528
  2693   010338  EFAB  F081         	goto	u1529
  2694   01033C                     u1528:
  2695   01033C  0005               	push	
  2696   01033E  6EFA               	movwf	pclath,c
  2697   010340  0009               	tblrd		*+
  2698   010342  50F5               	movf	tablat,w,c
  2699   010344  6EFD               	movwf	tosl,c
  2700   010346  0009               	tblrd		*+
  2701   010348  50F5               	movf	tablat,w,c
  2702   01034A  6EFE               	movwf	tosh,c
  2703   01034C  0009               	tblrd		*+
  2704   01034E  50F5               	movf	tablat,w,c
  2705   010350  6EFF               	movwf	tosu,c
  2706   010352  50FA               	movf	pclath,w,c
  2707   010354  0012               	return		;indir
  2708   010356                     u1529:
  2709                           
  2710                           ;application.c: 128:                 Timer0.PeriodCountSet(0x01);
  2711   010356  0E00               	movlw	0
  2712   010358  6E04               	movwf	(TMR0_Reload@periodVal+1)^0,c
  2713   01035A  0E01               	movlw	1
  2714   01035C  6E03               	movwf	TMR0_Reload@periodVal^0,c
  2715   01035E  0E3C               	movlw	low (_Timer0+9)
  2716   010360  6EF6               	movwf	tblptrl,c
  2717   010362  0EFF               	movlw	high (_Timer0+9)
  2718   010364  6EF7               	movwf	tblptrh,c
  2719   010366                     	if	0	;tblptru may be non-zero
  2720   010366                     	endif
  2721   010366                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2722   010366  0E00               	movlw	low (__mediumconst shr (0+16))
  2723   010368  6EF8               	movwf	tblptru,c
  2724   01036A                     	endif
  2725   01036A  D802               	call	u1538
  2726   01036C  EFC5  F081         	goto	u1539
  2727   010370                     u1538:
  2728   010370  0005               	push	
  2729   010372  6EFA               	movwf	pclath,c
  2730   010374  0009               	tblrd		*+
  2731   010376  50F5               	movf	tablat,w,c
  2732   010378  6EFD               	movwf	tosl,c
  2733   01037A  0009               	tblrd		*+
  2734   01037C  50F5               	movf	tablat,w,c
  2735   01037E  6EFE               	movwf	tosh,c
  2736   010380  0009               	tblrd		*+
  2737   010382  50F5               	movf	tablat,w,c
  2738   010384  6EFF               	movwf	tosu,c
  2739   010386  50FA               	movf	pclath,w,c
  2740   010388  0012               	return		;indir
  2741   01038A                     u1539:
  2742   01038A  8A82               	bsf	130,5,c	;volatile
  2743   01038C  8882               	bsf	130,4,c	;volatile
  2744   01038E                     
  2745                           ;application.c: 133:                 ADCC_Initialize_LowPassFilterMode();
  2746   01038E  EC2D  F087         	call	_ADCC_Initialize_LowPassFilterMode	;wreg free
  2747   010392                     
  2748                           ;application.c: 134:                 ADCC_SetChannel(FG_DATA);
  2749   010392  0E01               	movlw	1
  2750   010394  EC9E  F087         	call	_ADCC_SetChannel
  2751   010398                     
  2752                           ;application.c: 136:                 Timer0.Start();
  2753   010398  0E36               	movlw	low (_Timer0+3)
  2754   01039A  6EF6               	movwf	tblptrl,c
  2755   01039C  0EFF               	movlw	high (_Timer0+3)
  2756   01039E  6EF7               	movwf	tblptrh,c
  2757   0103A0                     	if	0	;tblptru may be non-zero
  2758   0103A0                     	endif
  2759   0103A0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2760   0103A0  0E00               	movlw	low (__mediumconst shr (0+16))
  2761   0103A2  6EF8               	movwf	tblptru,c
  2762   0103A4                     	endif
  2763   0103A4  D802               	call	u1548
  2764   0103A6  EFE2  F081         	goto	u1549
  2765   0103AA                     u1548:
  2766   0103AA  0005               	push	
  2767   0103AC  6EFA               	movwf	pclath,c
  2768   0103AE  0009               	tblrd		*+
  2769   0103B0  50F5               	movf	tablat,w,c
  2770   0103B2  6EFD               	movwf	tosl,c
  2771   0103B4  0009               	tblrd		*+
  2772   0103B6  50F5               	movf	tablat,w,c
  2773   0103B8  6EFE               	movwf	tosh,c
  2774   0103BA  0009               	tblrd		*+
  2775   0103BC  50F5               	movf	tablat,w,c
  2776   0103BE  6EFF               	movwf	tosu,c
  2777   0103C0  50FA               	movf	pclath,w,c
  2778   0103C2  0012               	return		;indir
  2779   0103C4                     u1549:
  2780   0103C4                     
  2781                           ;application.c: 137:                 lpfModeInit = 1;
  2782   0103C4  0E01               	movlw	1
  2783   0103C6  6E48               	movwf	_lpfModeInit^0,c	;volatile
  2784   0103C8                     
  2785                           ;application.c: 138:                 burstAvgModeInit = 0;
  2786   0103C8  0E00               	movlw	0
  2787   0103CA  6E49               	movwf	_burstAvgModeInit^0,c	;volatile
  2788   0103CC                     l2707:
  2789                           
  2790                           ;application.c: 141:             if (adcReadyFlag)
  2791   0103CC  504C               	movf	_adcReadyFlag^0,w,c	;volatile
  2792   0103CE  B4D8               	btfsc	status,2,c
  2793   0103D0  EFEC  F081         	goto	u1551
  2794   0103D4  EFEE  F081         	goto	u1550
  2795   0103D8                     u1551:
  2796   0103D8  EFD3  F082         	goto	l861
  2797   0103DC                     u1550:
  2798   0103DC                     
  2799                           ;application.c: 142:             {;application.c: 143:                 adcReadyFlag = 0;
  2800   0103DC  0E00               	movlw	0
  2801   0103DE  6E4C               	movwf	_adcReadyFlag^0,c	;volatile
  2802   0103E0                     l2711:
  2803   0103E0  0EFA               	movlw	low (_UART1+15)
  2804   0103E2  6EF6               	movwf	tblptrl,c
  2805   0103E4  0EFE               	movlw	high (_UART1+15)
  2806   0103E6  6EF7               	movwf	tblptrh,c
  2807   0103E8                     	if	0	;tblptru may be non-zero
  2808   0103E8                     	endif
  2809   0103E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2810   0103E8  0E00               	movlw	low (__mediumconst shr (0+16))
  2811   0103EA  6EF8               	movwf	tblptru,c
  2812   0103EC                     	endif
  2813   0103EC  D802               	call	u1568
  2814   0103EE  EF06  F082         	goto	u1569
  2815   0103F2                     u1568:
  2816   0103F2  0005               	push	
  2817   0103F4  6EFA               	movwf	pclath,c
  2818   0103F6  0009               	tblrd		*+
  2819   0103F8  50F5               	movf	tablat,w,c
  2820   0103FA  6EFD               	movwf	tosl,c
  2821   0103FC  0009               	tblrd		*+
  2822   0103FE  50F5               	movf	tablat,w,c
  2823   010400  6EFE               	movwf	tosh,c
  2824   010402  0009               	tblrd		*+
  2825   010404  50F5               	movf	tablat,w,c
  2826   010406  6EFF               	movwf	tosu,c
  2827   010408  50FA               	movf	pclath,w,c
  2828   01040A  0012               	return		;indir
  2829   01040C                     u1569:
  2830   01040C  0900               	iorlw	0
  2831   01040E  B4D8               	btfsc	status,2,c
  2832   010410  EF0C  F082         	goto	u1571
  2833   010414  EF0E  F082         	goto	u1570
  2834   010418                     u1571:
  2835   010418  EFF0  F081         	goto	l2711
  2836   01041C                     u1570:
  2837   01041C                     
  2838                           ;application.c: 145:                 EUSART1_Write(0x03);
  2839   01041C  0E03               	movlw	3
  2840   01041E  EC9A  F087         	call	_EUSART1_Write
  2841   010422                     l2715:
  2842   010422  0EFA               	movlw	low (_UART1+15)
  2843   010424  6EF6               	movwf	tblptrl,c
  2844   010426  0EFE               	movlw	high (_UART1+15)
  2845   010428  6EF7               	movwf	tblptrh,c
  2846   01042A                     	if	0	;tblptru may be non-zero
  2847   01042A                     	endif
  2848   01042A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2849   01042A  0E00               	movlw	low (__mediumconst shr (0+16))
  2850   01042C  6EF8               	movwf	tblptru,c
  2851   01042E                     	endif
  2852   01042E  D802               	call	u1588
  2853   010430  EF27  F082         	goto	u1589
  2854   010434                     u1588:
  2855   010434  0005               	push	
  2856   010436  6EFA               	movwf	pclath,c
  2857   010438  0009               	tblrd		*+
  2858   01043A  50F5               	movf	tablat,w,c
  2859   01043C  6EFD               	movwf	tosl,c
  2860   01043E  0009               	tblrd		*+
  2861   010440  50F5               	movf	tablat,w,c
  2862   010442  6EFE               	movwf	tosh,c
  2863   010444  0009               	tblrd		*+
  2864   010446  50F5               	movf	tablat,w,c
  2865   010448  6EFF               	movwf	tosu,c
  2866   01044A  50FA               	movf	pclath,w,c
  2867   01044C  0012               	return		;indir
  2868   01044E                     u1589:
  2869   01044E  0900               	iorlw	0
  2870   010450  B4D8               	btfsc	status,2,c
  2871   010452  EF2D  F082         	goto	u1591
  2872   010456  EF2F  F082         	goto	u1590
  2873   01045A                     u1591:
  2874   01045A  EF11  F082         	goto	l2715
  2875   01045E                     u1590:
  2876   01045E                     
  2877                           ;application.c: 147:                 EUSART1_Write(ADRESL);
  2878   01045E  010F               	movlb	15	; () banked
  2879   010460  515E               	movf	94,w,b	;volatile
  2880   010462  EC9A  F087         	call	_EUSART1_Write
  2881   010466                     l2719:
  2882   010466  0EFA               	movlw	low (_UART1+15)
  2883   010468  6EF6               	movwf	tblptrl,c
  2884   01046A  0EFE               	movlw	high (_UART1+15)
  2885   01046C  6EF7               	movwf	tblptrh,c
  2886   01046E                     	if	0	;tblptru may be non-zero
  2887   01046E                     	endif
  2888   01046E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2889   01046E  0E00               	movlw	low (__mediumconst shr (0+16))
  2890   010470  6EF8               	movwf	tblptru,c
  2891   010472                     	endif
  2892   010472  D802               	call	u1608
  2893   010474  EF49  F082         	goto	u1609
  2894   010478                     u1608:
  2895   010478  0005               	push	
  2896   01047A  6EFA               	movwf	pclath,c
  2897   01047C  0009               	tblrd		*+
  2898   01047E  50F5               	movf	tablat,w,c
  2899   010480  6EFD               	movwf	tosl,c
  2900   010482  0009               	tblrd		*+
  2901   010484  50F5               	movf	tablat,w,c
  2902   010486  6EFE               	movwf	tosh,c
  2903   010488  0009               	tblrd		*+
  2904   01048A  50F5               	movf	tablat,w,c
  2905   01048C  6EFF               	movwf	tosu,c
  2906   01048E  50FA               	movf	pclath,w,c
  2907   010490  0012               	return		;indir
  2908   010492                     u1609:
  2909   010492  0900               	iorlw	0
  2910   010494  B4D8               	btfsc	status,2,c
  2911   010496  EF4F  F082         	goto	u1611
  2912   01049A  EF51  F082         	goto	u1610
  2913   01049E                     u1611:
  2914   01049E  EF33  F082         	goto	l2719
  2915   0104A2                     u1610:
  2916   0104A2                     
  2917                           ;application.c: 149:                 EUSART1_Write(ADRESH);
  2918   0104A2  010F               	movlb	15	; () banked
  2919   0104A4  515F               	movf	95,w,b	;volatile
  2920   0104A6  EC9A  F087         	call	_EUSART1_Write
  2921   0104AA                     l2723:
  2922   0104AA  0EFA               	movlw	low (_UART1+15)
  2923   0104AC  6EF6               	movwf	tblptrl,c
  2924   0104AE  0EFE               	movlw	high (_UART1+15)
  2925   0104B0  6EF7               	movwf	tblptrh,c
  2926   0104B2                     	if	0	;tblptru may be non-zero
  2927   0104B2                     	endif
  2928   0104B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2929   0104B2  0E00               	movlw	low (__mediumconst shr (0+16))
  2930   0104B4  6EF8               	movwf	tblptru,c
  2931   0104B6                     	endif
  2932   0104B6  D802               	call	u1628
  2933   0104B8  EF6B  F082         	goto	u1629
  2934   0104BC                     u1628:
  2935   0104BC  0005               	push	
  2936   0104BE  6EFA               	movwf	pclath,c
  2937   0104C0  0009               	tblrd		*+
  2938   0104C2  50F5               	movf	tablat,w,c
  2939   0104C4  6EFD               	movwf	tosl,c
  2940   0104C6  0009               	tblrd		*+
  2941   0104C8  50F5               	movf	tablat,w,c
  2942   0104CA  6EFE               	movwf	tosh,c
  2943   0104CC  0009               	tblrd		*+
  2944   0104CE  50F5               	movf	tablat,w,c
  2945   0104D0  6EFF               	movwf	tosu,c
  2946   0104D2  50FA               	movf	pclath,w,c
  2947   0104D4  0012               	return		;indir
  2948   0104D6                     u1629:
  2949   0104D6  0900               	iorlw	0
  2950   0104D8  B4D8               	btfsc	status,2,c
  2951   0104DA  EF71  F082         	goto	u1631
  2952   0104DE  EF73  F082         	goto	u1630
  2953   0104E2                     u1631:
  2954   0104E2  EF55  F082         	goto	l2723
  2955   0104E6                     u1630:
  2956   0104E6                     
  2957                           ;application.c: 151:                 EUSART1_Write(ADFLTRL);
  2958   0104E6  506D               	movf	109,w,c	;volatile
  2959   0104E8  EC9A  F087         	call	_EUSART1_Write
  2960   0104EC                     l2727:
  2961   0104EC  0EFA               	movlw	low (_UART1+15)
  2962   0104EE  6EF6               	movwf	tblptrl,c
  2963   0104F0  0EFE               	movlw	high (_UART1+15)
  2964   0104F2  6EF7               	movwf	tblptrh,c
  2965   0104F4                     	if	0	;tblptru may be non-zero
  2966   0104F4                     	endif
  2967   0104F4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2968   0104F4  0E00               	movlw	low (__mediumconst shr (0+16))
  2969   0104F6  6EF8               	movwf	tblptru,c
  2970   0104F8                     	endif
  2971   0104F8  D802               	call	u1648
  2972   0104FA  EF8C  F082         	goto	u1649
  2973   0104FE                     u1648:
  2974   0104FE  0005               	push	
  2975   010500  6EFA               	movwf	pclath,c
  2976   010502  0009               	tblrd		*+
  2977   010504  50F5               	movf	tablat,w,c
  2978   010506  6EFD               	movwf	tosl,c
  2979   010508  0009               	tblrd		*+
  2980   01050A  50F5               	movf	tablat,w,c
  2981   01050C  6EFE               	movwf	tosh,c
  2982   01050E  0009               	tblrd		*+
  2983   010510  50F5               	movf	tablat,w,c
  2984   010512  6EFF               	movwf	tosu,c
  2985   010514  50FA               	movf	pclath,w,c
  2986   010516  0012               	return		;indir
  2987   010518                     u1649:
  2988   010518  0900               	iorlw	0
  2989   01051A  B4D8               	btfsc	status,2,c
  2990   01051C  EF92  F082         	goto	u1651
  2991   010520  EF94  F082         	goto	u1650
  2992   010524                     u1651:
  2993   010524  EF76  F082         	goto	l2727
  2994   010528                     u1650:
  2995   010528                     
  2996                           ;application.c: 153:                 EUSART1_Write(ADFLTRH);
  2997   010528  506E               	movf	110,w,c	;volatile
  2998   01052A  EC9A  F087         	call	_EUSART1_Write
  2999   01052E                     l2731:
  3000   01052E  0EFA               	movlw	low (_UART1+15)
  3001   010530  6EF6               	movwf	tblptrl,c
  3002   010532  0EFE               	movlw	high (_UART1+15)
  3003   010534  6EF7               	movwf	tblptrh,c
  3004   010536                     	if	0	;tblptru may be non-zero
  3005   010536                     	endif
  3006   010536                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3007   010536  0E00               	movlw	low (__mediumconst shr (0+16))
  3008   010538  6EF8               	movwf	tblptru,c
  3009   01053A                     	endif
  3010   01053A  D802               	call	u1668
  3011   01053C  EFAD  F082         	goto	u1669
  3012   010540                     u1668:
  3013   010540  0005               	push	
  3014   010542  6EFA               	movwf	pclath,c
  3015   010544  0009               	tblrd		*+
  3016   010546  50F5               	movf	tablat,w,c
  3017   010548  6EFD               	movwf	tosl,c
  3018   01054A  0009               	tblrd		*+
  3019   01054C  50F5               	movf	tablat,w,c
  3020   01054E  6EFE               	movwf	tosh,c
  3021   010550  0009               	tblrd		*+
  3022   010552  50F5               	movf	tablat,w,c
  3023   010554  6EFF               	movwf	tosu,c
  3024   010556  50FA               	movf	pclath,w,c
  3025   010558  0012               	return		;indir
  3026   01055A                     u1669:
  3027   01055A  0900               	iorlw	0
  3028   01055C  B4D8               	btfsc	status,2,c
  3029   01055E  EFB3  F082         	goto	u1671
  3030   010562  EFB5  F082         	goto	u1670
  3031   010566                     u1671:
  3032   010566  EF97  F082         	goto	l2731
  3033   01056A                     u1670:
  3034   01056A                     
  3035                           ;application.c: 155:                 EUSART1_Write(0xFC);
  3036   01056A  0EFC               	movlw	252
  3037   01056C  EC9A  F087         	call	_EUSART1_Write
  3038   010570  EFD3  F082         	goto	l861
  3039   010574                     l2735:
  3040                           
  3041                           ;application.c: 161:             count = 0;
  3042   010574  0E00               	movlw	0
  3043   010576  6E4D               	movwf	_count^0,c	;volatile
  3044                           
  3045                           ;application.c: 162:             lpfModeInit = 0;
  3046   010578  0E00               	movlw	0
  3047   01057A  6E48               	movwf	_lpfModeInit^0,c	;volatile
  3048                           
  3049                           ;application.c: 163:             break;
  3050   01057C  EFD3  F082         	goto	l861
  3051   010580                     l2739:
  3052   010580  504D               	movf	_count^0,w,c	;volatile
  3053                           
  3054                           ; Switch size 1, requested type "simple"
  3055                           ; Number of cases is 4, Range of values is 0 to 3
  3056                           ; switch strategies available:
  3057                           ; Name         Instructions Cycles
  3058                           ; simple_byte           13     7 (average)
  3059                           ;	Chosen strategy is simple_byte
  3060   010582  0A00               	xorlw	0	; case 0
  3061   010584  B4D8               	btfsc	status,2,c
  3062   010586  EF02  F080         	goto	l2603
  3063   01058A  0A01               	xorlw	1	; case 1
  3064   01058C  B4D8               	btfsc	status,2,c
  3065   01058E  EF6F  F080         	goto	l2625
  3066   010592  0A03               	xorlw	3	; case 2
  3067   010594  B4D8               	btfsc	status,2,c
  3068   010596  EFFE  F080         	goto	l2657
  3069   01059A  0A01               	xorlw	1	; case 3
  3070   01059C  B4D8               	btfsc	status,2,c
  3071   01059E  EF8D  F081         	goto	l2689
  3072   0105A2  EFBA  F082         	goto	l2735
  3073   0105A6                     l861:
  3074   0105A6  0012               	return		;funcret
  3075   0105A8                     __end_of_ApplicationTask:
  3076                           	callstack 0
  3077                           
  3078 ;; *************** function _printf *****************
  3079 ;; Defined at:
  3080 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\printf.c"
  3081 ;; Parameters:    Size  Location     Type
  3082 ;;  fmt             2   34[COMRAM] PTR const unsigned char 
  3083 ;;		 -> STR_7(57), STR_6(57), STR_5(29), STR_4(51), 
  3084 ;;		 -> STR_3(51), STR_2(23), STR_1(25), 
  3085 ;; Auto vars:     Size  Location     Type
  3086 ;;  ret             2    0        int 
  3087 ;;  ap              1   42[COMRAM] PTR void [1]
  3088 ;;		 -> ?_printf(2), 
  3089 ;; Return value:  Size  Location     Type
  3090 ;;                  2   34[COMRAM] int 
  3091 ;; Registers used:
  3092 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3093 ;; Tracked objects:
  3094 ;;		On entry : 0/0
  3095 ;;		On exit  : 0/0
  3096 ;;		Unchanged: 0/0
  3097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3098 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3099 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3101 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3102 ;;Total ram usage:        9 bytes
  3103 ;; Hardware stack levels used: 1
  3104 ;; Hardware stack levels required when called: 8
  3105 ;; This function calls:
  3106 ;;		_vfprintf
  3107 ;; This function is called by:
  3108 ;;		_ApplicationTask
  3109 ;; This function uses a non-reentrant model
  3110 ;;
  3111                           
  3112                           	psect	text18
  3113   010E1E                     __ptext18:
  3114                           	callstack 0
  3115   010E1E                     _printf:
  3116                           	callstack 21
  3117   010E1E  0E25               	movlw	low (?_printf+2)
  3118   010E20  6E2B               	movwf	printf@ap^0,c
  3119   010E22  0E00               	movlw	0
  3120   010E24  6E1C               	movwf	vfprintf@fp^0,c
  3121   010E26  0E00               	movlw	0
  3122   010E28  6E1D               	movwf	(vfprintf@fp+1)^0,c
  3123   010E2A  C023  F01E         	movff	printf@fmt,vfprintf@fmt
  3124   010E2E  C024  F01F         	movff	printf@fmt+1,vfprintf@fmt+1
  3125   010E32  0E2B               	movlw	low printf@ap
  3126   010E34  6E20               	movwf	vfprintf@ap^0,c
  3127   010E36  ECA8  F085         	call	_vfprintf	;wreg free
  3128   010E3A  0012               	return		;funcret
  3129   010E3C                     __end_of_printf:
  3130                           	callstack 0
  3131                           
  3132 ;; *************** function _vfprintf *****************
  3133 ;; Defined at:
  3134 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  3135 ;; Parameters:    Size  Location     Type
  3136 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  3137 ;;		 -> NULL(0), 
  3138 ;;  fmt             2   29[COMRAM] PTR const unsigned char 
  3139 ;;		 -> STR_7(57), STR_6(57), STR_5(29), STR_4(51), 
  3140 ;;		 -> STR_3(51), STR_2(23), STR_1(25), 
  3141 ;;  ap              1   31[COMRAM] PTR PTR void 
  3142 ;;		 -> printf@ap(1), 
  3143 ;; Auto vars:     Size  Location     Type
  3144 ;;  cfmt            2   32[COMRAM] PTR unsigned char 
  3145 ;;		 -> STR_7(57), STR_6(57), STR_5(29), STR_4(51), 
  3146 ;;		 -> STR_3(51), STR_2(23), STR_1(25), 
  3147 ;; Return value:  Size  Location     Type
  3148 ;;                  2   27[COMRAM] int 
  3149 ;; Registers used:
  3150 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3151 ;; Tracked objects:
  3152 ;;		On entry : 0/0
  3153 ;;		On exit  : 0/0
  3154 ;;		Unchanged: 0/0
  3155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3156 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3157 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3159 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3160 ;;Total ram usage:        7 bytes
  3161 ;; Hardware stack levels used: 1
  3162 ;; Hardware stack levels required when called: 7
  3163 ;; This function calls:
  3164 ;;		_vfpfcnvrt
  3165 ;; This function is called by:
  3166 ;;		_printf
  3167 ;; This function uses a non-reentrant model
  3168 ;;
  3169                           
  3170                           	psect	text19
  3171   010B50                     __ptext19:
  3172                           	callstack 0
  3173   010B50                     _vfprintf:
  3174                           	callstack 21
  3175   010B50                     
  3176                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  3177   010B50  C01E  F021         	movff	vfprintf@fmt,vfprintf@cfmt
  3178   010B54  C01F  F022         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3179                           
  3180                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3181   010B58  EFB8  F085         	goto	l2537
  3182   010B5C                     l2535:
  3183                           
  3184                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3185   010B5C  C01C  F00E         	movff	vfprintf@fp,vfpfcnvrt@fp
  3186   010B60  C01D  F00F         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3187   010B64  0E21               	movlw	low vfprintf@cfmt
  3188   010B66  6E10               	movwf	vfpfcnvrt@fmt^0,c
  3189   010B68  C020  F011         	movff	vfprintf@ap,vfpfcnvrt@ap
  3190   010B6C  ECD4  F082         	call	_vfpfcnvrt	;wreg free
  3191   010B70                     l2537:
  3192                           
  3193                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3194   010B70  C021  FFF6         	movff	vfprintf@cfmt,tblptrl
  3195   010B74  C022  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3196   010B78                     	if	0	;tblptru may be non-zero
  3197   010B78                     	endif
  3198   010B78                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3199   010B78  0E00               	movlw	low (__mediumconst shr (0+16))
  3200   010B7A  6EF8               	movwf	tblptru,c
  3201   010B7C                     	endif
  3202   010B7C  0008               	tblrd		*
  3203   010B7E  50F5               	movf	tablat,w,c
  3204   010B80  0900               	iorlw	0
  3205   010B82  A4D8               	btfss	status,2,c
  3206   010B84  EFC6  F085         	goto	u1331
  3207   010B88  EFC8  F085         	goto	u1330
  3208   010B8C                     u1331:
  3209   010B8C  EFAE  F085         	goto	l2535
  3210   010B90                     u1330:
  3211   010B90                     
  3212                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  3213   010B90  0E00               	movlw	0
  3214   010B92  6E1D               	movwf	(?_vfprintf+1)^0,c
  3215   010B94  0E00               	movlw	0
  3216   010B96  6E1C               	movwf	?_vfprintf^0,c
  3217   010B98  0012               	return		;funcret
  3218   010B9A                     __end_of_vfprintf:
  3219                           	callstack 0
  3220                           
  3221 ;; *************** function _vfpfcnvrt *****************
  3222 ;; Defined at:
  3223 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  3224 ;; Parameters:    Size  Location     Type
  3225 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  3226 ;;		 -> NULL(0), 
  3227 ;;  fmt             1   15[COMRAM] PTR PTR unsigned char 
  3228 ;;		 -> vfprintf@cfmt(2), 
  3229 ;;  ap              1   16[COMRAM] PTR PTR void 
  3230 ;;		 -> printf@ap(1), 
  3231 ;; Auto vars:     Size  Location     Type
  3232 ;;  convarg         4   22[COMRAM] struct .
  3233 ;;  cp              2   20[COMRAM] PTR unsigned char 
  3234 ;;		 -> STR_7(57), STR_6(57), STR_5(29), STR_4(51), 
  3235 ;;		 -> STR_3(51), STR_2(23), STR_1(25), 
  3236 ;;  c               1   26[COMRAM] unsigned char 
  3237 ;;  done            1   19[COMRAM] _Bool 
  3238 ;; Return value:  Size  Location     Type
  3239 ;;                  1    wreg      void 
  3240 ;; Registers used:
  3241 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3242 ;; Tracked objects:
  3243 ;;		On entry : 0/0
  3244 ;;		On exit  : 0/0
  3245 ;;		Unchanged: 0/0
  3246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3247 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3248 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3249 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3250 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3251 ;;Total ram usage:       14 bytes
  3252 ;; Hardware stack levels used: 1
  3253 ;; Hardware stack levels required when called: 6
  3254 ;; This function calls:
  3255 ;;		___awdiv
  3256 ;;		___awmod
  3257 ;;		_abs
  3258 ;;		_fputc
  3259 ;; This function is called by:
  3260 ;;		_vfprintf
  3261 ;; This function uses a non-reentrant model
  3262 ;;
  3263                           
  3264                           	psect	text20
  3265   0105A8                     __ptext20:
  3266                           	callstack 0
  3267   0105A8                     _vfpfcnvrt:
  3268                           	callstack 21
  3269   0105A8                     
  3270                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  3271   0105A8  5010               	movf	vfpfcnvrt@fmt^0,w,c
  3272   0105AA  6ED9               	movwf	fsr2l,c
  3273   0105AC  6ADA               	clrf	fsr2h,c
  3274   0105AE  CFDE FFF6          	movff	postinc2,tblptrl
  3275   0105B2  CFDD FFF7          	movff	postdec2,tblptrh
  3276   0105B6                     	if	0	;tblptru may be non-zero
  3277   0105B6                     	endif
  3278   0105B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3279   0105B6  0E00               	movlw	low (__mediumconst shr (0+16))
  3280   0105B8  6EF8               	movwf	tblptru,c
  3281   0105BA                     	endif
  3282   0105BA  0008               	tblrd		*
  3283   0105BC  50F5               	movf	tablat,w,c
  3284   0105BE  0A25               	xorlw	37
  3285   0105C0  A4D8               	btfss	status,2,c
  3286   0105C2  EFE5  F082         	goto	u1211
  3287   0105C6  EFE7  F082         	goto	u1210
  3288   0105CA                     u1211:
  3289   0105CA  EFB4  F083         	goto	l2509
  3290   0105CE                     u1210:
  3291   0105CE                     
  3292                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  3293   0105CE  5010               	movf	vfpfcnvrt@fmt^0,w,c
  3294   0105D0  6ED9               	movwf	fsr2l,c
  3295   0105D2  6ADA               	clrf	fsr2h,c
  3296   0105D4  2ADE               	incf	postinc2,f,c
  3297   0105D6  0E00               	movlw	0
  3298   0105D8  22DD               	addwfc	postdec2,f,c
  3299   0105DA                     
  3300                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  3301   0105DA  0E00               	movlw	0
  3302   0105DC  6E42               	movwf	(_width+1)^0,c
  3303   0105DE  0E00               	movlw	0
  3304   0105E0  6E41               	movwf	_width^0,c
  3305   0105E2  C041  F047         	movff	_width,_flags
  3306   0105E6                     
  3307                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  3308   0105E6  6843               	setf	_prec^0,c
  3309   0105E8  6844               	setf	(_prec+1)^0,c
  3310   0105EA                     
  3311                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  3312   0105EA  5010               	movf	vfpfcnvrt@fmt^0,w,c
  3313   0105EC  6ED9               	movwf	fsr2l,c
  3314   0105EE  6ADA               	clrf	fsr2h,c
  3315   0105F0  CFDE F015          	movff	postinc2,vfpfcnvrt@cp
  3316   0105F4  CFDD F016          	movff	postdec2,vfpfcnvrt@cp+1
  3317   0105F8                     
  3318                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  3319   0105F8  C015  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3320   0105FC  C016  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3321   010600                     	if	0	;tblptru may be non-zero
  3322   010600                     	endif
  3323   010600                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3324   010600  0E00               	movlw	low (__mediumconst shr (0+16))
  3325   010602  6EF8               	movwf	tblptru,c
  3326   010604                     	endif
  3327   010604  0008               	tblrd		*
  3328   010606  50F5               	movf	tablat,w,c
  3329   010608  0A64               	xorlw	100
  3330   01060A  B4D8               	btfsc	status,2,c
  3331   01060C  EF0A  F083         	goto	u1221
  3332   010610  EF0C  F083         	goto	u1220
  3333   010614                     u1221:
  3334   010614  EF1C  F083         	goto	l2479
  3335   010618                     u1220:
  3336   010618  C015  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3337   01061C  C016  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3338   010620                     	if	0	;tblptru may be non-zero
  3339   010620                     	endif
  3340   010620                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3341   010620  0E00               	movlw	low (__mediumconst shr (0+16))
  3342   010622  6EF8               	movwf	tblptru,c
  3343   010624                     	endif
  3344   010624  0008               	tblrd		*
  3345   010626  50F5               	movf	tablat,w,c
  3346   010628  0A69               	xorlw	105
  3347   01062A  A4D8               	btfss	status,2,c
  3348   01062C  EF1A  F083         	goto	u1231
  3349   010630  EF1C  F083         	goto	u1230
  3350   010634                     u1231:
  3351   010634  EFAC  F083         	goto	l2505
  3352   010638                     u1230:
  3353   010638                     l2479:
  3354                           
  3355                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3356   010638  5011               	movf	vfpfcnvrt@ap^0,w,c
  3357   01063A  6ED9               	movwf	fsr2l,c
  3358   01063C  6ADA               	clrf	fsr2h,c
  3359   01063E  0E02               	movlw	2
  3360   010640  26DF               	addwf	indf2,f,c
  3361   010642  5CDF               	subwf	indf2,w,c
  3362   010644  6ED9               	movwf	fsr2l,c
  3363   010646  6ADA               	clrf	fsr2h,c
  3364   010648  CFDE F017          	movff	postinc2,vfpfcnvrt@convarg
  3365   01064C  CFDE F018          	movff	postinc2,vfpfcnvrt@convarg+1
  3366   010650                     
  3367                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  3368   010650  0E01               	movlw	1
  3369   010652  2415               	addwf	vfpfcnvrt@cp^0,w,c
  3370   010654  6E12               	movwf	??_vfpfcnvrt^0,c
  3371   010656  0E00               	movlw	0
  3372   010658  2016               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  3373   01065A  6E13               	movwf	(??_vfpfcnvrt+1)^0,c
  3374   01065C  5010               	movf	vfpfcnvrt@fmt^0,w,c
  3375   01065E  6ED9               	movwf	fsr2l,c
  3376   010660  6ADA               	clrf	fsr2h,c
  3377   010662  C012  FFDE         	movff	??_vfpfcnvrt,postinc2
  3378   010666  C013  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  3379   01066A                     
  3380                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  3381   01066A  0E20               	movlw	32
  3382   01066C  6E1B               	movwf	vfpfcnvrt@c^0,c
  3383                           
  3384                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  3385   01066E  BE18               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  3386   010670  EF3C  F083         	goto	u1241
  3387   010674  EF3F  F083         	goto	u1240
  3388   010678                     u1241:
  3389   010678  0E01               	movlw	1
  3390   01067A  EF40  F083         	goto	u1250
  3391   01067E                     u1240:
  3392   01067E  0E00               	movlw	0
  3393   010680                     u1250:
  3394   010680  6E14               	movwf	vfpfcnvrt@done^0,c
  3395   010682                     l2485:
  3396                           
  3397                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  3398   010682  061B               	decf	vfpfcnvrt@c^0,f,c
  3399   010684  501B               	movf	vfpfcnvrt@c^0,w,c
  3400   010686  0F60               	addlw	low _dbuf
  3401   010688  6ED9               	movwf	fsr2l,c
  3402   01068A  6ADA               	clrf	fsr2h,c
  3403   01068C  C017  F003         	movff	vfpfcnvrt@convarg,___awmod@dividend
  3404   010690  C018  F004         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  3405   010694  0E00               	movlw	0
  3406   010696  6E06               	movwf	(___awmod@divisor+1)^0,c
  3407   010698  0E0A               	movlw	10
  3408   01069A  6E05               	movwf	___awmod@divisor^0,c
  3409   01069C  ECED  F084         	call	___awmod	;wreg free
  3410   0106A0  C003  F009         	movff	?___awmod,abs@a
  3411   0106A4  C004  F00A         	movff	?___awmod+1,abs@a+1
  3412   0106A8  EC0F  F086         	call	_abs	;wreg free
  3413   0106AC  5009               	movf	?_abs^0,w,c
  3414   0106AE  0F30               	addlw	48
  3415   0106B0  6EDF               	movwf	indf2,c
  3416   0106B2                     
  3417                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  3418   0106B2  C017  F003         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  3419   0106B6  C018  F004         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  3420   0106BA  0E00               	movlw	0
  3421   0106BC  6E06               	movwf	(___awdiv@divisor+1)^0,c
  3422   0106BE  0E0A               	movlw	10
  3423   0106C0  6E05               	movwf	___awdiv@divisor^0,c
  3424   0106C2  EC2F  F084         	call	___awdiv	;wreg free
  3425   0106C6  C003  F017         	movff	?___awdiv,vfpfcnvrt@convarg
  3426   0106CA  C004  F018         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  3427   0106CE                     
  3428                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  3429   0106CE  5017               	movf	vfpfcnvrt@convarg^0,w,c
  3430   0106D0  1018               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  3431   0106D2  B4D8               	btfsc	status,2,c
  3432   0106D4  EF6E  F083         	goto	u1261
  3433   0106D8  EF70  F083         	goto	u1260
  3434   0106DC                     u1261:
  3435   0106DC  EF78  F083         	goto	l2493
  3436   0106E0                     u1260:
  3437   0106E0  501B               	movf	vfpfcnvrt@c^0,w,c
  3438   0106E2  A4D8               	btfss	status,2,c
  3439   0106E4  EF76  F083         	goto	u1271
  3440   0106E8  EF78  F083         	goto	u1270
  3441   0106EC                     u1271:
  3442   0106EC  EF41  F083         	goto	l2485
  3443   0106F0                     u1270:
  3444   0106F0                     l2493:
  3445                           
  3446                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  3447   0106F0  501B               	movf	vfpfcnvrt@c^0,w,c
  3448   0106F2  B4D8               	btfsc	status,2,c
  3449   0106F4  EF7E  F083         	goto	u1281
  3450   0106F8  EF80  F083         	goto	u1280
  3451   0106FC                     u1281:
  3452   0106FC  EFA1  F083         	goto	l2503
  3453   010700                     u1280:
  3454   010700  5014               	movf	vfpfcnvrt@done^0,w,c
  3455   010702  B4D8               	btfsc	status,2,c
  3456   010704  EF86  F083         	goto	u1291
  3457   010708  EF88  F083         	goto	u1290
  3458   01070C                     u1291:
  3459   01070C  EFA1  F083         	goto	l2503
  3460   010710                     u1290:
  3461   010710                     
  3462                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  3463   010710  061B               	decf	vfpfcnvrt@c^0,f,c
  3464   010712  501B               	movf	vfpfcnvrt@c^0,w,c
  3465   010714  0F60               	addlw	low _dbuf
  3466   010716  6ED9               	movwf	fsr2l,c
  3467   010718  6ADA               	clrf	fsr2h,c
  3468   01071A  0E2D               	movlw	45
  3469   01071C  6EDF               	movwf	indf2,c
  3470   01071E  EFA1  F083         	goto	l2503
  3471   010722                     l2499:
  3472                           
  3473                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  3474   010722  501B               	movf	vfpfcnvrt@c^0,w,c
  3475   010724  0F60               	addlw	low _dbuf
  3476   010726  6ED9               	movwf	fsr2l,c
  3477   010728  6ADA               	clrf	fsr2h,c
  3478   01072A  50DF               	movf	indf2,w,c
  3479   01072C  6E12               	movwf	??_vfpfcnvrt^0,c
  3480   01072E  5012               	movf	??_vfpfcnvrt^0,w,c
  3481   010730  6E05               	movwf	fputc@c^0,c
  3482   010732  6A06               	clrf	(fputc@c+1)^0,c
  3483   010734  C00E  F007         	movff	vfpfcnvrt@fp,fputc@fp
  3484   010738  C00F  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3485   01073C  ECCA  F083         	call	_fputc	;wreg free
  3486   010740  2A1B               	incf	vfpfcnvrt@c^0,f,c
  3487   010742                     l2503:
  3488                           
  3489                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  3490   010742  0E20               	movlw	32
  3491   010744  181B               	xorwf	vfpfcnvrt@c^0,w,c
  3492   010746  A4D8               	btfss	status,2,c
  3493   010748  EFA8  F083         	goto	u1301
  3494   01074C  EFAA  F083         	goto	u1300
  3495   010750                     u1301:
  3496   010750  EF91  F083         	goto	l2499
  3497   010754                     u1300:
  3498   010754  EFC9  F083         	goto	l1602
  3499   010758                     l2505:
  3500                           
  3501                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  3502   010758  5010               	movf	vfpfcnvrt@fmt^0,w,c
  3503   01075A  6ED9               	movwf	fsr2l,c
  3504   01075C  6ADA               	clrf	fsr2h,c
  3505   01075E  2ADE               	incf	postinc2,f,c
  3506   010760  0E00               	movlw	0
  3507   010762  22DD               	addwfc	postdec2,f,c
  3508   010764  EFC9  F083         	goto	l1602
  3509   010768                     l2509:
  3510                           
  3511                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  3512   010768  5010               	movf	vfpfcnvrt@fmt^0,w,c
  3513   01076A  6ED9               	movwf	fsr2l,c
  3514   01076C  6ADA               	clrf	fsr2h,c
  3515   01076E  CFDE FFF6          	movff	postinc2,tblptrl
  3516   010772  CFDD FFF7          	movff	postdec2,tblptrh
  3517   010776                     	if	0	;tblptru may be non-zero
  3518   010776                     	endif
  3519   010776                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3520   010776  0E00               	movlw	low (__mediumconst shr (0+16))
  3521   010778  6EF8               	movwf	tblptru,c
  3522   01077A                     	endif
  3523   01077A  0008               	tblrd		*
  3524   01077C  50F5               	movf	tablat,w,c
  3525   01077E  6E05               	movwf	fputc@c^0,c
  3526   010780  6A06               	clrf	(fputc@c+1)^0,c
  3527   010782  C00E  F007         	movff	vfpfcnvrt@fp,fputc@fp
  3528   010786  C00F  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3529   01078A  ECCA  F083         	call	_fputc	;wreg free
  3530   01078E  EFAC  F083         	goto	l2505
  3531   010792                     l1602:
  3532   010792  0012               	return		;funcret
  3533   010794                     __end_of_vfpfcnvrt:
  3534                           	callstack 0
  3535                           
  3536 ;; *************** function _fputc *****************
  3537 ;; Defined at:
  3538 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  3539 ;; Parameters:    Size  Location     Type
  3540 ;;  c               2    4[COMRAM] int 
  3541 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  3542 ;;		 -> NULL(0), 
  3543 ;; Auto vars:     Size  Location     Type
  3544 ;;		None
  3545 ;; Return value:  Size  Location     Type
  3546 ;;                  2    4[COMRAM] int 
  3547 ;; Registers used:
  3548 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3549 ;; Tracked objects:
  3550 ;;		On entry : 0/0
  3551 ;;		On exit  : 0/0
  3552 ;;		Unchanged: 0/0
  3553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3554 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3556 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3557 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3558 ;;Total ram usage:        9 bytes
  3559 ;; Hardware stack levels used: 1
  3560 ;; Hardware stack levels required when called: 5
  3561 ;; This function calls:
  3562 ;;		_putch
  3563 ;; This function is called by:
  3564 ;;		_vfpfcnvrt
  3565 ;; This function uses a non-reentrant model
  3566 ;;
  3567                           
  3568                           	psect	text21
  3569   010794                     __ptext21:
  3570                           	callstack 0
  3571   010794                     _fputc:
  3572                           	callstack 21
  3573   010794  5007               	movf	fputc@fp^0,w,c
  3574   010796  1008               	iorwf	(fputc@fp+1)^0,w,c
  3575   010798  B4D8               	btfsc	status,2,c
  3576   01079A  EFD1  F083         	goto	u1161
  3577   01079E  EFD3  F083         	goto	u1160
  3578   0107A2                     u1161:
  3579   0107A2  EFDC  F083         	goto	l2451
  3580   0107A6                     u1160:
  3581   0107A6  5007               	movf	fputc@fp^0,w,c
  3582   0107A8  1008               	iorwf	(fputc@fp+1)^0,w,c
  3583   0107AA  A4D8               	btfss	status,2,c
  3584   0107AC  EFDA  F083         	goto	u1171
  3585   0107B0  EFDC  F083         	goto	u1170
  3586   0107B4                     u1171:
  3587   0107B4  EFE1  F083         	goto	l2453
  3588   0107B8                     u1170:
  3589   0107B8                     l2451:
  3590   0107B8  5005               	movf	fputc@c^0,w,c
  3591   0107BA  EC1E  F087         	call	_putch
  3592   0107BE  EF2E  F084         	goto	l1627
  3593   0107C2                     l2453:
  3594   0107C2  EE20 F00A          	lfsr	2,10
  3595   0107C6  5007               	movf	fputc@fp^0,w,c
  3596   0107C8  26D9               	addwf	fsr2l,f,c
  3597   0107CA  5008               	movf	(fputc@fp+1)^0,w,c
  3598   0107CC  22DA               	addwfc	fsr2h,f,c
  3599   0107CE  50DE               	movf	postinc2,w,c
  3600   0107D0  10DE               	iorwf	postinc2,w,c
  3601   0107D2  B4D8               	btfsc	status,2,c
  3602   0107D4  EFEE  F083         	goto	u1181
  3603   0107D8  EFF0  F083         	goto	u1180
  3604   0107DC                     u1181:
  3605   0107DC  EF0B  F084         	goto	l2457
  3606   0107E0                     u1180:
  3607   0107E0  EE20 F00A          	lfsr	2,10
  3608   0107E4  5007               	movf	fputc@fp^0,w,c
  3609   0107E6  26D9               	addwf	fsr2l,f,c
  3610   0107E8  5008               	movf	(fputc@fp+1)^0,w,c
  3611   0107EA  22DA               	addwfc	fsr2h,f,c
  3612   0107EC  EE10 F003          	lfsr	1,3
  3613   0107F0  5007               	movf	fputc@fp^0,w,c
  3614   0107F2  26E1               	addwf	fsr1l,f,c
  3615   0107F4  5008               	movf	(fputc@fp+1)^0,w,c
  3616   0107F6  22E2               	addwfc	fsr1h,f,c
  3617   0107F8  50DE               	movf	postinc2,w,c
  3618   0107FA  5CE6               	subwf	postinc1,w,c
  3619   0107FC  50E6               	movf	postinc1,w,c
  3620   0107FE  0A80               	xorlw	128
  3621   010800  6E0D               	movwf	(??_fputc+4)^0,c
  3622   010802  50DE               	movf	postinc2,w,c
  3623   010804  0A80               	xorlw	128
  3624   010806  580D               	subwfb	(??_fputc+4)^0,w,c
  3625   010808  B0D8               	btfsc	status,0,c
  3626   01080A  EF09  F084         	goto	u1191
  3627   01080E  EF0B  F084         	goto	u1190
  3628   010812                     u1191:
  3629   010812  EF2E  F084         	goto	l1627
  3630   010816                     u1190:
  3631   010816                     l2457:
  3632   010816  EE20 F003          	lfsr	2,3
  3633   01081A  5007               	movf	fputc@fp^0,w,c
  3634   01081C  26D9               	addwf	fsr2l,f,c
  3635   01081E  5008               	movf	(fputc@fp+1)^0,w,c
  3636   010820  22DA               	addwfc	fsr2h,f,c
  3637   010822  CFDE F009          	movff	postinc2,??_fputc
  3638   010826  CFDD F00A          	movff	postdec2,??_fputc+1
  3639   01082A  C007  FFD9         	movff	fputc@fp,fsr2l
  3640   01082E  C008  FFDA         	movff	fputc@fp+1,fsr2h
  3641   010832  CFDE F00B          	movff	postinc2,??_fputc+2
  3642   010836  CFDD F00C          	movff	postdec2,??_fputc+3
  3643   01083A  5009               	movf	??_fputc^0,w,c
  3644   01083C  240B               	addwf	(??_fputc+2)^0,w,c
  3645   01083E  6ED9               	movwf	fsr2l,c
  3646   010840  500A               	movf	(??_fputc+1)^0,w,c
  3647   010842  200C               	addwfc	(??_fputc+3)^0,w,c
  3648   010844  6EDA               	movwf	fsr2h,c
  3649   010846  C005  FFDF         	movff	fputc@c,indf2
  3650   01084A  EE20 F003          	lfsr	2,3
  3651   01084E  5007               	movf	fputc@fp^0,w,c
  3652   010850  26D9               	addwf	fsr2l,f,c
  3653   010852  5008               	movf	(fputc@fp+1)^0,w,c
  3654   010854  22DA               	addwfc	fsr2h,f,c
  3655   010856  2ADE               	incf	postinc2,f,c
  3656   010858  0E00               	movlw	0
  3657   01085A  22DD               	addwfc	postdec2,f,c
  3658   01085C                     l1627:
  3659   01085C  0012               	return		;funcret
  3660   01085E                     __end_of_fputc:
  3661                           	callstack 0
  3662                           
  3663 ;; *************** function _putch *****************
  3664 ;; Defined at:
  3665 ;;		line 246 in file "mcc_generated_files/uart/src/eusart1.c"
  3666 ;; Parameters:    Size  Location     Type
  3667 ;;  txData          1    wreg     unsigned char 
  3668 ;; Auto vars:     Size  Location     Type
  3669 ;;  txData          1    3[COMRAM] unsigned char 
  3670 ;; Return value:  Size  Location     Type
  3671 ;;                  1    wreg      void 
  3672 ;; Registers used:
  3673 ;;		wreg, status,2, cstack
  3674 ;; Tracked objects:
  3675 ;;		On entry : 0/0
  3676 ;;		On exit  : 0/0
  3677 ;;		Unchanged: 0/0
  3678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3680 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3682 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3683 ;;Total ram usage:        1 bytes
  3684 ;; Hardware stack levels used: 1
  3685 ;; Hardware stack levels required when called: 4
  3686 ;; This function calls:
  3687 ;;		_EUSART1_IsTxReady
  3688 ;;		_EUSART1_Write
  3689 ;; This function is called by:
  3690 ;;		_fputc
  3691 ;; This function uses a non-reentrant model
  3692 ;;
  3693                           
  3694                           	psect	text22
  3695   010E3C                     __ptext22:
  3696                           	callstack 0
  3697   010E3C                     _putch:
  3698                           	callstack 21
  3699                           
  3700                           ;incstack = 0
  3701                           ;putch@txData stored from wreg
  3702   010E3C  6E04               	movwf	putch@txData^0,c
  3703   010E3E                     l2361:
  3704   010E3E  ECA5  F086         	call	_EUSART1_IsTxReady	;wreg free
  3705   010E42  0900               	iorlw	0
  3706   010E44  B4D8               	btfsc	status,2,c
  3707   010E46  EF27  F087         	goto	u1031
  3708   010E4A  EF29  F087         	goto	u1030
  3709   010E4E                     u1031:
  3710   010E4E  EF1F  F087         	goto	l2361
  3711   010E52                     u1030:
  3712   010E52                     
  3713                           ;mcc_generated_files/uart/src/eusart1.c: 249:     return EUSART1_Write(txData);;	Return 
      +                          value of _putch is never used
  3714   010E52  5004               	movf	putch@txData^0,w,c
  3715   010E54  EC9A  F087         	call	_EUSART1_Write
  3716   010E58  0012               	return		;funcret
  3717   010E5A                     __end_of_putch:
  3718                           	callstack 0
  3719                           
  3720 ;; *************** function _EUSART1_Write *****************
  3721 ;; Defined at:
  3722 ;;		line 235 in file "mcc_generated_files/uart/src/eusart1.c"
  3723 ;; Parameters:    Size  Location     Type
  3724 ;;  txData          1    wreg     unsigned char 
  3725 ;; Auto vars:     Size  Location     Type
  3726 ;;  txData          1    2[COMRAM] unsigned char 
  3727 ;; Return value:  Size  Location     Type
  3728 ;;                  1    wreg      void 
  3729 ;; Registers used:
  3730 ;;		wreg
  3731 ;; Tracked objects:
  3732 ;;		On entry : 0/0
  3733 ;;		On exit  : 0/0
  3734 ;;		Unchanged: 0/0
  3735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3737 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3739 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3740 ;;Total ram usage:        1 bytes
  3741 ;; Hardware stack levels used: 1
  3742 ;; Hardware stack levels required when called: 3
  3743 ;; This function calls:
  3744 ;;		Nothing
  3745 ;; This function is called by:
  3746 ;;		_putch
  3747 ;;		_ApplicationTask
  3748 ;; This function uses a non-reentrant model
  3749 ;;
  3750                           
  3751                           	psect	text23
  3752   010F34                     __ptext23:
  3753                           	callstack 0
  3754   010F34                     _EUSART1_Write:
  3755                           	callstack 21
  3756                           
  3757                           ;incstack = 0
  3758                           ;EUSART1_Write@txData stored from wreg
  3759   010F34  6E03               	movwf	EUSART1_Write@txData^0,c
  3760   010F36                     
  3761                           ;mcc_generated_files/uart/src/eusart1.c: 235: void EUSART1_Write(uint8_t txData);mcc_gen
      +                          erated_files/uart/src/eusart1.c: 236: {;mcc_generated_files/uart/src/eusart1.c: 237:    
      +                           TX1REG = txData;
  3762   010F36  C003  FF99         	movff	EUSART1_Write@txData,3993	;volatile
  3763   010F3A  0012               	return		;funcret
  3764   010F3C                     __end_of_EUSART1_Write:
  3765                           	callstack 0
  3766                           
  3767 ;; *************** function _EUSART1_IsTxReady *****************
  3768 ;; Defined at:
  3769 ;;		line 198 in file "mcc_generated_files/uart/src/eusart1.c"
  3770 ;; Parameters:    Size  Location     Type
  3771 ;;		None
  3772 ;; Auto vars:     Size  Location     Type
  3773 ;;		None
  3774 ;; Return value:  Size  Location     Type
  3775 ;;                  1    wreg      _Bool 
  3776 ;; Registers used:
  3777 ;;		wreg, status,2
  3778 ;; Tracked objects:
  3779 ;;		On entry : 0/0
  3780 ;;		On exit  : 0/0
  3781 ;;		Unchanged: 0/0
  3782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3784 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3786 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3787 ;;Total ram usage:        1 bytes
  3788 ;; Hardware stack levels used: 1
  3789 ;; Hardware stack levels required when called: 3
  3790 ;; This function calls:
  3791 ;;		Nothing
  3792 ;; This function is called by:
  3793 ;;		_putch
  3794 ;;		_ApplicationTask
  3795 ;; This function uses a non-reentrant model
  3796 ;;
  3797                           
  3798                           	psect	text24
  3799   010D4A                     __ptext24:
  3800                           	callstack 0
  3801   010D4A                     _EUSART1_IsTxReady:
  3802                           	callstack 21
  3803   010D4A                     
  3804                           ;mcc_generated_files/uart/src/eusart1.c: 200:     return (_Bool)(PIR3bits.TX1IF && TX1ST
      +                          Abits.TXEN);
  3805   010D4A  0E00               	movlw	0
  3806   010D4C  6E03               	movwf	_EUSART1_IsTxReady$1490^0,c
  3807   010D4E  010E               	movlb	14	; () banked
  3808   010D50  A9C8               	btfss	200,4,b	;volatile
  3809   010D52  EFAD  F086         	goto	u1011
  3810   010D56  EFAF  F086         	goto	u1010
  3811   010D5A                     u1011:
  3812   010D5A  EFB8  F086         	goto	l656
  3813   010D5E                     u1010:
  3814   010D5E                     
  3815                           ; BSR set to: 14
  3816   010D5E  AA9D               	btfss	157,5,c	;volatile
  3817   010D60  EFB4  F086         	goto	u1021
  3818   010D64  EFB6  F086         	goto	u1020
  3819   010D68                     u1021:
  3820   010D68  EFB8  F086         	goto	l656
  3821   010D6C                     u1020:
  3822   010D6C                     
  3823                           ; BSR set to: 14
  3824   010D6C  0E01               	movlw	1
  3825   010D6E  6E03               	movwf	_EUSART1_IsTxReady$1490^0,c
  3826   010D70                     l656:
  3827                           
  3828                           ; BSR set to: 14
  3829   010D70  5003               	movf	_EUSART1_IsTxReady$1490^0,w,c
  3830   010D72                     
  3831                           ; BSR set to: 14
  3832   010D72  0012               	return		;funcret
  3833   010D74                     __end_of_EUSART1_IsTxReady:
  3834                           	callstack 0
  3835                           
  3836 ;; *************** function _abs *****************
  3837 ;; Defined at:
  3838 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  3839 ;; Parameters:    Size  Location     Type
  3840 ;;  a               2    8[COMRAM] int 
  3841 ;; Auto vars:     Size  Location     Type
  3842 ;;		None
  3843 ;; Return value:  Size  Location     Type
  3844 ;;                  2    8[COMRAM] int 
  3845 ;; Registers used:
  3846 ;;		wreg, status,2, status,0
  3847 ;; Tracked objects:
  3848 ;;		On entry : 0/0
  3849 ;;		On exit  : 0/0
  3850 ;;		Unchanged: 0/0
  3851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3852 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3854 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3855 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3856 ;;Total ram usage:        4 bytes
  3857 ;; Hardware stack levels used: 1
  3858 ;; Hardware stack levels required when called: 3
  3859 ;; This function calls:
  3860 ;;		Nothing
  3861 ;; This function is called by:
  3862 ;;		_vfpfcnvrt
  3863 ;; This function uses a non-reentrant model
  3864 ;;
  3865                           
  3866                           	psect	text25
  3867   010C1E                     __ptext25:
  3868                           	callstack 0
  3869   010C1E                     _abs:
  3870                           	callstack 23
  3871   010C1E  BE0A               	btfsc	(abs@a+1)^0,7,c
  3872   010C20  EF14  F086         	goto	u1201
  3873   010C24  EF16  F086         	goto	u1200
  3874   010C28                     u1201:
  3875   010C28  EF1C  F086         	goto	l1612
  3876   010C2C                     u1200:
  3877   010C2C  C009  F009         	movff	abs@a,?_abs
  3878   010C30  C00A  F00A         	movff	abs@a+1,?_abs+1
  3879   010C34  EF28  F086         	goto	l1615
  3880   010C38                     l1612:
  3881   010C38  C009  F00B         	movff	abs@a,??_abs
  3882   010C3C  C00A  F00C         	movff	abs@a+1,??_abs+1
  3883   010C40  1E0B               	comf	??_abs^0,f,c
  3884   010C42  1E0C               	comf	(??_abs+1)^0,f,c
  3885   010C44  4A0B               	infsnz	??_abs^0,f,c
  3886   010C46  2A0C               	incf	(??_abs+1)^0,f,c
  3887   010C48  C00B  F009         	movff	??_abs,?_abs
  3888   010C4C  C00C  F00A         	movff	??_abs+1,?_abs+1
  3889   010C50                     l1615:
  3890   010C50  0012               	return		;funcret
  3891   010C52                     __end_of_abs:
  3892                           	callstack 0
  3893                           
  3894 ;; *************** function ___awmod *****************
  3895 ;; Defined at:
  3896 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  3897 ;; Parameters:    Size  Location     Type
  3898 ;;  dividend        2    2[COMRAM] int 
  3899 ;;  divisor         2    4[COMRAM] int 
  3900 ;; Auto vars:     Size  Location     Type
  3901 ;;  sign            1    7[COMRAM] unsigned char 
  3902 ;;  counter         1    6[COMRAM] unsigned char 
  3903 ;; Return value:  Size  Location     Type
  3904 ;;                  2    2[COMRAM] int 
  3905 ;; Registers used:
  3906 ;;		wreg, status,2, status,0
  3907 ;; Tracked objects:
  3908 ;;		On entry : 0/0
  3909 ;;		On exit  : 0/0
  3910 ;;		Unchanged: 0/0
  3911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3912 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3913 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3915 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3916 ;;Total ram usage:        6 bytes
  3917 ;; Hardware stack levels used: 1
  3918 ;; Hardware stack levels required when called: 3
  3919 ;; This function calls:
  3920 ;;		Nothing
  3921 ;; This function is called by:
  3922 ;;		_vfpfcnvrt
  3923 ;; This function uses a non-reentrant model
  3924 ;;
  3925                           
  3926                           	psect	text26
  3927   0109DA                     __ptext26:
  3928                           	callstack 0
  3929   0109DA                     ___awmod:
  3930                           	callstack 23
  3931   0109DA  0E00               	movlw	0
  3932   0109DC  6E08               	movwf	___awmod@sign^0,c
  3933   0109DE  BE04               	btfsc	(___awmod@dividend+1)^0,7,c
  3934   0109E0  EFF6  F084         	goto	u1100
  3935   0109E4  EFF4  F084         	goto	u1101
  3936   0109E8                     u1101:
  3937   0109E8  EFFC  F084         	goto	l2419
  3938   0109EC                     u1100:
  3939   0109EC  6C03               	negf	___awmod@dividend^0,c
  3940   0109EE  1E04               	comf	(___awmod@dividend+1)^0,f,c
  3941   0109F0  B0D8               	btfsc	status,0,c
  3942   0109F2  2A04               	incf	(___awmod@dividend+1)^0,f,c
  3943   0109F4  0E01               	movlw	1
  3944   0109F6  6E08               	movwf	___awmod@sign^0,c
  3945   0109F8                     l2419:
  3946   0109F8  BE06               	btfsc	(___awmod@divisor+1)^0,7,c
  3947   0109FA  EF03  F085         	goto	u1110
  3948   0109FE  EF01  F085         	goto	u1111
  3949   010A02                     u1111:
  3950   010A02  EF07  F085         	goto	l2423
  3951   010A06                     u1110:
  3952   010A06  6C05               	negf	___awmod@divisor^0,c
  3953   010A08  1E06               	comf	(___awmod@divisor+1)^0,f,c
  3954   010A0A  B0D8               	btfsc	status,0,c
  3955   010A0C  2A06               	incf	(___awmod@divisor+1)^0,f,c
  3956   010A0E                     l2423:
  3957   010A0E  5005               	movf	___awmod@divisor^0,w,c
  3958   010A10  1006               	iorwf	(___awmod@divisor+1)^0,w,c
  3959   010A12  B4D8               	btfsc	status,2,c
  3960   010A14  EF0E  F085         	goto	u1121
  3961   010A18  EF10  F085         	goto	u1120
  3962   010A1C                     u1121:
  3963   010A1C  EF34  F085         	goto	l2439
  3964   010A20                     u1120:
  3965   010A20  0E01               	movlw	1
  3966   010A22  6E07               	movwf	___awmod@counter^0,c
  3967   010A24  EF18  F085         	goto	l2429
  3968   010A28                     l2427:
  3969   010A28  90D8               	bcf	status,0,c
  3970   010A2A  3605               	rlcf	___awmod@divisor^0,f,c
  3971   010A2C  3606               	rlcf	(___awmod@divisor+1)^0,f,c
  3972   010A2E  2A07               	incf	___awmod@counter^0,f,c
  3973   010A30                     l2429:
  3974   010A30  AE06               	btfss	(___awmod@divisor+1)^0,7,c
  3975   010A32  EF1D  F085         	goto	u1131
  3976   010A36  EF1F  F085         	goto	u1130
  3977   010A3A                     u1131:
  3978   010A3A  EF14  F085         	goto	l2427
  3979   010A3E                     u1130:
  3980   010A3E                     l2431:
  3981   010A3E  5005               	movf	___awmod@divisor^0,w,c
  3982   010A40  5C03               	subwf	___awmod@dividend^0,w,c
  3983   010A42  5006               	movf	(___awmod@divisor+1)^0,w,c
  3984   010A44  5804               	subwfb	(___awmod@dividend+1)^0,w,c
  3985   010A46  A0D8               	btfss	status,0,c
  3986   010A48  EF28  F085         	goto	u1141
  3987   010A4C  EF2A  F085         	goto	u1140
  3988   010A50                     u1141:
  3989   010A50  EF2E  F085         	goto	l2435
  3990   010A54                     u1140:
  3991   010A54  5005               	movf	___awmod@divisor^0,w,c
  3992   010A56  5E03               	subwf	___awmod@dividend^0,f,c
  3993   010A58  5006               	movf	(___awmod@divisor+1)^0,w,c
  3994   010A5A  5A04               	subwfb	(___awmod@dividend+1)^0,f,c
  3995   010A5C                     l2435:
  3996   010A5C  90D8               	bcf	status,0,c
  3997   010A5E  3206               	rrcf	(___awmod@divisor+1)^0,f,c
  3998   010A60  3205               	rrcf	___awmod@divisor^0,f,c
  3999   010A62  2E07               	decfsz	___awmod@counter^0,f,c
  4000   010A64  EF1F  F085         	goto	l2431
  4001   010A68                     l2439:
  4002   010A68  5008               	movf	___awmod@sign^0,w,c
  4003   010A6A  B4D8               	btfsc	status,2,c
  4004   010A6C  EF3A  F085         	goto	u1151
  4005   010A70  EF3C  F085         	goto	u1150
  4006   010A74                     u1151:
  4007   010A74  EF40  F085         	goto	l2443
  4008   010A78                     u1150:
  4009   010A78  6C03               	negf	___awmod@dividend^0,c
  4010   010A7A  1E04               	comf	(___awmod@dividend+1)^0,f,c
  4011   010A7C  B0D8               	btfsc	status,0,c
  4012   010A7E  2A04               	incf	(___awmod@dividend+1)^0,f,c
  4013   010A80                     l2443:
  4014   010A80  C003  F003         	movff	___awmod@dividend,?___awmod
  4015   010A84  C004  F004         	movff	___awmod@dividend+1,?___awmod+1
  4016   010A88  0012               	return		;funcret
  4017   010A8A                     __end_of___awmod:
  4018                           	callstack 0
  4019                           
  4020 ;; *************** function ___awdiv *****************
  4021 ;; Defined at:
  4022 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  4023 ;; Parameters:    Size  Location     Type
  4024 ;;  dividend        2    2[COMRAM] int 
  4025 ;;  divisor         2    4[COMRAM] int 
  4026 ;; Auto vars:     Size  Location     Type
  4027 ;;  quotient        2    8[COMRAM] int 
  4028 ;;  sign            1    7[COMRAM] unsigned char 
  4029 ;;  counter         1    6[COMRAM] unsigned char 
  4030 ;; Return value:  Size  Location     Type
  4031 ;;                  2    2[COMRAM] int 
  4032 ;; Registers used:
  4033 ;;		wreg, status,2, status,0
  4034 ;; Tracked objects:
  4035 ;;		On entry : 0/0
  4036 ;;		On exit  : 0/0
  4037 ;;		Unchanged: 0/0
  4038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4039 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4040 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4042 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4043 ;;Total ram usage:        8 bytes
  4044 ;; Hardware stack levels used: 1
  4045 ;; Hardware stack levels required when called: 3
  4046 ;; This function calls:
  4047 ;;		Nothing
  4048 ;; This function is called by:
  4049 ;;		_vfpfcnvrt
  4050 ;; This function uses a non-reentrant model
  4051 ;;
  4052                           
  4053                           	psect	text27
  4054   01085E                     __ptext27:
  4055                           	callstack 0
  4056   01085E                     ___awdiv:
  4057                           	callstack 23
  4058   01085E  0E00               	movlw	0
  4059   010860  6E08               	movwf	___awdiv@sign^0,c
  4060   010862  BE06               	btfsc	(___awdiv@divisor+1)^0,7,c
  4061   010864  EF38  F084         	goto	u1040
  4062   010868  EF36  F084         	goto	u1041
  4063   01086C                     u1041:
  4064   01086C  EF3E  F084         	goto	l2375
  4065   010870                     u1040:
  4066   010870  6C05               	negf	___awdiv@divisor^0,c
  4067   010872  1E06               	comf	(___awdiv@divisor+1)^0,f,c
  4068   010874  B0D8               	btfsc	status,0,c
  4069   010876  2A06               	incf	(___awdiv@divisor+1)^0,f,c
  4070   010878  0E01               	movlw	1
  4071   01087A  6E08               	movwf	___awdiv@sign^0,c
  4072   01087C                     l2375:
  4073   01087C  BE04               	btfsc	(___awdiv@dividend+1)^0,7,c
  4074   01087E  EF45  F084         	goto	u1050
  4075   010882  EF43  F084         	goto	u1051
  4076   010886                     u1051:
  4077   010886  EF4B  F084         	goto	l2381
  4078   01088A                     u1050:
  4079   01088A  6C03               	negf	___awdiv@dividend^0,c
  4080   01088C  1E04               	comf	(___awdiv@dividend+1)^0,f,c
  4081   01088E  B0D8               	btfsc	status,0,c
  4082   010890  2A04               	incf	(___awdiv@dividend+1)^0,f,c
  4083   010892  0E01               	movlw	1
  4084   010894  1A08               	xorwf	___awdiv@sign^0,f,c
  4085   010896                     l2381:
  4086   010896  0E00               	movlw	0
  4087   010898  6E0A               	movwf	(___awdiv@quotient+1)^0,c
  4088   01089A  0E00               	movlw	0
  4089   01089C  6E09               	movwf	___awdiv@quotient^0,c
  4090   01089E  5005               	movf	___awdiv@divisor^0,w,c
  4091   0108A0  1006               	iorwf	(___awdiv@divisor+1)^0,w,c
  4092   0108A2  B4D8               	btfsc	status,2,c
  4093   0108A4  EF56  F084         	goto	u1061
  4094   0108A8  EF58  F084         	goto	u1060
  4095   0108AC                     u1061:
  4096   0108AC  EF80  F084         	goto	l2403
  4097   0108B0                     u1060:
  4098   0108B0  0E01               	movlw	1
  4099   0108B2  6E07               	movwf	___awdiv@counter^0,c
  4100   0108B4  EF60  F084         	goto	l2389
  4101   0108B8                     l2387:
  4102   0108B8  90D8               	bcf	status,0,c
  4103   0108BA  3605               	rlcf	___awdiv@divisor^0,f,c
  4104   0108BC  3606               	rlcf	(___awdiv@divisor+1)^0,f,c
  4105   0108BE  2A07               	incf	___awdiv@counter^0,f,c
  4106   0108C0                     l2389:
  4107   0108C0  AE06               	btfss	(___awdiv@divisor+1)^0,7,c
  4108   0108C2  EF65  F084         	goto	u1071
  4109   0108C6  EF67  F084         	goto	u1070
  4110   0108CA                     u1071:
  4111   0108CA  EF5C  F084         	goto	l2387
  4112   0108CE                     u1070:
  4113   0108CE                     l2391:
  4114   0108CE  90D8               	bcf	status,0,c
  4115   0108D0  3609               	rlcf	___awdiv@quotient^0,f,c
  4116   0108D2  360A               	rlcf	(___awdiv@quotient+1)^0,f,c
  4117   0108D4  5005               	movf	___awdiv@divisor^0,w,c
  4118   0108D6  5C03               	subwf	___awdiv@dividend^0,w,c
  4119   0108D8  5006               	movf	(___awdiv@divisor+1)^0,w,c
  4120   0108DA  5804               	subwfb	(___awdiv@dividend+1)^0,w,c
  4121   0108DC  A0D8               	btfss	status,0,c
  4122   0108DE  EF73  F084         	goto	u1081
  4123   0108E2  EF75  F084         	goto	u1080
  4124   0108E6                     u1081:
  4125   0108E6  EF7A  F084         	goto	l2399
  4126   0108EA                     u1080:
  4127   0108EA  5005               	movf	___awdiv@divisor^0,w,c
  4128   0108EC  5E03               	subwf	___awdiv@dividend^0,f,c
  4129   0108EE  5006               	movf	(___awdiv@divisor+1)^0,w,c
  4130   0108F0  5A04               	subwfb	(___awdiv@dividend+1)^0,f,c
  4131   0108F2  8009               	bsf	___awdiv@quotient^0,0,c
  4132   0108F4                     l2399:
  4133   0108F4  90D8               	bcf	status,0,c
  4134   0108F6  3206               	rrcf	(___awdiv@divisor+1)^0,f,c
  4135   0108F8  3205               	rrcf	___awdiv@divisor^0,f,c
  4136   0108FA  2E07               	decfsz	___awdiv@counter^0,f,c
  4137   0108FC  EF67  F084         	goto	l2391
  4138   010900                     l2403:
  4139   010900  5008               	movf	___awdiv@sign^0,w,c
  4140   010902  B4D8               	btfsc	status,2,c
  4141   010904  EF86  F084         	goto	u1091
  4142   010908  EF88  F084         	goto	u1090
  4143   01090C                     u1091:
  4144   01090C  EF8C  F084         	goto	l2407
  4145   010910                     u1090:
  4146   010910  6C09               	negf	___awdiv@quotient^0,c
  4147   010912  1E0A               	comf	(___awdiv@quotient+1)^0,f,c
  4148   010914  B0D8               	btfsc	status,0,c
  4149   010916  2A0A               	incf	(___awdiv@quotient+1)^0,f,c
  4150   010918                     l2407:
  4151   010918  C009  F003         	movff	___awdiv@quotient,?___awdiv
  4152   01091C  C00A  F004         	movff	___awdiv@quotient+1,?___awdiv+1
  4153   010920  0012               	return		;funcret
  4154   010922                     __end_of___awdiv:
  4155                           	callstack 0
  4156                           
  4157 ;; *************** function _TMR0_Stop *****************
  4158 ;; Defined at:
  4159 ;;		line 80 in file "mcc_generated_files/timer/src/tmr0.c"
  4160 ;; Parameters:    Size  Location     Type
  4161 ;;		None
  4162 ;; Auto vars:     Size  Location     Type
  4163 ;;		None
  4164 ;; Return value:  Size  Location     Type
  4165 ;;                  1    wreg      void 
  4166 ;; Registers used:
  4167 ;;		None
  4168 ;; Tracked objects:
  4169 ;;		On entry : 0/0
  4170 ;;		On exit  : 0/0
  4171 ;;		Unchanged: 0/0
  4172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4177 ;;Total ram usage:        0 bytes
  4178 ;; Hardware stack levels used: 1
  4179 ;; Hardware stack levels required when called: 3
  4180 ;; This function calls:
  4181 ;;		Nothing
  4182 ;; This function is called by:
  4183 ;;		_ApplicationTask
  4184 ;; This function uses a non-reentrant model
  4185 ;;
  4186                           
  4187                           	psect	text28
  4188   010F56                     __ptext28:
  4189                           	callstack 0
  4190   010F56                     _TMR0_Stop:
  4191                           	callstack 26
  4192   010F56                     
  4193                           ;mcc_generated_files/timer/src/tmr0.c: 82:     T0CON0bits.T0EN = 0;
  4194   010F56  9ED4               	bcf	212,7,c	;volatile
  4195   010F58  0012               	return		;funcret
  4196   010F5A                     __end_of_TMR0_Stop:
  4197                           	callstack 0
  4198                           
  4199 ;; *************** function _TMR4_Stop *****************
  4200 ;; Defined at:
  4201 ;;		line 100 in file "mcc_generated_files/timer/src/tmr4.c"
  4202 ;; Parameters:    Size  Location     Type
  4203 ;;		None
  4204 ;; Auto vars:     Size  Location     Type
  4205 ;;		None
  4206 ;; Return value:  Size  Location     Type
  4207 ;;                  1    wreg      void 
  4208 ;; Registers used:
  4209 ;;		None
  4210 ;; Tracked objects:
  4211 ;;		On entry : 0/0
  4212 ;;		On exit  : 0/0
  4213 ;;		Unchanged: 0/0
  4214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4219 ;;Total ram usage:        0 bytes
  4220 ;; Hardware stack levels used: 1
  4221 ;; Hardware stack levels required when called: 3
  4222 ;; This function calls:
  4223 ;;		Nothing
  4224 ;; This function is called by:
  4225 ;;		_ApplicationTask
  4226 ;; This function uses a non-reentrant model
  4227 ;;
  4228                           
  4229                           	psect	text29
  4230   010F5A                     __ptext29:
  4231                           	callstack 0
  4232   010F5A                     _TMR4_Stop:
  4233                           	callstack 26
  4234   010F5A                     
  4235                           ;mcc_generated_files/timer/src/tmr4.c: 103:     T4CONbits.TMR4ON = 0;
  4236   010F5A  9EB6               	bcf	182,7,c	;volatile
  4237   010F5C  0012               	return		;funcret
  4238   010F5E                     __end_of_TMR4_Stop:
  4239                           	callstack 0
  4240                           
  4241 ;; *************** function _TMR0_Start *****************
  4242 ;; Defined at:
  4243 ;;		line 75 in file "mcc_generated_files/timer/src/tmr0.c"
  4244 ;; Parameters:    Size  Location     Type
  4245 ;;		None
  4246 ;; Auto vars:     Size  Location     Type
  4247 ;;		None
  4248 ;; Return value:  Size  Location     Type
  4249 ;;                  1    wreg      void 
  4250 ;; Registers used:
  4251 ;;		None
  4252 ;; Tracked objects:
  4253 ;;		On entry : 0/0
  4254 ;;		On exit  : 0/0
  4255 ;;		Unchanged: 0/0
  4256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4261 ;;Total ram usage:        0 bytes
  4262 ;; Hardware stack levels used: 1
  4263 ;; Hardware stack levels required when called: 3
  4264 ;; This function calls:
  4265 ;;		Nothing
  4266 ;; This function is called by:
  4267 ;;		_ApplicationTask
  4268 ;; This function uses a non-reentrant model
  4269 ;;
  4270                           
  4271                           	psect	text30
  4272   010F5E                     __ptext30:
  4273                           	callstack 0
  4274   010F5E                     _TMR0_Start:
  4275                           	callstack 26
  4276   010F5E                     
  4277                           ;mcc_generated_files/timer/src/tmr0.c: 77:     T0CON0bits.T0EN = 1;
  4278   010F5E  8ED4               	bsf	212,7,c	;volatile
  4279   010F60  0012               	return		;funcret
  4280   010F62                     __end_of_TMR0_Start:
  4281                           	callstack 0
  4282                           
  4283 ;; *************** function _TMR4_Start *****************
  4284 ;; Defined at:
  4285 ;;		line 94 in file "mcc_generated_files/timer/src/tmr4.c"
  4286 ;; Parameters:    Size  Location     Type
  4287 ;;		None
  4288 ;; Auto vars:     Size  Location     Type
  4289 ;;		None
  4290 ;; Return value:  Size  Location     Type
  4291 ;;                  1    wreg      void 
  4292 ;; Registers used:
  4293 ;;		None
  4294 ;; Tracked objects:
  4295 ;;		On entry : 0/0
  4296 ;;		On exit  : 0/0
  4297 ;;		Unchanged: 0/0
  4298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4303 ;;Total ram usage:        0 bytes
  4304 ;; Hardware stack levels used: 1
  4305 ;; Hardware stack levels required when called: 3
  4306 ;; This function calls:
  4307 ;;		Nothing
  4308 ;; This function is called by:
  4309 ;;		_ApplicationTask
  4310 ;; This function uses a non-reentrant model
  4311 ;;
  4312                           
  4313                           	psect	text31
  4314   010F62                     __ptext31:
  4315                           	callstack 0
  4316   010F62                     _TMR4_Start:
  4317                           	callstack 26
  4318   010F62                     
  4319                           ;mcc_generated_files/timer/src/tmr4.c: 97:     T4CONbits.TMR4ON = 1;
  4320   010F62  8EB6               	bsf	182,7,c	;volatile
  4321   010F64  0012               	return		;funcret
  4322   010F66                     __end_of_TMR4_Start:
  4323                           	callstack 0
  4324                           
  4325 ;; *************** function _TMR0_Reload *****************
  4326 ;; Defined at:
  4327 ;;		line 101 in file "mcc_generated_files/timer/src/tmr0.c"
  4328 ;; Parameters:    Size  Location     Type
  4329 ;;  periodVal       2    2[COMRAM] unsigned int 
  4330 ;; Auto vars:     Size  Location     Type
  4331 ;;		None
  4332 ;; Return value:  Size  Location     Type
  4333 ;;                  1    wreg      void 
  4334 ;; Registers used:
  4335 ;;		None
  4336 ;; Tracked objects:
  4337 ;;		On entry : 0/0
  4338 ;;		On exit  : 0/0
  4339 ;;		Unchanged: 0/0
  4340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4341 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4344 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4345 ;;Total ram usage:        2 bytes
  4346 ;; Hardware stack levels used: 1
  4347 ;; Hardware stack levels required when called: 3
  4348 ;; This function calls:
  4349 ;;		Nothing
  4350 ;; This function is called by:
  4351 ;;		_ApplicationTask
  4352 ;; This function uses a non-reentrant model
  4353 ;;
  4354                           
  4355                           	psect	text32
  4356   010F44                     __ptext32:
  4357                           	callstack 0
  4358   010F44                     _TMR0_Reload:
  4359                           	callstack 26
  4360   010F44                     
  4361                           ;mcc_generated_files/timer/src/tmr0.c: 101: void TMR0_Reload(size_t periodVal);mcc_gener
      +                          ated_files/timer/src/tmr0.c: 102: {;mcc_generated_files/timer/src/tmr0.c: 104:    TMR0H 
      +                          = (uint8_t)periodVal;
  4362   010F44  C003  FFD3         	movff	TMR0_Reload@periodVal,4051	;volatile
  4363   010F48  0012               	return		;funcret
  4364   010F4A                     __end_of_TMR0_Reload:
  4365                           	callstack 0
  4366                           
  4367 ;; *************** function _TMR4_PeriodCountSet *****************
  4368 ;; Defined at:
  4369 ;;		line 119 in file "mcc_generated_files/timer/src/tmr4.c"
  4370 ;; Parameters:    Size  Location     Type
  4371 ;;  periodVal       2    2[COMRAM] unsigned int 
  4372 ;; Auto vars:     Size  Location     Type
  4373 ;;		None
  4374 ;; Return value:  Size  Location     Type
  4375 ;;                  1    wreg      void 
  4376 ;; Registers used:
  4377 ;;		None
  4378 ;; Tracked objects:
  4379 ;;		On entry : 0/0
  4380 ;;		On exit  : 0/0
  4381 ;;		Unchanged: 0/0
  4382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4383 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4386 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4387 ;;Total ram usage:        2 bytes
  4388 ;; Hardware stack levels used: 1
  4389 ;; Hardware stack levels required when called: 3
  4390 ;; This function calls:
  4391 ;;		Nothing
  4392 ;; This function is called by:
  4393 ;;		_ApplicationTask
  4394 ;; This function uses a non-reentrant model
  4395 ;;
  4396                           
  4397                           	psect	text33
  4398   010F4A                     __ptext33:
  4399                           	callstack 0
  4400   010F4A                     _TMR4_PeriodCountSet:
  4401                           	callstack 26
  4402   010F4A                     
  4403                           ;mcc_generated_files/timer/src/tmr4.c: 119: void TMR4_PeriodCountSet(size_t periodVal);m
      +                          cc_generated_files/timer/src/tmr4.c: 120: {;mcc_generated_files/timer/src/tmr4.c: 121:  
      +                            PR4 = (uint8_t) periodVal;
  4404   010F4A  C003  FFB5         	movff	TMR4_PeriodCountSet@periodVal,4021	;volatile
  4405   010F4E  0012               	return		;funcret
  4406   010F50                     __end_of_TMR4_PeriodCountSet:
  4407                           	callstack 0
  4408                           
  4409 ;; *************** function _ADCC_SetChannel *****************
  4410 ;; Defined at:
  4411 ;;		line 253 in file "application.c"
  4412 ;; Parameters:    Size  Location     Type
  4413 ;;  channel         1    wreg     enum E12909
  4414 ;; Auto vars:     Size  Location     Type
  4415 ;;  channel         1    2[COMRAM] enum E12909
  4416 ;; Return value:  Size  Location     Type
  4417 ;;                  1    wreg      void 
  4418 ;; Registers used:
  4419 ;;		wreg
  4420 ;; Tracked objects:
  4421 ;;		On entry : 0/0
  4422 ;;		On exit  : 0/0
  4423 ;;		Unchanged: 0/0
  4424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4426 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4428 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4429 ;;Total ram usage:        1 bytes
  4430 ;; Hardware stack levels used: 1
  4431 ;; Hardware stack levels required when called: 3
  4432 ;; This function calls:
  4433 ;;		Nothing
  4434 ;; This function is called by:
  4435 ;;		_ApplicationTask
  4436 ;; This function uses a non-reentrant model
  4437 ;;
  4438                           
  4439                           	psect	text34
  4440   010F3C                     __ptext34:
  4441                           	callstack 0
  4442   010F3C                     _ADCC_SetChannel:
  4443                           	callstack 26
  4444                           
  4445                           ;incstack = 0
  4446                           ;ADCC_SetChannel@channel stored from wreg
  4447   010F3C  6E03               	movwf	ADCC_SetChannel@channel^0,c
  4448   010F3E                     
  4449                           ;application.c: 253: void ADCC_SetChannel(adcc_channel_t channel);application.c: 254: {;
      +                          application.c: 256:     ADPCH = channel;
  4450   010F3E  C003  FF5A         	movff	ADCC_SetChannel@channel,3930	;volatile
  4451   010F42  0012               	return		;funcret
  4452   010F44                     __end_of_ADCC_SetChannel:
  4453                           	callstack 0
  4454                           
  4455 ;; *************** function _ADCC_Initialize_LowPassFilterMode *****************
  4456 ;; Defined at:
  4457 ;;		line 237 in file "application.c"
  4458 ;; Parameters:    Size  Location     Type
  4459 ;;		None
  4460 ;; Auto vars:     Size  Location     Type
  4461 ;;		None
  4462 ;; Return value:  Size  Location     Type
  4463 ;;                  1    wreg      void 
  4464 ;; Registers used:
  4465 ;;		wreg, status,2
  4466 ;; Tracked objects:
  4467 ;;		On entry : 0/0
  4468 ;;		On exit  : 0/0
  4469 ;;		Unchanged: 0/0
  4470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4475 ;;Total ram usage:        0 bytes
  4476 ;; Hardware stack levels used: 1
  4477 ;; Hardware stack levels required when called: 3
  4478 ;; This function calls:
  4479 ;;		Nothing
  4480 ;; This function is called by:
  4481 ;;		_ApplicationTask
  4482 ;; This function uses a non-reentrant model
  4483 ;;
  4484                           
  4485                           	psect	text35
  4486   010E5A                     __ptext35:
  4487                           	callstack 0
  4488   010E5A                     _ADCC_Initialize_LowPassFilterMode:
  4489                           	callstack 26
  4490   010E5A                     
  4491                           ;application.c: 240:     ADRPT = 0x10;
  4492   010E5A  0E10               	movlw	16
  4493   010E5C  6E61               	movwf	97,c	;volatile
  4494                           
  4495                           ;application.c: 242:     ADCON2 = 0x34;
  4496   010E5E  0E34               	movlw	52
  4497   010E60  010F               	movlb	15	; () banked
  4498   010E62  6F55               	movwf	85,b	;volatile
  4499                           
  4500                           ;application.c: 244:     ADCON3 = 0x57;
  4501   010E64  0E57               	movlw	87
  4502   010E66  6F56               	movwf	86,b	;volatile
  4503                           
  4504                           ;application.c: 246:     ADACT = 0x02;
  4505   010E68  0E02               	movlw	2
  4506   010E6A  6F51               	movwf	81,b	;volatile
  4507                           
  4508                           ;application.c: 248:     ADCLK = 0x1F;
  4509   010E6C  0E1F               	movlw	31
  4510   010E6E  6F52               	movwf	82,b	;volatile
  4511                           
  4512                           ;application.c: 250:     ADCON0 = 0x84;
  4513   010E70  0E84               	movlw	132
  4514   010E72  6F5B               	movwf	91,b	;volatile
  4515   010E74                     
  4516                           ; BSR set to: 15
  4517   010E74  0012               	return		;funcret
  4518   010E76                     __end_of_ADCC_Initialize_LowPassFilterMode:
  4519                           	callstack 0
  4520                           
  4521 ;; *************** function _ADCC_Initialize_BurstAverageMode *****************
  4522 ;; Defined at:
  4523 ;;		line 209 in file "application.c"
  4524 ;; Parameters:    Size  Location     Type
  4525 ;;		None
  4526 ;; Auto vars:     Size  Location     Type
  4527 ;;		None
  4528 ;; Return value:  Size  Location     Type
  4529 ;;                  1    wreg      void 
  4530 ;; Registers used:
  4531 ;;		wreg, status,2
  4532 ;; Tracked objects:
  4533 ;;		On entry : 0/0
  4534 ;;		On exit  : 0/0
  4535 ;;		Unchanged: 0/0
  4536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4541 ;;Total ram usage:        0 bytes
  4542 ;; Hardware stack levels used: 1
  4543 ;; Hardware stack levels required when called: 3
  4544 ;; This function calls:
  4545 ;;		Nothing
  4546 ;; This function is called by:
  4547 ;;		_ApplicationTask
  4548 ;; This function uses a non-reentrant model
  4549 ;;
  4550                           
  4551                           	psect	text36
  4552   010CEA                     __ptext36:
  4553                           	callstack 0
  4554   010CEA                     _ADCC_Initialize_BurstAverageMode:
  4555                           	callstack 26
  4556   010CEA                     
  4557                           ;application.c: 212:     ADLTHL = 0x38;
  4558   010CEA  0E38               	movlw	56
  4559   010CEC  6E65               	movwf	101,c	;volatile
  4560   010CEE                     
  4561                           ;application.c: 214:     ADLTHH = 0xFF;
  4562   010CEE  6866               	setf	102,c	;volatile
  4563                           
  4564                           ;application.c: 216:     ADUTHL = 0xC8;
  4565   010CF0  0EC8               	movlw	200
  4566   010CF2  6E67               	movwf	103,c	;volatile
  4567                           
  4568                           ;application.c: 218:     ADUTHH = 0x00;
  4569   010CF4  0E00               	movlw	0
  4570   010CF6  6E68               	movwf	104,c	;volatile
  4571   010CF8                     
  4572                           ;application.c: 220:     ADSTPTL = 0xFF;
  4573   010CF8  6863               	setf	99,c	;volatile
  4574                           
  4575                           ;application.c: 222:     ADSTPTH = 0x01;
  4576   010CFA  0E01               	movlw	1
  4577   010CFC  6E64               	movwf	100,c	;volatile
  4578                           
  4579                           ;application.c: 224:     ADRPT = 0x10;
  4580   010CFE  0E10               	movlw	16
  4581   010D00  6E61               	movwf	97,c	;volatile
  4582                           
  4583                           ;application.c: 226:     ADCON2 = 0x43;
  4584   010D02  0E43               	movlw	67
  4585   010D04  010F               	movlb	15	; () banked
  4586   010D06  6F55               	movwf	85,b	;volatile
  4587                           
  4588                           ;application.c: 228:     ADCON3 = 0x13;
  4589   010D08  0E13               	movlw	19
  4590   010D0A  6F56               	movwf	86,b	;volatile
  4591                           
  4592                           ;application.c: 230:     ADACT = 0x02;
  4593   010D0C  0E02               	movlw	2
  4594   010D0E  6F51               	movwf	81,b	;volatile
  4595                           
  4596                           ;application.c: 232:     ADCLK = 0x1F;
  4597   010D10  0E1F               	movlw	31
  4598   010D12  6F52               	movwf	82,b	;volatile
  4599                           
  4600                           ;application.c: 234:     ADCON0 = 0x84;
  4601   010D14  0E84               	movlw	132
  4602   010D16  6F5B               	movwf	91,b	;volatile
  4603   010D18                     
  4604                           ; BSR set to: 15
  4605   010D18  0012               	return		;funcret
  4606   010D1A                     __end_of_ADCC_Initialize_BurstAverageMode:
  4607                           	callstack 0
  4608                           
  4609 ;; *************** function _ADCC_Initialize_BasicMode *****************
  4610 ;; Defined at:
  4611 ;;		line 167 in file "application.c"
  4612 ;; Parameters:    Size  Location     Type
  4613 ;;		None
  4614 ;; Auto vars:     Size  Location     Type
  4615 ;;		None
  4616 ;; Return value:  Size  Location     Type
  4617 ;;                  1    wreg      void 
  4618 ;; Registers used:
  4619 ;;		wreg, status,2
  4620 ;; Tracked objects:
  4621 ;;		On entry : 0/0
  4622 ;;		On exit  : 0/0
  4623 ;;		Unchanged: 0/0
  4624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4629 ;;Total ram usage:        0 bytes
  4630 ;; Hardware stack levels used: 1
  4631 ;; Hardware stack levels required when called: 3
  4632 ;; This function calls:
  4633 ;;		Nothing
  4634 ;; This function is called by:
  4635 ;;		_ApplicationTask
  4636 ;; This function uses a non-reentrant model
  4637 ;;
  4638                           
  4639                           	psect	text37
  4640   010E8E                     __ptext37:
  4641                           	callstack 0
  4642   010E8E                     _ADCC_Initialize_BasicMode:
  4643                           	callstack 26
  4644   010E8E                     
  4645                           ;application.c: 170:     ADCON2 = 0x00;
  4646   010E8E  0E00               	movlw	0
  4647   010E90  010F               	movlb	15	; () banked
  4648   010E92  6F55               	movwf	85,b	;volatile
  4649                           
  4650                           ;application.c: 172:     ADCON3 = 0x07;
  4651   010E94  0E07               	movlw	7
  4652   010E96  6F56               	movwf	86,b	;volatile
  4653                           
  4654                           ;application.c: 174:     ADACT = 0x02;
  4655   010E98  0E02               	movlw	2
  4656   010E9A  6F51               	movwf	81,b	;volatile
  4657                           
  4658                           ;application.c: 176:     ADCLK = 0x1F;
  4659   010E9C  0E1F               	movlw	31
  4660   010E9E  6F52               	movwf	82,b	;volatile
  4661                           
  4662                           ;application.c: 178:     ADCON0 = 0x84;
  4663   010EA0  0E84               	movlw	132
  4664   010EA2  6F5B               	movwf	91,b	;volatile
  4665   010EA4                     
  4666                           ; BSR set to: 15
  4667   010EA4  0012               	return		;funcret
  4668   010EA6                     __end_of_ADCC_Initialize_BasicMode:
  4669                           	callstack 0
  4670                           
  4671 ;; *************** function _ADCC_Initialize_AverageMode *****************
  4672 ;; Defined at:
  4673 ;;		line 181 in file "application.c"
  4674 ;; Parameters:    Size  Location     Type
  4675 ;;		None
  4676 ;; Auto vars:     Size  Location     Type
  4677 ;;		None
  4678 ;; Return value:  Size  Location     Type
  4679 ;;                  1    wreg      void 
  4680 ;; Registers used:
  4681 ;;		wreg, status,2
  4682 ;; Tracked objects:
  4683 ;;		On entry : 0/0
  4684 ;;		On exit  : 0/0
  4685 ;;		Unchanged: 0/0
  4686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4691 ;;Total ram usage:        0 bytes
  4692 ;; Hardware stack levels used: 1
  4693 ;; Hardware stack levels required when called: 3
  4694 ;; This function calls:
  4695 ;;		Nothing
  4696 ;; This function is called by:
  4697 ;;		_ApplicationTask
  4698 ;; This function uses a non-reentrant model
  4699 ;;
  4700                           
  4701                           	psect	text38
  4702   010D1A                     __ptext38:
  4703                           	callstack 0
  4704   010D1A                     _ADCC_Initialize_AverageMode:
  4705                           	callstack 26
  4706   010D1A                     
  4707                           ;application.c: 184:     ADLTHL = 0x38;
  4708   010D1A  0E38               	movlw	56
  4709   010D1C  6E65               	movwf	101,c	;volatile
  4710   010D1E                     
  4711                           ;application.c: 186:     ADLTHH = 0xFF;
  4712   010D1E  6866               	setf	102,c	;volatile
  4713                           
  4714                           ;application.c: 188:     ADUTHL = 0xC8;
  4715   010D20  0EC8               	movlw	200
  4716   010D22  6E67               	movwf	103,c	;volatile
  4717                           
  4718                           ;application.c: 190:     ADUTHH = 0x00;
  4719   010D24  0E00               	movlw	0
  4720   010D26  6E68               	movwf	104,c	;volatile
  4721   010D28                     
  4722                           ;application.c: 192:     ADSTPTL = 0xFF;
  4723   010D28  6863               	setf	99,c	;volatile
  4724                           
  4725                           ;application.c: 194:     ADSTPTH = 0x01;
  4726   010D2A  0E01               	movlw	1
  4727   010D2C  6E64               	movwf	100,c	;volatile
  4728                           
  4729                           ;application.c: 196:     ADRPT = 0x10;
  4730   010D2E  0E10               	movlw	16
  4731   010D30  6E61               	movwf	97,c	;volatile
  4732                           
  4733                           ;application.c: 198:     ADCON2 = 0x42;
  4734   010D32  0E42               	movlw	66
  4735   010D34  010F               	movlb	15	; () banked
  4736   010D36  6F55               	movwf	85,b	;volatile
  4737                           
  4738                           ;application.c: 200:     ADCON3 = 0x13;
  4739   010D38  0E13               	movlw	19
  4740   010D3A  6F56               	movwf	86,b	;volatile
  4741                           
  4742                           ;application.c: 202:     ADACT = 0x02;
  4743   010D3C  0E02               	movlw	2
  4744   010D3E  6F51               	movwf	81,b	;volatile
  4745                           
  4746                           ;application.c: 204:     ADCLK = 0x1F;
  4747   010D40  0E1F               	movlw	31
  4748   010D42  6F52               	movwf	82,b	;volatile
  4749                           
  4750                           ;application.c: 206:     ADCON0 = 0x84;
  4751   010D44  0E84               	movlw	132
  4752   010D46  6F5B               	movwf	91,b	;volatile
  4753   010D48                     
  4754                           ; BSR set to: 15
  4755   010D48  0012               	return		;funcret
  4756   010D4A                     __end_of_ADCC_Initialize_AverageMode:
  4757                           	callstack 0
  4758                           
  4759 ;; *************** function _ADCC_HasErrorCrossedUpperThreshold *****************
  4760 ;; Defined at:
  4761 ;;		line 266 in file "mcc_generated_files/adc/src/adcc.c"
  4762 ;; Parameters:    Size  Location     Type
  4763 ;;		None
  4764 ;; Auto vars:     Size  Location     Type
  4765 ;;		None
  4766 ;; Return value:  Size  Location     Type
  4767 ;;                  1    wreg      _Bool 
  4768 ;; Registers used:
  4769 ;;		wreg
  4770 ;; Tracked objects:
  4771 ;;		On entry : 0/0
  4772 ;;		On exit  : 0/0
  4773 ;;		Unchanged: 0/0
  4774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4779 ;;Total ram usage:        0 bytes
  4780 ;; Hardware stack levels used: 1
  4781 ;; Hardware stack levels required when called: 3
  4782 ;; This function calls:
  4783 ;;		Nothing
  4784 ;; This function is called by:
  4785 ;;		_ApplicationTask
  4786 ;; This function uses a non-reentrant model
  4787 ;;
  4788                           
  4789                           	psect	text39
  4790   010EA6                     __ptext39:
  4791                           	callstack 0
  4792   010EA6                     _ADCC_HasErrorCrossedUpperThreshold:
  4793                           	callstack 26
  4794   010EA6                     
  4795                           ;mcc_generated_files/adc/src/adcc.c: 269:     return ADSTATbits.ADUTHR;
  4796   010EA6  BC60               	btfsc	96,6,c	;volatile
  4797   010EA8  EF58  F087         	goto	u341
  4798   010EAC  EF5B  F087         	goto	u340
  4799   010EB0                     u341:
  4800   010EB0  0E01               	movlw	1
  4801   010EB2  EF5C  F087         	goto	u346
  4802   010EB6                     u340:
  4803   010EB6  0E00               	movlw	0
  4804   010EB8                     u346:
  4805   010EB8  0012               	return		;funcret
  4806   010EBA                     __end_of_ADCC_HasErrorCrossedUpperThreshold:
  4807                           	callstack 0
  4808                           
  4809 ;; *************** function _ADCC_HasErrorCrossedLowerThreshold *****************
  4810 ;; Defined at:
  4811 ;;		line 272 in file "mcc_generated_files/adc/src/adcc.c"
  4812 ;; Parameters:    Size  Location     Type
  4813 ;;		None
  4814 ;; Auto vars:     Size  Location     Type
  4815 ;;		None
  4816 ;; Return value:  Size  Location     Type
  4817 ;;                  1    wreg      _Bool 
  4818 ;; Registers used:
  4819 ;;		wreg
  4820 ;; Tracked objects:
  4821 ;;		On entry : 0/0
  4822 ;;		On exit  : 0/0
  4823 ;;		Unchanged: 0/0
  4824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4829 ;;Total ram usage:        0 bytes
  4830 ;; Hardware stack levels used: 1
  4831 ;; Hardware stack levels required when called: 3
  4832 ;; This function calls:
  4833 ;;		Nothing
  4834 ;; This function is called by:
  4835 ;;		_ApplicationTask
  4836 ;; This function uses a non-reentrant model
  4837 ;;
  4838                           
  4839                           	psect	text40
  4840   010EBA                     __ptext40:
  4841                           	callstack 0
  4842   010EBA                     _ADCC_HasErrorCrossedLowerThreshold:
  4843                           	callstack 26
  4844   010EBA                     
  4845                           ;mcc_generated_files/adc/src/adcc.c: 275:     return ADSTATbits.ADLTHR;
  4846   010EBA  BA60               	btfsc	96,5,c	;volatile
  4847   010EBC  EF62  F087         	goto	u351
  4848   010EC0  EF65  F087         	goto	u350
  4849   010EC4                     u351:
  4850   010EC4  0E01               	movlw	1
  4851   010EC6  EF66  F087         	goto	u356
  4852   010ECA                     u350:
  4853   010ECA  0E00               	movlw	0
  4854   010ECC                     u356:
  4855   010ECC  0012               	return		;funcret
  4856   010ECE                     __end_of_ADCC_HasErrorCrossedLowerThreshold:
  4857                           	callstack 0
  4858                           
  4859 ;; *************** function _INTERRUPT_InterruptManager *****************
  4860 ;; Defined at:
  4861 ;;		line 80 in file "mcc_generated_files/system/src/interrupt.c"
  4862 ;; Parameters:    Size  Location     Type
  4863 ;;		None
  4864 ;; Auto vars:     Size  Location     Type
  4865 ;;		None
  4866 ;; Return value:  Size  Location     Type
  4867 ;;                  1    wreg      void 
  4868 ;; Registers used:
  4869 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  4870 ;; Tracked objects:
  4871 ;;		On entry : 0/0
  4872 ;;		On exit  : 0/0
  4873 ;;		Unchanged: 0/0
  4874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4877 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4878 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4879 ;;Total ram usage:        2 bytes
  4880 ;; Hardware stack levels used: 1
  4881 ;; Hardware stack levels required when called: 2
  4882 ;; This function calls:
  4883 ;;		_ADCC_ThresholdISR
  4884 ;;		_PIN_MANAGER_IOC
  4885 ;;		_TMR4_ISR
  4886 ;; This function is called by:
  4887 ;;		Interrupt level 2
  4888 ;; This function uses a non-reentrant model
  4889 ;;
  4890                           
  4891                           	psect	intcode
  4892   000008                     __pintcode:
  4893                           	callstack 0
  4894   000008                     _INTERRUPT_InterruptManager:
  4895                           	callstack 21
  4896                           
  4897                           ;incstack = 0
  4898   000008  8251               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4899   00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  4900   00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  4901   000012                     
  4902                           ;mcc_generated_files/system/src/interrupt.c: 83:     if(PIE0bits.IOCIE == 1 && PIR0bits.
      +                          IOCIF == 1)
  4903   000012  010E               	movlb	14	; () banked
  4904   000014  A9BD               	btfss	189,4,b	;volatile
  4905   000016  EF0F  F000         	goto	i2u83_41
  4906   00001A  EF11  F000         	goto	i2u83_40
  4907   00001E                     i2u83_41:
  4908   00001E  EF1C  F000         	goto	i2l345
  4909   000022                     i2u83_40:
  4910   000022                     
  4911                           ; BSR set to: 14
  4912   000022  A9C5               	btfss	197,4,b	;volatile
  4913   000024  EF16  F000         	goto	i2u84_41
  4914   000028  EF18  F000         	goto	i2u84_40
  4915   00002C                     i2u84_41:
  4916   00002C  EF1C  F000         	goto	i2l345
  4917   000030                     i2u84_40:
  4918   000030                     
  4919                           ; BSR set to: 14
  4920                           ;mcc_generated_files/system/src/interrupt.c: 84:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 85:         PIN_MANAGER_IOC();
  4921   000030  ECB5  F087         	call	_PIN_MANAGER_IOC	;wreg free
  4922                           
  4923                           ;mcc_generated_files/system/src/interrupt.c: 86:     }
  4924   000034  EF47  F000         	goto	i2l353
  4925   000038                     i2l345:
  4926                           
  4927                           ; BSR set to: 14
  4928   000038  ACF2               	btfss	242,6,c	;volatile
  4929   00003A  EF21  F000         	goto	i2u85_41
  4930   00003E  EF23  F000         	goto	i2u85_40
  4931   000042                     i2u85_41:
  4932   000042  EF47  F000         	goto	i2l353
  4933   000046                     i2u85_40:
  4934   000046                     
  4935                           ; BSR set to: 14
  4936                           ;mcc_generated_files/system/src/interrupt.c: 88:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 89:         if(PIE4bits.TMR4IE == 1 && PIR4bits.TMR4IF == 1)
  4937   000046  A7C1               	btfss	193,3,b	;volatile
  4938   000048  EF28  F000         	goto	i2u86_41
  4939   00004C  EF2A  F000         	goto	i2u86_40
  4940   000050                     i2u86_41:
  4941   000050  EF35  F000         	goto	i2l348
  4942   000054                     i2u86_40:
  4943   000054                     
  4944                           ; BSR set to: 14
  4945   000054  A7C9               	btfss	201,3,b	;volatile
  4946   000056  EF2F  F000         	goto	i2u87_41
  4947   00005A  EF31  F000         	goto	i2u87_40
  4948   00005E                     i2u87_41:
  4949   00005E  EF35  F000         	goto	i2l348
  4950   000062                     i2u87_40:
  4951   000062                     
  4952                           ; BSR set to: 14
  4953                           ;mcc_generated_files/system/src/interrupt.c: 90:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 91:             TMR4_ISR();
  4954   000062  EC29  F086         	call	_TMR4_ISR	;wreg free
  4955                           
  4956                           ;mcc_generated_files/system/src/interrupt.c: 92:         }
  4957   000066  EF47  F000         	goto	i2l353
  4958   00006A                     i2l348:
  4959                           
  4960                           ; BSR set to: 14
  4961   00006A  A3BE               	btfss	190,1,b	;volatile
  4962   00006C  EF3A  F000         	goto	i2u88_41
  4963   000070  EF3C  F000         	goto	i2u88_40
  4964   000074                     i2u88_41:
  4965   000074  EF47  F000         	goto	i2l352
  4966   000078                     i2u88_40:
  4967   000078                     
  4968                           ; BSR set to: 14
  4969   000078  A3C6               	btfss	198,1,b	;volatile
  4970   00007A  EF41  F000         	goto	i2u89_41
  4971   00007E  EF43  F000         	goto	i2u89_40
  4972   000082                     i2u89_41:
  4973   000082  EF47  F000         	goto	i2l352
  4974   000086                     i2u89_40:
  4975   000086                     
  4976                           ; BSR set to: 14
  4977                           ;mcc_generated_files/system/src/interrupt.c: 94:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 95:             ADCC_ThresholdISR();
  4978   000086  EC43  F086         	call	_ADCC_ThresholdISR	;wreg free
  4979                           
  4980                           ;mcc_generated_files/system/src/interrupt.c: 96:         }
  4981   00008A  EF47  F000         	goto	i2l353
  4982   00008E                     i2l352:
  4983   00008E                     i2l353:
  4984   00008E  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  4985   000092  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  4986   000096  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4987   000098  0011               	retfie		f
  4988   00009A                     __end_of_INTERRUPT_InterruptManager:
  4989                           	callstack 0
  4990                           
  4991 ;; *************** function _TMR4_ISR *****************
  4992 ;; Defined at:
  4993 ;;		line 124 in file "mcc_generated_files/timer/src/tmr4.c"
  4994 ;; Parameters:    Size  Location     Type
  4995 ;;		None
  4996 ;; Auto vars:     Size  Location     Type
  4997 ;;		None
  4998 ;; Return value:  Size  Location     Type
  4999 ;;                  1    wreg      void 
  5000 ;; Registers used:
  5001 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5002 ;; Tracked objects:
  5003 ;;		On entry : 0/0
  5004 ;;		On exit  : 0/0
  5005 ;;		Unchanged: 0/0
  5006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5011 ;;Total ram usage:        0 bytes
  5012 ;; Hardware stack levels used: 1
  5013 ;; Hardware stack levels required when called: 1
  5014 ;; This function calls:
  5015 ;;		NULL
  5016 ;;		_TMR0_DefaultOverflowCallback
  5017 ;;		_TMR4UserInterrupt
  5018 ;;		_TMR4_DefaultOverflowCallback
  5019 ;; This function is called by:
  5020 ;;		_INTERRUPT_InterruptManager
  5021 ;; This function uses a non-reentrant model
  5022 ;;
  5023                           
  5024                           	psect	text42
  5025   010C52                     __ptext42:
  5026                           	callstack 0
  5027   010C52                     _TMR4_ISR:
  5028                           	callstack 21
  5029   010C52                     
  5030                           ;mcc_generated_files/timer/src/tmr4.c: 127:      PIR4bits.TMR4IF = 0;
  5031   010C52  010E               	movlb	14	; () banked
  5032   010C54  97C9               	bcf	201,3,b	;volatile
  5033   010C56                     
  5034                           ; BSR set to: 14
  5035                           ;mcc_generated_files/timer/src/tmr4.c: 129:     if(TMR4_OverflowCallback)
  5036   010C56  5035               	movf	_TMR4_OverflowCallback^0,w,c
  5037   010C58  1036               	iorwf	(_TMR4_OverflowCallback+1)^0,w,c
  5038   010C5A  1037               	iorwf	(_TMR4_OverflowCallback+2)^0,w,c
  5039   010C5C  B4D8               	btfsc	status,2,c
  5040   010C5E  EF33  F086         	goto	i2u39_41
  5041   010C62  EF35  F086         	goto	i2u39_40
  5042   010C66                     i2u39_41:
  5043   010C66  EF42  F086         	goto	i2l479
  5044   010C6A                     i2u39_40:
  5045   010C6A                     
  5046                           ; BSR set to: 14
  5047                           ;mcc_generated_files/timer/src/tmr4.c: 130:     {;mcc_generated_files/timer/src/tmr4.c: 
      +                          131:         TMR4_OverflowCallback();
  5048   010C6A  D802               	call	i2u40_48
  5049   010C6C  EF42  F086         	goto	i2u40_49
  5050   010C70                     i2u40_48:
  5051   010C70  0005               	push	
  5052   010C72  6EFA               	movwf	pclath,c
  5053   010C74  5035               	movf	_TMR4_OverflowCallback^0,w,c
  5054   010C76  6EFD               	movwf	tosl,c
  5055   010C78  5036               	movf	(_TMR4_OverflowCallback+1)^0,w,c
  5056   010C7A  6EFE               	movwf	tosh,c
  5057   010C7C  5037               	movf	(_TMR4_OverflowCallback+2)^0,w,c
  5058   010C7E  6EFF               	movwf	tosu,c
  5059   010C80  50FA               	movf	pclath,w,c
  5060   010C82  0012               	return		;indir
  5061   010C84                     i2u40_49:
  5062   010C84                     i2l479:
  5063   010C84  0012               	return		;funcret
  5064   010C86                     __end_of_TMR4_ISR:
  5065                           	callstack 0
  5066                           
  5067 ;; *************** function _TMR4UserInterrupt *****************
  5068 ;; Defined at:
  5069 ;;		line 263 in file "application.c"
  5070 ;; Parameters:    Size  Location     Type
  5071 ;;		None
  5072 ;; Auto vars:     Size  Location     Type
  5073 ;;		None
  5074 ;; Return value:  Size  Location     Type
  5075 ;;                  1    wreg      void 
  5076 ;; Registers used:
  5077 ;;		status,2, status,0
  5078 ;; Tracked objects:
  5079 ;;		On entry : 0/0
  5080 ;;		On exit  : 0/0
  5081 ;;		Unchanged: 0/0
  5082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5087 ;;Total ram usage:        0 bytes
  5088 ;; Hardware stack levels used: 1
  5089 ;; This function calls:
  5090 ;;		Nothing
  5091 ;; This function is called by:
  5092 ;;		_main
  5093 ;;		_TMR4_ISR
  5094 ;;		_TMR0_Tasks
  5095 ;; This function uses a non-reentrant model
  5096 ;;
  5097                           
  5098                           	psect	text43
  5099   010ECE                     __ptext43:
  5100                           	callstack 0
  5101   010ECE                     _TMR4UserInterrupt:
  5102                           	callstack 21
  5103   010ECE                     
  5104                           ;application.c: 265:     if (PORTCbits.RC5)
  5105   010ECE  AA8E               	btfss	142,5,c	;volatile
  5106   010ED0  EF6C  F087         	goto	i2u36_41
  5107   010ED4  EF6E  F087         	goto	i2u36_40
  5108   010ED8                     i2u36_41:
  5109   010ED8  EF6F  F087         	goto	i2l883
  5110   010EDC                     i2u36_40:
  5111   010EDC                     
  5112                           ;application.c: 266:     {;application.c: 267:         count++;
  5113   010EDC  2A4D               	incf	_count^0,f,c	;volatile
  5114   010EDE                     i2l883:
  5115   010EDE  0012               	return		;funcret
  5116   010EE0                     __end_of_TMR4UserInterrupt:
  5117                           	callstack 0
  5118                           
  5119 ;; *************** function _TMR0_DefaultOverflowCallback *****************
  5120 ;; Defined at:
  5121 ;;		line 113 in file "mcc_generated_files/timer/src/tmr0.c"
  5122 ;; Parameters:    Size  Location     Type
  5123 ;;		None
  5124 ;; Auto vars:     Size  Location     Type
  5125 ;;		None
  5126 ;; Return value:  Size  Location     Type
  5127 ;;                  1    wreg      void 
  5128 ;; Registers used:
  5129 ;;		None
  5130 ;; Tracked objects:
  5131 ;;		On entry : 0/0
  5132 ;;		On exit  : 0/0
  5133 ;;		Unchanged: 0/0
  5134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5139 ;;Total ram usage:        0 bytes
  5140 ;; Hardware stack levels used: 1
  5141 ;; This function calls:
  5142 ;;		Nothing
  5143 ;; This function is called by:
  5144 ;;		_TMR0_Initialize
  5145 ;;		_TMR4_ISR
  5146 ;;		_TMR0_Tasks
  5147 ;; This function uses a non-reentrant model
  5148 ;;
  5149                           
  5150                           	psect	text44
  5151   010F66                     __ptext44:
  5152                           	callstack 0
  5153   010F66                     _TMR0_DefaultOverflowCallback:
  5154                           	callstack 21
  5155   010F66  0012               	return		;funcret
  5156   010F68                     __end_of_TMR0_DefaultOverflowCallback:
  5157                           	callstack 0
  5158                           
  5159 ;; *************** function _TMR4_DefaultOverflowCallback *****************
  5160 ;; Defined at:
  5161 ;;		line 140 in file "mcc_generated_files/timer/src/tmr4.c"
  5162 ;; Parameters:    Size  Location     Type
  5163 ;;		None
  5164 ;; Auto vars:     Size  Location     Type
  5165 ;;		None
  5166 ;; Return value:  Size  Location     Type
  5167 ;;                  1    wreg      void 
  5168 ;; Registers used:
  5169 ;;		None
  5170 ;; Tracked objects:
  5171 ;;		On entry : 0/0
  5172 ;;		On exit  : 0/0
  5173 ;;		Unchanged: 0/0
  5174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5179 ;;Total ram usage:        0 bytes
  5180 ;; Hardware stack levels used: 1
  5181 ;; This function calls:
  5182 ;;		Nothing
  5183 ;; This function is called by:
  5184 ;;		_TMR4_Initialize
  5185 ;;		_TMR4_ISR
  5186 ;;		_TMR0_Tasks
  5187 ;; This function uses a non-reentrant model
  5188 ;;
  5189                           
  5190                           	psect	text45
  5191   010F68                     __ptext45:
  5192                           	callstack 0
  5193   010F68                     _TMR4_DefaultOverflowCallback:
  5194                           	callstack 21
  5195   010F68  0012               	return		;funcret
  5196   010F6A                     __end_of_TMR4_DefaultOverflowCallback:
  5197                           	callstack 0
  5198                           
  5199 ;; *************** function _PIN_MANAGER_IOC *****************
  5200 ;; Defined at:
  5201 ;;		line 132 in file "mcc_generated_files/system/src/pins.c"
  5202 ;; Parameters:    Size  Location     Type
  5203 ;;		None
  5204 ;; Auto vars:     Size  Location     Type
  5205 ;;		None
  5206 ;; Return value:  Size  Location     Type
  5207 ;;                  1    wreg      void 
  5208 ;; Registers used:
  5209 ;;		None
  5210 ;; Tracked objects:
  5211 ;;		On entry : 0/0
  5212 ;;		On exit  : 0/0
  5213 ;;		Unchanged: 0/0
  5214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5219 ;;Total ram usage:        0 bytes
  5220 ;; Hardware stack levels used: 1
  5221 ;; This function calls:
  5222 ;;		Nothing
  5223 ;; This function is called by:
  5224 ;;		_INTERRUPT_InterruptManager
  5225 ;; This function uses a non-reentrant model
  5226 ;;
  5227                           
  5228                           	psect	text46
  5229   010F6A                     __ptext46:
  5230                           	callstack 0
  5231   010F6A                     _PIN_MANAGER_IOC:
  5232                           	callstack 22
  5233   010F6A  0012               	return		;funcret
  5234   010F6C                     __end_of_PIN_MANAGER_IOC:
  5235                           	callstack 0
  5236                           
  5237 ;; *************** function _ADCC_ThresholdISR *****************
  5238 ;; Defined at:
  5239 ;;		line 285 in file "mcc_generated_files/adc/src/adcc.c"
  5240 ;; Parameters:    Size  Location     Type
  5241 ;;		None
  5242 ;; Auto vars:     Size  Location     Type
  5243 ;;		None
  5244 ;; Return value:  Size  Location     Type
  5245 ;;                  1    wreg      void 
  5246 ;; Registers used:
  5247 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5248 ;; Tracked objects:
  5249 ;;		On entry : 0/0
  5250 ;;		On exit  : 0/0
  5251 ;;		Unchanged: 0/0
  5252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5257 ;;Total ram usage:        0 bytes
  5258 ;; Hardware stack levels used: 1
  5259 ;; Hardware stack levels required when called: 1
  5260 ;; This function calls:
  5261 ;;		NULL
  5262 ;;		_ADCC_DefaultADTI_ISR
  5263 ;;		_ADCUserInterrupt
  5264 ;; This function is called by:
  5265 ;;		_INTERRUPT_InterruptManager
  5266 ;; This function uses a non-reentrant model
  5267 ;;
  5268                           
  5269                           	psect	text47
  5270   010C86                     __ptext47:
  5271                           	callstack 0
  5272   010C86                     _ADCC_ThresholdISR:
  5273                           	callstack 21
  5274   010C86                     
  5275                           ;mcc_generated_files/adc/src/adcc.c: 288:     PIR1bits.ADTIF = 0;
  5276   010C86  010E               	movlb	14	; () banked
  5277   010C88  93C6               	bcf	198,1,b	;volatile
  5278   010C8A                     
  5279                           ; BSR set to: 14
  5280                           ;mcc_generated_files/adc/src/adcc.c: 290:     if (ADCC_ADTI_InterruptHandler != ((void*)
      +                          0))
  5281   010C8A  504E               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
  5282   010C8C  104F               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
  5283   010C8E  1050               	iorwf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
  5284   010C90  B4D8               	btfsc	status,2,c
  5285   010C92  EF4D  F086         	goto	i2u37_41
  5286   010C96  EF4F  F086         	goto	i2u37_40
  5287   010C9A                     i2u37_41:
  5288   010C9A  EF5C  F086         	goto	i2l168
  5289   010C9E                     i2u37_40:
  5290   010C9E                     
  5291                           ; BSR set to: 14
  5292                           ;mcc_generated_files/adc/src/adcc.c: 291:     {;mcc_generated_files/adc/src/adcc.c: 292:
      +                                   ADCC_ADTI_InterruptHandler();
  5293   010C9E  D802               	call	i2u38_48
  5294   010CA0  EF5C  F086         	goto	i2u38_49
  5295   010CA4                     i2u38_48:
  5296   010CA4  0005               	push	
  5297   010CA6  6EFA               	movwf	pclath,c
  5298   010CA8  504E               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
  5299   010CAA  6EFD               	movwf	tosl,c
  5300   010CAC  504F               	movf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
  5301   010CAE  6EFE               	movwf	tosh,c
  5302   010CB0  5050               	movf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
  5303   010CB2  6EFF               	movwf	tosu,c
  5304   010CB4  50FA               	movf	pclath,w,c
  5305   010CB6  0012               	return		;indir
  5306   010CB8                     i2u38_49:
  5307   010CB8                     i2l168:
  5308   010CB8  0012               	return		;funcret
  5309   010CBA                     __end_of_ADCC_ThresholdISR:
  5310                           	callstack 0
  5311                           
  5312 ;; *************** function _ADCC_DefaultADTI_ISR *****************
  5313 ;; Defined at:
  5314 ;;		line 301 in file "mcc_generated_files/adc/src/adcc.c"
  5315 ;; Parameters:    Size  Location     Type
  5316 ;;		None
  5317 ;; Auto vars:     Size  Location     Type
  5318 ;;		None
  5319 ;; Return value:  Size  Location     Type
  5320 ;;                  1    wreg      void 
  5321 ;; Registers used:
  5322 ;;		None
  5323 ;; Tracked objects:
  5324 ;;		On entry : 0/0
  5325 ;;		On exit  : 0/0
  5326 ;;		Unchanged: 0/0
  5327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5332 ;;Total ram usage:        0 bytes
  5333 ;; Hardware stack levels used: 1
  5334 ;; This function calls:
  5335 ;;		Nothing
  5336 ;; This function is called by:
  5337 ;;		_ADCC_Initialize
  5338 ;;		_ADCC_ThresholdISR
  5339 ;; This function uses a non-reentrant model
  5340 ;;
  5341                           
  5342                           	psect	text48
  5343   010F6C                     __ptext48:
  5344                           	callstack 0
  5345   010F6C                     _ADCC_DefaultADTI_ISR:
  5346                           	callstack 21
  5347   010F6C  0012               	return		;funcret
  5348   010F6E                     __end_of_ADCC_DefaultADTI_ISR:
  5349                           	callstack 0
  5350                           
  5351 ;; *************** function _ADCUserInterrupt *****************
  5352 ;; Defined at:
  5353 ;;		line 258 in file "application.c"
  5354 ;; Parameters:    Size  Location     Type
  5355 ;;		None
  5356 ;; Auto vars:     Size  Location     Type
  5357 ;;		None
  5358 ;; Return value:  Size  Location     Type
  5359 ;;                  1    wreg      void 
  5360 ;; Registers used:
  5361 ;;		wreg, status,2
  5362 ;; Tracked objects:
  5363 ;;		On entry : 0/0
  5364 ;;		On exit  : 0/0
  5365 ;;		Unchanged: 0/0
  5366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5371 ;;Total ram usage:        0 bytes
  5372 ;; Hardware stack levels used: 1
  5373 ;; This function calls:
  5374 ;;		Nothing
  5375 ;; This function is called by:
  5376 ;;		_main
  5377 ;;		_ADCC_ThresholdISR
  5378 ;; This function uses a non-reentrant model
  5379 ;;
  5380                           
  5381                           	psect	text49
  5382   010F50                     __ptext49:
  5383                           	callstack 0
  5384   010F50                     _ADCUserInterrupt:
  5385                           	callstack 21
  5386   010F50                     
  5387                           ;application.c: 260:     adcReadyFlag = 1;
  5388   010F50  0E01               	movlw	1
  5389   010F52  6E4C               	movwf	_adcReadyFlag^0,c	;volatile
  5390   010F54  0012               	return		;funcret
  5391   010F56                     __end_of_ADCUserInterrupt:
  5392                           	callstack 0
  5393                           
  5394                           	psect	rparam
  5395   000000                     
  5396                           	psect	temp
  5397   000051                     btemp:
  5398                           	callstack 0
  5399   000051                     	ds	1
  5400   000000                     int$flags	set	btemp
  5401   000000                     wtemp8	set	btemp+1
  5402   000000                     ttemp5	set	btemp+1
  5403   000000                     ttemp6	set	btemp+4
  5404   000000                     ttemp7	set	btemp+8
  5405                           
  5406                           	psect	config
  5407                           
  5408                           ;Config register CONFIG1L @ 0x300000
  5409                           ;	External Oscillator mode Selection bits
  5410                           ;	FEXTOSC = ECH, EC (external clock) above 8 MHz; PFM set to high power
  5411                           ;	Power-up default value for COSC bits
  5412                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  5413   300000                     	org	3145728
  5414   300000  FF                 	db	255
  5415                           
  5416                           ;Config register CONFIG1H @ 0x300001
  5417                           ;	Clock Out Enable bit
  5418                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  5419                           ;	Clock Switch Enable bit
  5420                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  5421                           ;	Fail-Safe Clock Monitor Enable bit
  5422                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  5423   300001                     	org	3145729
  5424   300001  FF                 	db	255
  5425                           
  5426                           ;Config register CONFIG2L @ 0x300002
  5427                           ;	Master Clear Enable bit
  5428                           ;	MCLRE = EXTMCLR, MCLR pin (RE3) is MCLR
  5429                           ;	Power-up Timer Enable bit
  5430                           ;	PWRTE = OFF, Power up timer disabled
  5431                           ;	Low-power BOR enable bit
  5432                           ;	LPBOREN = OFF, Low power BOR is disabled
  5433                           ;	Brown-out Reset Enable bits
  5434                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  5435   300002                     	org	3145730
  5436   300002  FF                 	db	255
  5437                           
  5438                           ;Config register CONFIG2H @ 0x300003
  5439                           ;	Brown Out Reset Voltage selection bits
  5440                           ;	BORV = VBOR_190, Brown-out Reset Voltage (VBOR) set to 1.90V
  5441                           ;	ZCD Disable bit
  5442                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  5443                           ;	PPSLOCK bit One-Way Set Enable bit
  5444                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  5445                           ;	Stack Full/Underflow Reset Enable bit
  5446                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5447                           ;	Extended Instruction Set Enable bit
  5448                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  5449   300003                     	org	3145731
  5450   300003  FF                 	db	255
  5451                           
  5452                           ;Config register CONFIG3L @ 0x300004
  5453                           ;	WDT Period Select bits
  5454                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  5455                           ;	WDT operating mode
  5456                           ;	WDTE = OFF, WDT Disabled
  5457   300004                     	org	3145732
  5458   300004  9F                 	db	159
  5459                           
  5460                           ;Config register CONFIG3H @ 0x300005
  5461                           ;	WDT Window Select bits
  5462                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  5463                           ;	WDT input clock selector
  5464                           ;	WDTCCS = SC, Software Control
  5465   300005                     	org	3145733
  5466   300005  FF                 	db	255
  5467                           
  5468                           ;Config register CONFIG4L @ 0x300006
  5469                           ;	Write Protection Block 0
  5470                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  5471                           ;	Write Protection Block 1
  5472                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  5473                           ;	Write Protection Block 2
  5474                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  5475                           ;	Write Protection Block 3
  5476                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  5477                           ;	Write Protection Block 4
  5478                           ;	WRT4 = OFF, Block 4 (010000-013FFFh) not write-protected
  5479                           ;	Write Protection Block 5
  5480                           ;	WRT5 = OFF, Block 5 (014000-017FFFh) not write-protected
  5481                           ;	Write Protection Block 6
  5482                           ;	WRT6 = OFF, Block 6 (018000-01BFFFh) not write-protected
  5483                           ;	Write Protection Block 7
  5484                           ;	WRT7 = OFF, Block 7 (01C000-01FFFFh) not write-protected
  5485   300006                     	org	3145734
  5486   300006  FF                 	db	255
  5487                           
  5488                           ;Config register CONFIG4H @ 0x300007
  5489                           ;	Configuration Register Write Protection bit
  5490                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
  5491                           ;	Boot Block Write Protection bit
  5492                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  5493                           ;	Data EEPROM Write Protection bit
  5494                           ;	WRTD = OFF, Data EEPROM not write-protected
  5495                           ;	Scanner Enable bit
  5496                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
  5497                           ;	Low Voltage Programming Enable bit
  5498                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  5499   300007                     	org	3145735
  5500   300007  FF                 	db	255
  5501                           
  5502                           ;Config register CONFIG5L @ 0x300008
  5503                           ;	UserNVM Program Memory Code Protection bit
  5504                           ;	CP = OFF, UserNVM code protection disabled
  5505                           ;	DataNVM Memory Code Protection bit
  5506                           ;	CPD = OFF, DataNVM code protection disabled
  5507   300008                     	org	3145736
  5508   300008  FF                 	db	255
  5509                           
  5510                           ;Config register CONFIG5H @ 0x300009
  5511                           ;	unspecified, using default values
  5512   300009                     	org	3145737
  5513   300009  FF                 	db	255
  5514                           
  5515                           ;Config register CONFIG6L @ 0x30000A
  5516                           ;	Table Read Protection Block 0
  5517                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  5518                           ;	Table Read Protection Block 1
  5519                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5520                           ;	Table Read Protection Block 2
  5521                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  5522                           ;	Table Read Protection Block 3
  5523                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  5524                           ;	Table Read Protection Block 4
  5525                           ;	EBTR4 = OFF, Block 4 (010000-013FFFh) not protected from table reads executed in other
      +                           blocks
  5526                           ;	Table Read Protection Block 5
  5527                           ;	EBTR5 = OFF, Block 5 (014000-017FFFh) not protected from table reads executed in other
      +                           blocks
  5528                           ;	Table Read Protection Block 6
  5529                           ;	EBTR6 = OFF, Block 6 (018000-01BFFFh) not protected from table reads executed in other
      +                           blocks
  5530                           ;	Table Read Protection Block 7
  5531                           ;	EBTR7 = OFF, Block 7 (01C000-01FFFFh) not protected from table reads executed in other
      +                           blocks
  5532   30000A                     	org	3145738
  5533   30000A  FF                 	db	255
  5534                           
  5535                           ;Config register CONFIG6H @ 0x30000B
  5536                           ;	Boot Block Table Read Protection bit
  5537                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5538   30000B                     	org	3145739
  5539   30000B  FF                 	db	255
  5540                           tosu	equ	0xFFF
  5541                           tosh	equ	0xFFE
  5542                           tosl	equ	0xFFD
  5543                           stkptr	equ	0xFFC
  5544                           pclatu	equ	0xFFB
  5545                           pclath	equ	0xFFA
  5546                           pcl	equ	0xFF9
  5547                           tblptru	equ	0xFF8
  5548                           tblptrh	equ	0xFF7
  5549                           tblptrl	equ	0xFF6
  5550                           tablat	equ	0xFF5
  5551                           prodh	equ	0xFF4
  5552                           prodl	equ	0xFF3
  5553                           indf0	equ	0xFEF
  5554                           postinc0	equ	0xFEE
  5555                           postdec0	equ	0xFED
  5556                           preinc0	equ	0xFEC
  5557                           plusw0	equ	0xFEB
  5558                           fsr0h	equ	0xFEA
  5559                           fsr0l	equ	0xFE9
  5560                           wreg	equ	0xFE8
  5561                           indf1	equ	0xFE7
  5562                           postinc1	equ	0xFE6
  5563                           postdec1	equ	0xFE5
  5564                           preinc1	equ	0xFE4
  5565                           plusw1	equ	0xFE3
  5566                           fsr1h	equ	0xFE2
  5567                           fsr1l	equ	0xFE1
  5568                           bsr	equ	0xFE0
  5569                           indf2	equ	0xFDF
  5570                           postinc2	equ	0xFDE
  5571                           postdec2	equ	0xFDD
  5572                           preinc2	equ	0xFDC
  5573                           plusw2	equ	0xFDB
  5574                           fsr2h	equ	0xFDA
  5575                           fsr2l	equ	0xFD9
  5576                           status	equ	0xFD8

Data Sizes:
    Strings     168
    Constant    108
    Data        0
    BSS         66
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     43      80
    BANK0           160      0      32
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK14           31      0       0

Pointer List with Targets:

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultADTI_ISR(), ADCUserInterrupt(), NULL(), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultADTI_ISR(), ADCUserInterrupt(), 

    EUSART1_FramingErrorCallbackRegister@callbackHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultFramingErrorCallback(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultFramingErrorCallback(), NULL(), 

    EUSART1_OverrunErrorCallbackRegister@callbackHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorCallback(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorCallback(), NULL(), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), NULL(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), NULL(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), NULL(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_1(CODE[25]), STR_2(CODE[23]), STR_3(CODE[51]), STR_4(CODE[51]), 
		 -> STR_5(CODE[29]), STR_6(CODE[57]), STR_7(CODE[57]), 

    S1121$20$0	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultFramingErrorCallback(), 

    S1121$21$0	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorCallback(), 

    S1121$AutoBaudEventEnableGet	PTR FTN()_Bool  size(3) Largest target is 1
		 -> NULL(), 

    S1121$AutoBaudQuery	PTR FTN()_Bool  size(3) Largest target is 1
		 -> EUSART1_AutoBaudQuery(), 

    S1121$AutoBaudSet	PTR FTN(_Bool ,)void  size(3) Largest target is 1
		 -> EUSART1_AutoBaudSet(), 

    S1121$BaudRateGet	PTR FTN()unsigned long  size(3) Largest target is 1
		 -> NULL(), 

    S1121$BaudRateSet	PTR FTN(unsigned long ,)void  size(3) Largest target is 1
		 -> NULL(), 

    S1121$BRGCountGet	PTR FTN()unsigned long  size(3) Largest target is 1
		 -> NULL(), 

    S1121$BRGCountSet	PTR FTN(unsigned long ,)void  size(3) Largest target is 1
		 -> NULL(), 

    S1121$Deinitialize	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_Deinitialize(), 

    S1121$ErrorGet	PTR FTN()unsigned int  size(3) Largest target is 2
		 -> EUSART1_ErrorGet(), 

    S1121$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    S1121$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> EUSART1_FramingErrorCallbackRegister(), 

    S1121$Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_Initialize(), 

    S1121$IsRxReady	PTR FTN()_Bool  size(3) Largest target is 1
		 -> EUSART1_IsRxReady(), 

    S1121$IsTxDone	PTR FTN()_Bool  size(3) Largest target is 1
		 -> EUSART1_IsTxDone(), 

    S1121$IsTxReady	PTR FTN()_Bool  size(3) Largest target is 1
		 -> EUSART1_IsTxReady(), 

    S1121$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> EUSART1_OverrunErrorCallbackRegister(), 

    S1121$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    S1121$Read	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> EUSART1_Read(), 

    S1121$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    S1121$TransmitDisable	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_TransmitDisable(), 

    S1121$TransmitEnable	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_TransmitEnable(), 

    S1121$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    S1121$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    S1121$Write	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> EUSART1_Write(), 

    S2284$buffer	PTR unsigned char  size(2) Largest target is 0

    S2284$source	PTR const unsigned char  size(2) Largest target is 0

    S670$4$0	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultOverflowCallback(), TMR4_DefaultOverflowCallback(), TMR4UserInterrupt(), 

    S670TMR_INTERFACE$Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Initialize(), TMR4_Initialize(), 

    S670TMR_INTERFACE$PeriodCountSet	PTR FTN(unsigned int ,)void  size(3) Largest target is 1
		 -> TMR0_Reload(), TMR4_PeriodCountSet(), 

    S670TMR_INTERFACE$Start	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Start(), TMR4_Start(), 

    S670TMR_INTERFACE$Stop	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Stop(), TMR4_Stop(), 

    S670TMR_INTERFACE$Tasks	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Tasks(), NULL(), 

    S670TMR_INTERFACE$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> TMR0_OverflowCallbackRegister(), TMR4_OverflowCallbackRegister(), 

    Timer0$Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Initialize(), TMR4_Initialize(), 

    Timer0$PeriodCountSet	PTR FTN(unsigned int ,)void  size(3) Largest target is 1
		 -> TMR0_Reload(), TMR4_PeriodCountSet(), 

    Timer0$Start	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Start(), TMR4_Start(), 

    Timer0$Stop	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Stop(), TMR4_Stop(), 

    Timer0$Tasks	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Tasks(), NULL(), 

    Timer0$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> TMR0_OverflowCallbackRegister(), TMR4_OverflowCallbackRegister(), 

    Timer4$Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Initialize(), TMR4_Initialize(), 

    Timer4$PeriodCountSet	PTR FTN(unsigned int ,)void  size(3) Largest target is 1
		 -> TMR0_Reload(), TMR4_PeriodCountSet(), 

    Timer4$Start	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Start(), TMR4_Start(), 

    Timer4$Stop	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Stop(), TMR4_Stop(), 

    Timer4$Tasks	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Tasks(), NULL(), 

    Timer4$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> TMR0_OverflowCallbackRegister(), TMR4_OverflowCallbackRegister(), 

    TMR0_OverflowCallback	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultOverflowCallback(), TMR4_DefaultOverflowCallback(), TMR4UserInterrupt(), NULL(), 

    TMR0_OverflowCallbackRegister@CallbackHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultOverflowCallback(), TMR4_DefaultOverflowCallback(), TMR4UserInterrupt(), 

    TMR4_OverflowCallback	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultOverflowCallback(), TMR4_DefaultOverflowCallback(), TMR4UserInterrupt(), NULL(), 

    TMR4_OverflowCallbackRegister@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultOverflowCallback(), TMR4_DefaultOverflowCallback(), TMR4UserInterrupt(), 

    UART1$AutoBaudEventEnableGet	PTR FTN()_Bool  size(3) Largest target is 1
		 -> NULL(), 

    UART1$AutoBaudQuery	PTR FTN()_Bool  size(3) Largest target is 1
		 -> EUSART1_AutoBaudQuery(), 

    UART1$AutoBaudSet	PTR FTN(_Bool ,)void  size(3) Largest target is 1
		 -> EUSART1_AutoBaudSet(), 

    UART1$BaudRateGet	PTR FTN()unsigned long  size(3) Largest target is 1
		 -> NULL(), 

    UART1$BaudRateSet	PTR FTN(unsigned long ,)void  size(3) Largest target is 1
		 -> NULL(), 

    UART1$BRGCountGet	PTR FTN()unsigned long  size(3) Largest target is 1
		 -> NULL(), 

    UART1$BRGCountSet	PTR FTN(unsigned long ,)void  size(3) Largest target is 1
		 -> NULL(), 

    UART1$Deinitialize	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_Deinitialize(), 

    UART1$ErrorGet	PTR FTN()unsigned int  size(3) Largest target is 2
		 -> EUSART1_ErrorGet(), 

    UART1$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    UART1$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> EUSART1_FramingErrorCallbackRegister(), 

    UART1$Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_Initialize(), 

    UART1$IsRxReady	PTR FTN()_Bool  size(3) Largest target is 1
		 -> EUSART1_IsRxReady(), 

    UART1$IsTxDone	PTR FTN()_Bool  size(3) Largest target is 1
		 -> EUSART1_IsTxDone(), 

    UART1$IsTxReady	PTR FTN()_Bool  size(3) Largest target is 1
		 -> EUSART1_IsTxReady(), 

    UART1$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> EUSART1_OverrunErrorCallbackRegister(), 

    UART1$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    UART1$Read	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> EUSART1_Read(), 

    UART1$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    UART1$TransmitDisable	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_TransmitDisable(), 

    UART1$TransmitEnable	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_TransmitEnable(), 

    UART1$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    UART1$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    UART1$Write	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> EUSART1_Write(), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 57
		 -> STR_1(CODE[25]), STR_2(CODE[23]), STR_3(CODE[51]), STR_4(CODE[51]), 
		 -> STR_5(CODE[29]), STR_6(CODE[57]), STR_7(CODE[57]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 57
		 -> STR_1(CODE[25]), STR_2(CODE[23]), STR_3(CODE[51]), STR_4(CODE[51]), 
		 -> STR_5(CODE[29]), STR_6(CODE[57]), STR_7(CODE[57]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_1(CODE[25]), STR_2(CODE[23]), STR_3(CODE[51]), STR_4(CODE[51]), 
		 -> STR_5(CODE[29]), STR_6(CODE[57]), STR_7(CODE[57]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _TMR4_Initialize->_TMR4_OverflowCallbackRegister
    _TMR0_Initialize->_TMR0_OverflowCallbackRegister
    _INTERRUPT_Initialize->_INT0_SetInterruptHandler
    _INTERRUPT_Initialize->_INT1_SetInterruptHandler
    _INTERRUPT_Initialize->_INT2_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_FramingErrorCallbackRegister
    _EUSART1_Initialize->_EUSART1_OverrunErrorCallbackRegister
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _ApplicationTask->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _fputc->_putch
    _putch->_EUSART1_IsTxReady
    _putch->_EUSART1_Write
    _abs->___awmod

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5096
       _ADCC_SetADTIInterruptHandler
                    _ApplicationTask
                  _SYSTEM_Initialize
      _TMR0_OverflowCallbackRegister *
      _TMR4_OverflowCallbackRegister *
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     928
                    _ADCC_Initialize
                   _CLOCK_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR4_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0      98
      _TMR4_OverflowCallbackRegister
 ---------------------------------------------------------------------------------
 (1) _TMR4_OverflowCallbackRegister                        3     0      3      98
                                              2 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     122
      _TMR0_OverflowCallbackRegister
 ---------------------------------------------------------------------------------
 (1) _TMR0_OverflowCallbackRegister                        3     0      3     122
                                              2 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0     294
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3      98
                                              2 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      98
                                              2 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      98
                                              2 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     240
_EUSART1_FramingErrorCallbackRegiste
_EUSART1_OverrunErrorCallbackRegiste
 ---------------------------------------------------------------------------------
 (3) _EUSART1_OverrunErrorCallbackRegister                 3     0      3     120
                                              2 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART1_FramingErrorCallbackRegister                 3     0      3     120
                                              2 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     174
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADTIInterruptHandler                         3     0      3     174
                                              2 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _ApplicationTask                                      0     0      0    3774
 _ADCC_HasErrorCrossedLowerThreshold
 _ADCC_HasErrorCrossedUpperThreshold
        _ADCC_Initialize_AverageMode
          _ADCC_Initialize_BasicMode
   _ADCC_Initialize_BurstAverageMode
  _ADCC_Initialize_LowPassFilterMode
                    _ADCC_SetChannel
                  _EUSART1_IsTxReady *
                      _EUSART1_Write
                        _TMR0_Reload *
                         _TMR0_Start *
                          _TMR0_Stop *
                _TMR4_PeriodCountSet *
                         _TMR4_Start *
                          _TMR4_Stop *
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              11     3      8    3590
                                             34 COMRAM     9     1      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             7     2      5    3004
                                             27 COMRAM     7     2      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           14    10      4    2654
                                             13 COMRAM    14    10      4
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     850
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      68
                                              3 COMRAM     1     1      0
                  _EUSART1_IsTxReady
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Write                                        1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _EUSART1_IsTxReady                                    1     1      0      24
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              8 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _TMR4_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_PeriodCountSet                                  2     0      2      22
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Reload                                          2     0      2     101
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetChannel                                      1     1      0      15
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize_LowPassFilterMode                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize_BurstAverageMode                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize_BasicMode                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize_AverageMode                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_HasErrorCrossedUpperThreshold                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_HasErrorCrossedLowerThreshold                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManager                           2     2      0       0
                                              0 COMRAM     2     2      0
                  _ADCC_ThresholdISR
                    _PIN_MANAGER_IOC
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (9) _TMR4_ISR                                             0     0      0       0
                                NULL *
       _TMR0_DefaultOverflowCallback *
                  _TMR4UserInterrupt *
       _TMR4_DefaultOverflowCallback *
 ---------------------------------------------------------------------------------
 (10) _TMR4_DefaultOverflowCallback                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR4UserInterrupt                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR0_DefaultOverflowCallback                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _PIN_MANAGER_IOC                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _ADCC_ThresholdISR                                    0     0      0       0
                                NULL *
               _ADCC_DefaultADTI_ISR *
                   _ADCUserInterrupt *
 ---------------------------------------------------------------------------------
 (10) _ADCUserInterrupt                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _ADCC_DefaultADTI_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_SetADTIInterruptHandler
   _ApplicationTask
     _ADCC_HasErrorCrossedLowerThreshold
     _ADCC_HasErrorCrossedUpperThreshold
     _ADCC_Initialize_AverageMode
     _ADCC_Initialize_BasicMode
     _ADCC_Initialize_BurstAverageMode
     _ADCC_Initialize_LowPassFilterMode
     _ADCC_SetChannel
     _EUSART1_IsTxReady *
     _EUSART1_Write *
     _TMR0_Reload *
     _TMR0_Start *
     _TMR0_Stop *
     _TMR4_PeriodCountSet *
     _TMR4_Start *
     _TMR4_Stop *
     _printf *
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
               _EUSART1_IsTxReady
               _EUSART1_Write
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _CLOCK_Initialize
     _EUSART1_Initialize
       _EUSART1_FramingErrorCallbackRegister
       _EUSART1_OverrunErrorCallbackRegister
     _INTERRUPT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_OverflowCallbackRegister
     _TMR4_Initialize
       _TMR4_OverflowCallbackRegister
   _TMR0_OverflowCallbackRegister *
   _TMR4_OverflowCallbackRegister *

 _INTERRUPT_InterruptManager (ROOT)
   _ADCC_ThresholdISR
     NULL(Fake) *
     _ADCC_DefaultADTI_ISR *
     _ADCUserInterrupt *
   _PIN_MANAGER_IOC
   _TMR4_ISR
     NULL(Fake) *
     _TMR0_DefaultOverflowCallback *
     _TMR4UserInterrupt *
     _TMR4_DefaultOverflowCallback *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      54        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFR          100      0       0      53        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      20       5       20.0%
BITBIGSFR_1llll     88      0       0      51        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2B      50       1       85.1%
BITBIGSFR_1llll     27      0       0      40        0.0%
BITBANK14           1F      0       0      31        0.0%
BANK14              1F      0       0      32        0.0%
BIGRAM_1            1F      0       0      52        0.0%
BITBIGSFR_1llll     1E      0       0      42        0.0%
BITBIGSFR_1hhhh     1C      0       0      34        0.0%
BITBIGSFR_1hhhh     18      0       0      35        0.0%
BITBIGSFR_1hhhh     15      0       0      36        0.0%
BITBIGSFR_1hhhl     13      0       0      39        0.0%
BITBIGSFR_1hhhh      D      0       0      33        0.0%
BITBIGSFR_1llll      C      0       0      41        0.0%
BITBIGSFR_1llll      C      0       0      49        0.0%
BITBIGSFR_1hhhh      9      0       0      37        0.0%
BITBIGSFR_1llll      9      0       0      45        0.0%
BITBIGSFR_1llll      8      0       0      50        0.0%
BITBIGSFR_1llll      3      0       0      47        0.0%
BITBIGSFR_1hhhh      2      0       0      38        0.0%
BITBIGSFR_1llll      2      0       0      48        0.0%
BITBIGSFR_1llll      1      0       0      43        0.0%
BITBIGSFR_1llll      1      0       0      44        0.0%
BITBIGSFR_1llll      1      0       0      46        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      70      18        0.0%
DATA                 0      0      70       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Jan 24 11:38:45 2024

                                                 l83 0AF2                                         ___awdiv@sign 0008  
                               TMR0_Reload@periodVal 0003                                         _adcReadyFlag 004C  
                               ?_TMR4_PeriodCountSet 0003                                                  l161 0ECC  
                                                l171 0F32                                                  l340 0BDE  
                                                l158 0EB8                                                  l521 0F60  
                                                l409 0E1C                                                  l363 0F24  
                                                l524 0F58                                                  l533 0F48  
                                                l293 0E8C                                                  l277 09D8  
                                                l518 0D98                                                  l454 0CE8  
                                                l463 0F64                                                  l608 0C1C  
                                                l376 0F16                                                  l536 0EEC  
                                                l466 0F5C                                                  l482 0EFA  
                                                l475 0F4E                                                  l389 0F08  
                                                l656 0D70                                                  l657 0D72  
                                                l673 0F3A                                                  l685 0E58  
                                                l861 05A6                                                  l870 0D18  
                                                l695 0DFE                                                  l864 0EA4  
                                                l873 0E74                                                  l867 0D48  
                                                l699 0DDC                                                  l876 0F42  
                                                u340 0EB6                                                  u341 0EB0  
                                                u350 0ECA                                                  u351 0EC4  
                                                _PR4 0FB5                                                  u346 0EB8  
                                                u356 0ECC                           ??_INT0_SetInterruptHandler 0006  
                                                _abs 0C1E                                         ___awmod@sign 0008  
                                                tosl 0FFD                                                  wreg 0FE8  
                                       _BAUD1CONbits 0F9E                                                 l1130 0A88  
                                               ?_abs 0009                                                 l1117 0920  
                                               l2401 08FA                                                 l1602 0792  
                                               l2403 0900                                                 l2411 09DA  
                                               l1612 0C38                                                 l2405 0910  
                                               l2421 0A06                                                 l2413 09DE  
                                               l2501 0740                                                 l2407 0918  
                                               l2431 0A3E                                                 l2423 0A0E  
                                               l2415 09EC                                                 l1615 0C50  
                                               l2351 0D5E                                                 l2503 0742  
                                               l1608 0B98                                                 l2441 0A78  
                                               l2433 0A54                                                 l2425 0A20  
                                               l2417 09F4                                                 l2353 0D6C  
                                               l2361 0E3E                                                 l2505 0758  
                                               l2601 0000                                                 l2521 0EFC  
                                               l2371 0870                                                 l2443 0A80  
                                               l2435 0A5C                                                 l2427 0A28  
                                               l2419 09F8                                                 l2347 0D4A  
                                               l2363 0E52                                                 l1627 085C  
                                               l2451 07B8                                                 l2611 0078  
                                               l2603 0004                                                 l2515 0F26  
                                               l2531 0DD0                                                 l2523 0EEE  
                                               l1564 0E3A                                                 l2381 0896  
                                               l2373 0878                                                 l2437 0A62  
                                               l2429 0A30                                                 l2461 0C1E  
                                               l2349 0D4E                                                 l2357 0F36  
                                               l2453 07C2                                                 l2509 0768  
                                               l2533 0B50                                                 l2701 0398  
                                               l2621 00C2                                                 l2613 007C  
                                               l2605 0014                                                 l2525 0DDE  
                                               l2517 0F18                                                 l1901 0D80  
                                               l2391 08CE                                                 l2383 089E  
                                               l2375 087C                                                 l2367 085E  
                                               l2439 0A68                                                 l2463 0C2C  
                                               l2359 0E3E                                                 l2455 07E0  
                                               l2447 0794                                                 l2471 05E6  
                                               l2535 0B5C                                                 l2711 03E0  
                                               l2703 03C4                                                 l2631 011C  
                                               l2623 00C6                                                 l2615 0082  
                                               l2607 0074                                                 l2551 0AEE  
                                               l2543 0A8A                                                 l2527 0DF2  
                                               l2519 0F0A                                                 l1903 0D90  
                                               l1815 0EE0                                                 l2393 08D4  
                                               l2385 08B0                                                 l2377 088A  
                                               l2369 0862                                                 l2457 0816  
                                               l2449 07A6                                                 l2481 0650  
                                               l2473 05EA                                                 l2465 05A8  
                                               l2537 0B70                                                 l2721 04A2  
                                               l2713 041C                                                 l2705 03C8  
                                               l2641 0158                                                 l2633 011E  
                                               l2625 00DE                                                 l2617 00AE  
                                               l2609 0076                                                 l2545 0AD8  
                                               l2529 0DBC                                                 l2561 0BC8  
                                               l2553 0B9A                                                 l1905 0D94  
                                               l1931 0F3E                                                 l1923 0F5E  
                                               l2395 08EA                                                 l2387 08B8  
                                               l2379 0892                                                 l2491 06E0  
                                               l2483 066A                                                 l2475 05F8  
                                               l2467 05CE                                                 l2539 0B90  
                                               l2731 052E                                                 l2723 04AA  
                                               l2715 0422                                                 l2707 03CC  
                                               l2651 0198                                                 l2635 0122  
                                               l2627 00EE                                                 l2643 015C  
                                               l2619 00B2                                                 l2547 0ADC  
                                               l2563 0BCC                                                 l2555 0BA2  
                                               l2571 0CBA                                                 l1845 0EA6  
                                               l1941 0D1E                                                 l2581 0F4A  
                                               l1917 0F62                                                 l1925 0F56  
                                               l2397 08F2                                                 l2389 08C0  
                                               l2493 06F0                                                 l2485 0682  
                                               l2477 0618                                                 l2469 05DA  
                                               l2733 056A                                                 l2725 04E6  
                                               l2717 045E                                                 l2709 03DC  
                                               l2661 0238                                                 l2653 01C0  
                                               l2645 016C                                                 l2637 0128  
                                               l2629 011A                                                 l2549 0ADE  
                                               l2565 0BE0                                                 l2557 0BB2  
                                               l1861 0952                                                 l1853 0922  
                                               l2573 0CCE                                                 l2741 0AF4  
                                               l1943 0D28                                                 l1951 0E5A  
                                               l1927 0F44                                                 l1919 0F5A  
                                               l2399 08F4                                                 l2495 0700  
                                               l2487 06B2                                                 l2479 0638  
                                               l2583 0E1E                                                 l2735 0574  
                                               l2727 04EC                                                 l2719 0466  
                                               l2671 0272                                                 l2663 023A  
                                               l2655 01D4                                                 l2647 0170  
                                               l2639 0154                                                 l2567 0BF4  
                                               l2559 0BB6                                                 l1871 098C  
                                               l1863 0980                                                 l1855 093A  
                                               l2575 0CDE                                                 l2591 0E08  
                                               l2743 0AF8                                                 l1849 0EBA  
                                               l1929 0E8E                                                 l1945 0CEA  
                                               l2497 0710                                                 l2489 06CE  
                                               l2585 0E22                                                 l2729 0528  
                                               l2681 02A2                                                 l2673 0276  
                                               l2665 023C                                                 l2657 01FC  
                                               l2649 0184                                                 l2569 0C04  
                                               l1873 098E                                                 l1865 0982  
                                               l1857 0940                                                 l2577 0CE2  
                                               l2593 0E0C                                                 l2745 0AFA  
                                               l1939 0D1A                                                 l1947 0CEE  
                                               l2499 0722                                                 l2691 032A  
                                               l2683 02B6                                                 l2667 0240  
                                               l2659 020C                                                 l2675 027A  
                                               l2739 0580                                                 l1875 0990  
                                               l1867 0984                                                 l1859 094C  
                                               l2579 0CE4                                                 l2595 0E10  
                                               l2747 0B0C                                                 l1949 0CF8  
                                               l2693 038A                                                 l2685 02DE  
                                               l2677 028A                                                 l2669 0246  
                                               l1877 0992                                                 l1869 0986  
                                               l2597 0E14                                                 l2589 0E00  
                                               l2749 0B44                                                 l2695 038C  
                                               l2687 02F2                                                 l2679 028E  
                                               l1879 0E76                                                 l2599 0E18  
                                               l2697 038E                                                 l2689 031A  
                                               l2699 0392                                                 l1899 0D74  
                                               STR_1 FFE6                                                 STR_2 FFCF  
                                               STR_3 FF96                                                 STR_4 FF5D  
                                               STR_5 FFC9                                                 STR_6 FF90  
                                               STR_7 FF57                                                 u1010 0D5E  
                                               u1011 0D5A                                                 u1100 09EC  
                                               u1020 0D6C                                                 u1101 09E8  
                                               u1021 0D68                                                 u1110 0A06  
                                               u1030 0E52                                                 u1111 0A02  
                                               u1031 0E4E                                                 u1040 0870  
                                               u1120 0A20                                                 u1200 0C2C  
                                               u1041 086C                                                 u1121 0A1C  
                                               u1201 0C28                                                 u1050 088A  
                                               u1130 0A3E                                                 u1210 05CE  
                                               u1051 0886                                                 u1131 0A3A  
                                               u1211 05CA                                                 u1060 08B0  
                                               u1140 0A54                                                 u1300 0754  
                                               u1220 0618                                                 u1061 08AC  
                                               u1141 0A50                                                 u1301 0750  
                                               u1221 0614                                                 u1070 08CE  
                                               u1150 0A78                                                 u1230 0638  
                                               u1310 0DF2                                                 u1071 08CA  
                                               u1151 0A74                                                 u1231 0634  
                                               u1311 0DEE                                                 u1080 08EA  
                                               u1160 07A6                                                 u1240 067E  
                                               u1320 0DD0                                                 u1081 08E6  
                                               u1161 07A2                                                 u1241 0678  
                                               u1321 0DCC                                                 u1090 0910  
                                               u1170 07B8                                                 u1250 0680  
                                               u1330 0B90                                                 u1091 090C  
                                               u1171 07B4                                                 u1331 0B8C  
                                               u1180 07E0                                                 u1260 06E0  
                                               u1500 02F2                                                 u1420 016C  
                                               u1340 0014                                                 u1181 07DC  
                                               u1261 06DC                                                 u1501 02EE  
                                               u1421 0168                                                 u1341 0010  
                                               _LATA 0F82                                                 u1190 0816  
                                               u1270 06F0                                                 u1510 032A  
                                               u1430 0198                                                 _LATB 0F83  
                                               u1191 0812                                                 u1271 06EC  
                                               u1511 0326                                                 u1431 0194  
                                               _LATC 0F84                                                 u1280 0700  
                                               u1440 01D4                                                 u1408 0100  
                                               _LATD 0F85                                                 u1281 06FC  
                                               u1441 01D0                                                 u1409 011A  
                                               _LATE 0F86                                                 u1290 0710  
                                               u1610 04A2                                                 u1450 020C  
                                               u1418 013A                                                 u1291 070C  
                                               u1611 049E                                                 u1451 0208  
                                               u1419 0154                                                 u1380 00C2  
                                               u1381 00BE                                                 u1630 04E6  
                                               u1550 03DC                                                 u1390 00EE  
                                               u1358 0026                                                 u1631 04E2  
                                               u1551 03D8                                                 u1391 00EA  
                                               u1359 0040                                                 u1608 0478  
                                               u1528 033C                                                 u1480 028A  
                                               u1368 005A                                                 u1609 0492  
                                               u1529 0356                                                 u1481 0286  
                                               u1369 0074                                                 u1650 0528  
                                               u1570 041C                                                 u1538 0370  
                                               u1490 02B6                                                 u1378 0094  
                                               u1651 0524                                                 u1571 0418  
                                               u1539 038A                                                 u1491 02B2  
                                               u1379 00AE                                                 u1628 04BC  
                                               u1548 03AA                                                 u1468 021E  
                                               u1629 04D6                                                 u1549 03C4  
                                               u1469 0238                                                 u1670 056A  
                                               u1590 045E                                                 u1478 0258  
                                               u1671 0566                                                 u1591 045A  
                                               u1479 0272                                                 u1648 04FE  
                                               u1568 03F2                                                 u1649 0518  
                                               u1569 040C                                                 _T4PR 0FB5  
                                               u1668 0540                                                 u1588 0434  
                                               u1669 055A                                                 u1589 044E  
                                               u1688 0B2A                                                 u1689 0B44  
                                               _TMR4 0FB4                                                 _WPUA 0F0B  
                                               _WPUB 0F13                                                 _WPUC 0F1B  
                                               _WPUD 0F20                                                 _WPUE 0F28  
                                      _EUSART1_Write 0F34                                                 abs@a 0009  
                                               _dbuf 0060                                                 _main 0AF4  
                                               _prec 0043                                                 fsr1h 0FE2  
                                               fsr2h 0FDA                                                 indf2 0FDF  
                                               fsr1l 0FE1                                                 fsr2l 0FD9  
                                               btemp 0051                            ?_INT2_SetInterruptHandler 0003  
                                               start 009A                                         ___param_bank 0000  
                             ADCC_SetChannel@channel 0003                                                ??_abs 000B  
                            __end_of_TMR0_Initialize 0D9A                              __end_of_ApplicationTask 05A8  
                              ??_TMR4_PeriodCountSet 0005                                                _ADACQ 0F57  
                                              _ADCAP 0F58                                                _ADACT 0F51  
                                              ?_main 0001                                                _ADCLK 0F52  
                                              _ADCNT 0F62                                                _ADPCH 0F5A  
                                              _ADREF 0F53                                      __end_of___awdiv 0922  
                                              _ADLTH 0F65                                                _ADRES 0F5E  
                                              _ADPRE 0F59                                      __end_of___awmod 0A8A  
                                              _ADRPT 0F61                                                _ADUTH 0F67  
                                    ___awdiv@divisor 0005                                                _T4CON 0FB6  
                                              _IOCAF 0F05                                                _IOCBF 0F0D  
                                              _IOCCF 0F15                                                _IOCAN 0F06  
                                              _IOCEF 0F22                                                _IOCAP 0F07  
                                              _IOCBN 0F0E                                                _IOCBP 0F0F  
                                              _IOCCN 0F16                                                _IOCCP 0F17  
                                              _T4HLT 0FB7                                                _IOCEN 0F23  
                                              _IOCEP 0F24                           _ADCC_ADTI_InterruptHandler 004E  
                                              _T4TMR 0FB4                                                _T4RST 0FB9  
                                              i2l174 0F6C                                                i2l168 0CB8  
                                              i2l280 0F6A                                                i2l352 008E  
                                              i2l353 008E                                                i2l345 0038  
                                              i2l348 006A                                                i2l539 0F66  
                                              i2l485 0F68                                                i2l479 0C84  
                                              i2l883 0EDE                                      ___awdiv@counter 0007  
                                              i2l879 0F54                                                _OSCEN 0ED7  
                                              _UART1 FEEB                                         vfpfcnvrt@fmt 0010  
                                              _TMR0H 0FD3                                                _TMR0L 0FD2  
                                              _TRISA 0F87                                                _TRISB 0F88  
                                              _TRISC 0F89                                                _TRISD 0F8A  
                                              _TRISE 0F8B                                      _TMR4_Initialize 0CBA  
       __end_of_EUSART1_FramingErrorCallbackRegister 0E00               ??_EUSART1_FramingErrorCallbackRegister 0006  
              ?_EUSART1_FramingErrorCallbackRegister 0003                 _EUSART1_FramingErrorCallbackRegister 0DDE  
                                   __end_of_TMR4_ISR 0C86                                          ?_TMR0_Start 0001  
                            __end_of_PIN_MANAGER_IOC 0F6C                                                _flags 0047  
                                              _count 004D                                                _fputc 0794  
                                        ?_TMR4_Start 0001                                                _width 0041  
                                              _putch 0E3C                       ??_TMR4_DefaultOverflowCallback 0001  
                           _INT1_SetInterruptHandler 0F0A                                       ?_EUSART1_Write 0001  
                                              pclath 0FFA                                                pclatu 0FFB  
                                              tablat 0FF5                               ??_ADCC_DefaultADTI_ISR 0001  
                              _EUSART1_AutoBaudQuery 0000                                                ttemp5 0052  
                                              ttemp6 0055                                                ttemp7 0059  
                                              status 0FD8                                                wtemp8 0052  
                       ?_ADCC_Initialize_AverageMode 0001                                      __initialization 0D9A  
                         __end_of_EUSART1_Initialize 0C1E                                         __end_of_main 0B50  
                        ?_INTERRUPT_InterruptManager 0001                                               ??_main 002C  
                                      __activetblptr 0003  EUSART1_OverrunErrorCallbackRegister@callbackHandler 0003  
EUSART1_FramingErrorCallbackRegister@callbackHandler 0003                                               _ADACCH 0F6C  
                                             _ADACCL 0F6B                                               _ADCON0 0F5B  
                                             _ADCON1 0F54                                               _ADCON2 0F55  
                                             _ADCON3 0F56                                               _ADFLTR 0F6D  
                                             _ADERRH 0F6A                                               _ADERRL 0F69  
                                             ?_fputc 0005                                               _ADLTHH 0F66  
                                             _ADLTHL 0F65                                               _ADRESH 0F5F  
                                             _ADRESL 0F5E                                               _ADSTAT 0F60  
                                             _ADUTHH 0F68                                     ___awdiv@dividend 0003  
                                             _ADUTHL 0F67                                               _ADSTPT 0F63  
                                             _ANSELA 0F0C                                               ?_putch 0001  
                                             _ANSELB 0F14                                               _ANSELC 0F1C  
                                             _ANSELD 0F21                                               _ANSELE 0F29  
                                             _T0CON0 0FD4                                               _T0CON1 0FD5  
                                             _RC1REG 0F98                                               _RC1STA 0F9C  
                                             _ODCONA 0F0A                                               _ODCONB 0F12  
                                             _RC6PPS 0EF8                                               _ODCONC 0F1A  
                                             _ODCOND 0F1F                                               _ODCONE 0F27  
                                             i2l2231 0012                                               i2l2241 0062  
                                             i2l2233 0022                                               i2l2243 0078  
                                             i2l2235 0030                                               i2l2245 0086  
                                             i2l2237 0046                                               i2l2239 0054  
                                             i2l1953 0F50                                               i2l1961 0C8A  
                                             i2l1963 0C9E                                               i2l1955 0ECE  
                                             i2l1957 0EDC                                               i2l1965 0C52  
                                             i2l1959 0C86                                               i2l1967 0C56  
                                             i2l1969 0C6A                                               _INLVLA 0F08  
                                             _INLVLB 0F10                                               _INLVLC 0F18  
                                             _INLVLD 0F1D                                               _INLVLE 0F25  
                                             _OSCFRQ 0ED9                                        vfpfcnvrt@done 0014  
                                             _RX1PPS 0EB0                                               _TX1REG 0F99  
                                             _TX1STA 0F9D                                               _Timer0 FF33  
                                             _Timer4 FF45                                         vfprintf@cfmt 0021  
                                       ?_TMR0_Reload 0003                                    _ADCC_ThresholdISR 0C86  
                                  __end_of_TMR0_Stop 0F5A                                            ??___awdiv 0007  
                                          ??___awmod 0007                                    __end_of_TMR4_Stop 0F5E  
                                   ?_TMR0_Initialize 0001                                   ?_ADCC_ThresholdISR 0001  
                            __end_of_TMR4_Initialize 0CEA                                               clear_0 0DA0  
                                             clear_1 0DAC                                     ___awdiv@quotient 0009  
                                    ___awmod@divisor 0005                                               isa$std 0001  
                                    ___awmod@counter 0007                                               _printf 0E1E  
                                   ?_ApplicationTask 0001                                    ?_CLOCK_Initialize 0001  
              __end_of_TMR4_OverflowCallbackRegister 0EFC                        _TMR4_OverflowCallbackRegister 0EEE  
                                    _ADCC_Initialize 0A8A                                    ?_ADCUserInterrupt 0001  
                                             fputc@c 0005                         _INT2_DefaultInterruptHandler 0000  
                                 ??_CLOCK_Initialize 0003                                  ??_ADCC_ThresholdISR 0001  
                                       __mediumconst FEEA                                   ??_ADCUserInterrupt 0001  
                                             tblptrh 0FF7                                               tblptrl 0FF6  
                                             tblptru 0FF8         __end_of_EUSART1_OverrunErrorCallbackRegister 0DDE  
             ??_EUSART1_OverrunErrorCallbackRegister 0006                ?_EUSART1_OverrunErrorCallbackRegister 0003  
               _EUSART1_OverrunErrorCallbackRegister 0DBC                                     __end_of_vfprintf 0B9A  
                                    ??_EUSART1_Write 0003             INT2_SetInterruptHandler@InterruptHandler 0003  
           INT1_SetInterruptHandler@InterruptHandler 0003             INT0_SetInterruptHandler@InterruptHandler 0003  
       ADCC_SetADTIInterruptHandler@InterruptHandler 0003                                     ?_PIN_MANAGER_IOC 0001  
                                    _ADCC_SetChannel 0F3C                                    _SYSTEM_Initialize 0E00  
                                         __accesstop 0060                              __end_of__initialization 0DB2  
                                 ?_SYSTEM_Initialize 0001                                        ___rparam_used 0001  
                                      __end_of_UART1 FF33                            __end_of_ADCC_ThresholdISR 0CBA  
                                     __pcstackCOMRAM 0001                                  ??_SYSTEM_Initialize 0006  
                                          ?_TMR4_ISR 0001                                        __end_of_fputc 085E  
                                      __end_of_putch 0E5A                     __end_of_INT2_SetInterruptHandler 0F0A  
                                            ??_fputc 0009                            __end_of_SYSTEM_Initialize 0E1E  
                                            ??_putch 0004                                           __pbssBANK0 0060  
                              _INT0_InterruptHandler 003E                                           __pnvCOMRAM 004E  
                              _TMR0_OverflowCallback 0032           __end_of_ADCC_HasErrorCrossedLowerThreshold 0ECE  
               ??_ADCC_HasErrorCrossedLowerThreshold 0003                  ?_ADCC_HasErrorCrossedLowerThreshold 0001  
                 _ADCC_HasErrorCrossedLowerThreshold 0EBA                                           ??_TMR4_ISR 0001  
                            __end_of_ADCC_Initialize 0AF4                                              _ADFLTRH 0F6E  
                                            _ADFLTRL 0F6D                                              _ADPREVH 0F5D  
                                            _ADPREVL 0F5C                 __end_of_ADCC_SetADTIInterruptHandler 0F34  
                       _ADCC_SetADTIInterruptHandler 0F26                                     _EUSART1_IsTxDone 0000  
                                   ?_TMR4_Initialize 0001                               _EUSART1_IsTxReady$1490 0003  
                                            _ADSTPTH 0F64                                              _ADSTPTL 0F63  
                                            ?_printf 0023                                     _EUSART1_ErrorGet 0000  
                                            _T4INPPS 0EA7                           ??_INT1_SetInterruptHandler 0006  
                            __end_of_ADCC_SetChannel 0F44                                              _SP1BRGH 0F9B  
                                            _SP1BRGL 0F9A                                              _OSCCON1 0ED3  
                                            _OSCCON3 0ED5                                              i2u40_48 0C70  
                                            i2u40_49 0C84                                              i2u36_40 0EDC  
                                            i2u36_41 0ED8                                              i2u37_40 0C9E  
                                            i2u37_41 0C9A                                              _OSCTUNE 0ED8  
                                            i2u38_48 0CA4                                              i2u39_40 0C6A  
                                            i2u38_49 0CB8                                              i2u39_41 0C66  
                                            i2u83_40 0022                                              i2u83_41 001E  
                                            i2u84_40 0030                                              i2u84_41 002C  
                                       ??_TMR0_Start 0003                                              i2u85_40 0046  
                                            i2u85_41 0042                                              i2u86_40 0054  
                                            i2u86_41 0050                                              i2u87_40 0062  
                                            i2u87_41 005E                                              i2u88_40 0078  
                                            i2u88_41 0074                                              i2u89_40 0086  
                                            i2u89_41 0082                                              _SLRCONA 0F09  
                                            _SLRCONB 0F11                                              _SLRCONC 0F19  
                                            _SLRCOND 0F1E                                              _SLRCONE 0F26  
                     ?_TMR4_OverflowCallbackRegister 0003                                         ??_TMR4_Start 0003  
         __end_of_ADCC_HasErrorCrossedUpperThreshold 0EBA                 ??_ADCC_HasErrorCrossedUpperThreshold 0003  
                ?_ADCC_HasErrorCrossedUpperThreshold 0001                   _ADCC_HasErrorCrossedUpperThreshold 0EA6  
                          ?_INT0_SetInterruptHandler 0003                                 _EUSART1_Deinitialize 0000  
                             _EUSART1_TransmitEnable 0000                                              __Hparam 0000  
                                            __Lparam 0000                          __end_of_TMR4_PeriodCountSet 0F50  
                                            ___awdiv 085E                                              ___awmod 09DA  
                                          ?_vfprintf 001C                                   __end_of_TMR0_Start 0F62  
                                            __pcinit 0D9A                                   __end_of_TMR4_Start 0F66  
                                            __ramtop 0F00                                              __ptext0 0AF4  
                                            __ptext1 0E00                                              __ptext2 0CBA  
                                            __ptext3 0EE0                                              __ptext4 0EEE  
                                            __ptext5 0D74                                              __ptext6 0922  
                                            __ptext7 0B9A                                              __ptext8 0EFC  
                                            __ptext9 0F0A                        ?_ADCC_SetADTIInterruptHandler 0003  
                                      _basicModeInit 004B                                     ___awmod@dividend 0003  
                                          _T4CONbits 0FB6                                   _EUSART1_Initialize 0BE0  
                           ??_PIN_MANAGER_Initialize 0003                                            _T4HLTbits 0FB7  
      TMR4_OverflowCallbackRegister@InterruptHandler 0003                                 end_of_initialization 0DB2  
                           _INT2_SetInterruptHandler 0EFC                                  ?_EUSART1_Initialize 0001  
                                          _T4RSTbits 0FB9                                              fputc@fp 0007  
                        _EUSART1_OverrunErrorHandler 002C             __end_of_ADCC_Initialize_BurstAverageMode 0D1A  
                 ??_ADCC_Initialize_BurstAverageMode 0003                    ?_ADCC_Initialize_BurstAverageMode 0001  
                   _ADCC_Initialize_BurstAverageMode 0CEA                                    __end_of_vfpfcnvrt 0794  
                                            postdec2 0FDD                                              postinc0 0FEE  
                                            postinc1 0FE6                                              postinc2 0FDE  
                                   vfpfcnvrt@convarg 0017                                     ?_ADCC_Initialize 0001  
                                         ??_vfprintf 0021                                 ??_EUSART1_Initialize 0006  
                              _INT1_InterruptHandler 003B                                            _TMR0_Stop 0F56  
                                          _PORTCbits 0F8E                                            _TMR4_Stop 0F5A  
              __end_of_TMR0_OverflowCallbackRegister 0EEE                        _TMR0_OverflowCallbackRegister 0EE0  
                                   ?_ADCC_SetChannel 0001         TMR0_OverflowCallbackRegister@CallbackHandler 0003  
                                EUSART1_Write@txData 0003                                         _EUSART1_Read 0000  
               __end_of_TMR0_DefaultOverflowCallback 0F68                         _TMR0_DefaultOverflowCallback 0F66  
                                     __end_of_Timer0 FF45                                       __end_of_Timer4 FF57  
                       __end_of_INTERRUPT_Initialize 0BE0                         _INT0_DefaultInterruptHandler 0000  
                                        vfpfcnvrt@ap 0011                                          vfpfcnvrt@cp 0015  
                                        vfpfcnvrt@fp 000E                                           ?_TMR0_Stop 0001  
                                         ?_TMR4_Stop 0001                                       __end_of_printf 0E3C  
                                start_initialization 0D9A                                          __end_of_abs 0C52  
                                        putch@txData 0004                                __end_of_EUSART1_Write 0F3C  
                __end_of_ADCC_Initialize_AverageMode 0D4A                          _ADCC_Initialize_AverageMode 0D1A  
                      ?_TMR0_DefaultOverflowCallback 0001                                          vfprintf@fmt 001E  
                         ?_ADCC_Initialize_BasicMode 0001                        ??_ADCC_Initialize_AverageMode 0003  
                                           ??_printf 002B                                          __pbssCOMRAM 002C  
                   __end_of_INT0_SetInterruptHandler 0F26                       ?_TMR0_OverflowCallbackRegister 0003  
                              _INT2_InterruptHandler 0038                               _PIN_MANAGER_Initialize 0922  
                    ??_TMR4_OverflowCallbackRegister 0006                                            __pintcode 0008  
                                      __pmediumconst FEEA                    __end_of_ADCC_Initialize_BasicMode 0EA6  
                                           ?___awdiv 0003                                             ?___awmod 0003  
                                        _avgModeInit 004A                         ??_INTERRUPT_InterruptManager 0001  
                                        ??_TMR0_Stop 0003                                          ??_TMR4_Stop 0003  
                                           _BAUD1CON 0F9E                           ??_INT2_SetInterruptHandler 0006  
                                  _EUSART1_IsRxReady 0000                                    _EUSART1_IsTxReady 0D4A  
                                 ?_EUSART1_IsTxReady 0001                                             _T4CLKCON 0FB8  
                               _INTERRUPT_Initialize 0B9A                                     _CLOCK_Initialize 0E76  
                                  ??_TMR0_Initialize 0006                                             _LATAbits 0F82  
                                   _ADCUserInterrupt 0F50                                    ??_ApplicationTask 002C  
                                ??_EUSART1_IsTxReady 0003                            ?_INT1_SetInterruptHandler 0003  
                                           _PIE0bits 0EBD                                             _PIE1bits 0EBE  
                                           _PIE4bits 0EC1                                             _PIR0bits 0EC5  
                                           _PIR1bits 0EC6                                             _PIR3bits 0EC8  
                                           _PIR4bits 0EC9                                        ??_TMR0_Reload 0005  
                                           _TMR4_ISR 0C52                                    ??_PIN_MANAGER_IOC 0001  
                     ??_TMR0_DefaultOverflowCallback 0001                                            _vfpfcnvrt 05A8  
                       __end_of_ADCC_DefaultADTI_ISR 0F6E                                           _ADCON0bits 0F5B  
                                         _ADCON1bits 0F54                                           _ADCON2bits 0F55  
                                         _ADCON3bits 0F56                            __end_of_EUSART1_IsTxReady 0D74  
                                   _burstAvgModeInit 0049                                           vfpfcnvrt@c 001B  
                              ?_INTERRUPT_Initialize 0001                             _INT0_SetInterruptHandler 0F18  
                                _EUSART1_AutoBaudSet 0000                              _EUSART1_TransmitDisable 0000  
                                         _ADSTATbits 0F60            __end_of_ADCC_Initialize_LowPassFilterMode 0E76  
                ??_ADCC_Initialize_LowPassFilterMode 0003                   ?_ADCC_Initialize_LowPassFilterMode 0001  
                  _ADCC_Initialize_LowPassFilterMode 0E5A                                             __Hrparam 0000  
                                         vfprintf@ap 0020                                             __Lrparam 0000  
                                         vfprintf@fp 001C                                          _lpfModeInit 0048  
                                         ?_vfpfcnvrt 000E                                  __end_of_TMR0_Reload 0F4A  
                _EUSART1_DefaultFramingErrorCallback 0000                                           _T0CON0bits 0FD4  
                                           __ptext10 0F18                                             __ptext11 0BE0  
                                           __ptext20 05A8                                             __ptext12 0DBC  
                                           __ptext21 0794                                             __ptext13 0DDE  
                                           __ptext30 0F5E                                             __ptext22 0E3C  
                                           __ptext14 0E76                                             __ptext31 0F62  
                                           __ptext23 0F34                                             __ptext15 0A8A  
                                           __ptext40 0EBA                                             __ptext32 0F44  
                                           __ptext24 0D4A                                             __ptext16 0F26  
                                           __ptext33 0F4A                                             __ptext25 0C1E  
                                           __ptext17 0000                                             __ptext42 0C52  
                                           __ptext34 0F3C                                             __ptext26 09DA  
                                           __ptext18 0E1E                                             __ptext43 0ECE  
                                           __ptext35 0E5A                                             __ptext27 085E  
                                           __ptext19 0B50                                             __ptext44 0F66  
                                           __ptext36 0CEA                                             __ptext28 0F56  
                                           __ptext45 0F68                                             __ptext37 0E8E  
                                           __ptext29 0F5A                                             __ptext46 0F6A  
                                           __ptext38 0D1A                                             __ptext47 0C86  
                                           __ptext39 0EA6                                             __ptext48 0F6C  
                                           __ptext49 0F50                                    ??_TMR4_Initialize 0006  
                                         _RC1STAbits 0F9C                                             isa$xinst 0000  
                        ??_ADCC_Initialize_BasicMode 0003                                             int$flags 0051  
                                           _vfprintf 0B50                   __end_of_INTERRUPT_InterruptManager 009A  
                         _INTERRUPT_InterruptManager 0008                                            printf@fmt 0023  
                        _EUSART1_FramingErrorHandler 002F                         _INT1_DefaultInterruptHandler 0000  
               __end_of_TMR4_DefaultOverflowCallback 0F6A                         _TMR4_DefaultOverflowCallback 0F68  
                                         _INTCONbits 0FF2                               ??_INTERRUPT_Initialize 0006  
                                  _TMR4UserInterrupt 0ECE                                   ?_TMR4UserInterrupt 0001  
                                           intlevel2 0000                         TMR4_PeriodCountSet@periodVal 0003  
                            ?_PIN_MANAGER_Initialize 0001                                 _ADCC_DefaultADTI_ISR 0F6C  
                                ??_TMR4UserInterrupt 0001                      ??_TMR0_OverflowCallbackRegister 0006  
                                        _TMR0_Reload 0F44                                             printf@ap 002B  
                                        ??_vfpfcnvrt 0012                                   _eusart1RxLastError 0045  
                           __end_of_CLOCK_Initialize 0E8E                             __end_of_ADCUserInterrupt 0F56  
                                    _TMR0_Initialize 0D74                            __end_of_TMR4UserInterrupt 0EE0  
                      ?_TMR4_DefaultOverflowCallback 0001                     __end_of_INT1_SetInterruptHandler 0F18  
                _EUSART1_DefaultOverrunErrorCallback 0000                                      _ApplicationTask 0000  
                          _ADCC_Initialize_BasicMode 0E8E                                           _TMR0_Tasks 0000  
                                         _TMR0_Start 0F5E                                           _TX1STAbits 0F9D  
                                         _TMR4_Start 0F62                       ??_ADCC_SetADTIInterruptHandler 0006  
                     __end_of_PIN_MANAGER_Initialize 09DA                                    ??_ADCC_Initialize 0006  
                              ?_ADCC_DefaultADTI_ISR 0001                                _TMR4_OverflowCallback 0035  
                                    _PIN_MANAGER_IOC 0F6A                                  _TMR4_PeriodCountSet 0F4A  
                                  ??_ADCC_SetChannel 0003  
