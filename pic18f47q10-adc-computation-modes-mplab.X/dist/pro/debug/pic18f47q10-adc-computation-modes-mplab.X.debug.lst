

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Jan 24 11:35:39 2024

Microchip MPLAB XC8 C Compiler v2.46 (Pro license) build 20240104201356 Og9s 
     1                           	processor	18F47Q10
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	plic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    64                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    65                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    66                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    67                           	psect	pa_nodes0,global,class=CODE,delta=1
    68   000000                     
    69                           ; Generated 18/12/2023 GMT
    70                           ; 
    71                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    72                           ; All rights reserved.
    73                           ; 
    74                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    75                           ; 
    76                           ; Redistribution and use in source and binary forms, with or without modification, are
    77                           ; permitted provided that the following conditions are met:
    78                           ; 
    79                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    80                           ;        conditions and the following disclaimer.
    81                           ; 
    82                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    83                           ;        of conditions and the following disclaimer in the documentation and/or other
    84                           ;        materials provided with the distribution. Publication is not required when
    85                           ;        this file is used in an embedded application.
    86                           ; 
    87                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    88                           ;        software without specific prior written permission.
    89                           ; 
    90                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    91                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    92                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    93                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    94                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    95                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    96                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    97                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    98                           ; 
    99                           ; 
   100                           ; Code-generator required, PIC18F47Q10 Definitions
   101                           ; 
   102                           ; SFR Addresses
   103   000000                     
   104 ;; Function _INT0_DefaultInterruptHandler is unused but had its address taken
   105   000000                     
   106 ;; Function _INT1_DefaultInterruptHandler is unused but had its address taken
   107   000000                     
   108 ;; Function _INT2_DefaultInterruptHandler is unused but had its address taken
   109   000000                     
   110 ;; Function _TMR0_Tasks is unused but had its address taken
   111   000000                     
   112 ;; Function _EUSART1_Deinitialize is unused but had its address taken
   113   000000                     
   114 ;; Function _EUSART1_TransmitEnable is unused but had its address taken
   115   000000                     
   116 ;; Function _EUSART1_TransmitDisable is unused but had its address taken
   117   000000                     
   118 ;; Function _EUSART1_AutoBaudSet is unused but had its address taken
   119   000000                     
   120 ;; Function _EUSART1_AutoBaudQuery is unused but had its address taken
   121   000000                     
   122 ;; Function _EUSART1_IsRxReady is unused but had its address taken
   123   000000                     
   124 ;; Function _EUSART1_IsTxDone is unused but had its address taken
   125   000000                     
   126 ;; Function _EUSART1_ErrorGet is unused but had its address taken
   127   000000                     
   128 ;; Function _EUSART1_Read is unused but had its address taken
   129   000000                     
   130 ;; Function _EUSART1_DefaultFramingErrorCallback is unused but had its address taken
   131   000000                     
   132 ;; Function _EUSART1_DefaultOverrunErrorCallback is unused but had its address taken
   133   000000                     
   134                           	psect	idataCOMRAM
   135   01095C                     __pidataCOMRAM:
   136                           	callstack 0
   137                           
   138                           ;initializer for _Timer0
   139   01095C  7A                 	db	low _TMR0_Initialize
   140   01095D  08                 	db	high _TMR0_Initialize
   141   01095E  01                 	db	low (_TMR0_Initialize shr (0+16))
   142   01095F  22                 	db	low _TMR0_Start
   143   010960  0A                 	db	high _TMR0_Start
   144   010961  01                 	db	low (_TMR0_Start shr (0+16))
   145   010962  1A                 	db	low _TMR0_Stop
   146   010963  0A                 	db	high _TMR0_Stop
   147   010964  01                 	db	low (_TMR0_Stop shr (0+16))
   148   010965  F6                 	db	low _TMR0_Reload
   149   010966  09                 	db	high _TMR0_Reload
   150   010967  01                 	db	low (_TMR0_Reload shr (0+16))
   151   010968  B2                 	db	low _TMR0_OverflowCallbackRegister
   152   010969  09                 	db	high _TMR0_OverflowCallbackRegister
   153   01096A  01                 	db	low (_TMR0_OverflowCallbackRegister shr (0+16))
   154   01096B  00                 	db	0
   155   01096C  00                 	db	0
   156   01096D  00                 	db	0
   157                           
   158                           	psect	mediumconst
   159   00FEFC                     __pmediumconst:
   160                           	callstack 0
   161   00FEFC  00                 	db	0
   162   00FEFD                     _UART1:
   163                           	callstack 0
   164   00FEFD  D4                 	db	low _EUSART1_Initialize
   165   00FEFE  07                 	db	high _EUSART1_Initialize
   166   00FEFF  01                 	db	low (_EUSART1_Initialize shr (0+16))
   167   00FF00  00                 	db	0
   168   00FF01  00                 	db	0
   169   00FF02  00                 	db	0
   170   00FF03  00                 	db	0
   171   00FF04  00                 	db	0
   172   00FF05  00                 	db	0
   173   00FF06  E6                 	db	low _EUSART1_Write
   174   00FF07  09                 	db	high _EUSART1_Write
   175   00FF08  01                 	db	low (_EUSART1_Write shr (0+16))
   176   00FF09  00                 	db	0
   177   00FF0A  00                 	db	0
   178   00FF0B  00                 	db	0
   179   00FF0C  80                 	db	low _EUSART1_IsTxReady
   180   00FF0D  09                 	db	high _EUSART1_IsTxReady
   181   00FF0E  01                 	db	low (_EUSART1_IsTxReady shr (0+16))
   182   00FF0F  00                 	db	0
   183   00FF10  00                 	db	0
   184   00FF11  00                 	db	0
   185   00FF12  00                 	db	0
   186   00FF13  00                 	db	0
   187   00FF14  00                 	db	0
   188   00FF15  00                 	db	0
   189   00FF16  00                 	db	0
   190   00FF17  00                 	db	0
   191   00FF18  00                 	db	0
   192   00FF19  00                 	db	0
   193   00FF1A  00                 	db	0
   194   00FF1B  00                 	db	0
   195   00FF1C  00                 	db	0
   196   00FF1D  00                 	db	0
   197   00FF1E  00                 	db	0
   198   00FF1F  00                 	db	0
   199   00FF20  00                 	db	0
   200   00FF21  00                 	db	0
   201   00FF22  00                 	db	0
   202   00FF23  00                 	db	0
   203   00FF24  00                 	db	0
   204   00FF25  00                 	db	0
   205   00FF26  00                 	db	0
   206   00FF27  00                 	db	0
   207   00FF28  00                 	db	0
   208   00FF29  00                 	db	0
   209   00FF2A  00                 	db	0
   210   00FF2B  00                 	db	0
   211   00FF2C  00                 	db	0
   212   00FF2D  00                 	db	0
   213   00FF2E  00                 	db	0
   214   00FF2F  00                 	db	0
   215   00FF30  00                 	db	0
   216   00FF31  00                 	db	0
   217   00FF32  00                 	db	0
   218   00FF33  00                 	db	0
   219   00FF34  00                 	db	0
   220   00FF35  00                 	db	0
   221   00FF36  00                 	db	0
   222   00FF37  00                 	db	0
   223   00FF38  00                 	db	0
   224   00FF39  2C                 	db	low _EUSART1_FramingErrorCallbackRegister
   225   00FF3A  09                 	db	high _EUSART1_FramingErrorCallbackRegister
   226   00FF3B  01                 	db	low (_EUSART1_FramingErrorCallbackRegister shr (0+16))
   227   00FF3C  14                 	db	low _EUSART1_OverrunErrorCallbackRegister
   228   00FF3D  09                 	db	high _EUSART1_OverrunErrorCallbackRegister
   229   00FF3E  01                 	db	low (_EUSART1_OverrunErrorCallbackRegister shr (0+16))
   230   00FF3F  00                 	db	0
   231   00FF40  00                 	db	0
   232   00FF41  00                 	db	0
   233   00FF42  00                 	db	0
   234   00FF43  00                 	db	0
   235   00FF44  00                 	db	0
   236   00FF45                     __end_of_UART1:
   237                           	callstack 0
   238   00FF45                     _Timer4:
   239                           	callstack 0
   240   00FF45  00                 	db	low _TMR4_Initialize
   241   00FF46  08                 	db	high _TMR4_Initialize
   242   00FF47  01                 	db	low (_TMR4_Initialize shr (0+16))
   243   00FF48  26                 	db	low _TMR4_Start
   244   00FF49  0A                 	db	high _TMR4_Start
   245   00FF4A  01                 	db	low (_TMR4_Start shr (0+16))
   246   00FF4B  1E                 	db	low _TMR4_Stop
   247   00FF4C  0A                 	db	high _TMR4_Stop
   248   00FF4D  01                 	db	low (_TMR4_Stop shr (0+16))
   249   00FF4E  FC                 	db	low _TMR4_PeriodCountSet
   250   00FF4F  09                 	db	high _TMR4_PeriodCountSet
   251   00FF50  01                 	db	low (_TMR4_PeriodCountSet shr (0+16))
   252   00FF51  C0                 	db	low _TMR4_OverflowCallbackRegister
   253   00FF52  09                 	db	high _TMR4_OverflowCallbackRegister
   254   00FF53  01                 	db	low (_TMR4_OverflowCallbackRegister shr (0+16))
   255   00FF54  00                 	db	0
   256   00FF55  00                 	db	0
   257   00FF56  00                 	db	0
   258   00FF57                     __end_of_Timer4:
   259                           	callstack 0
   260   000000                     _TX1REG	set	3993
   261   000000                     _SP1BRGH	set	3995
   262   000000                     _TX1STA	set	3997
   263   000000                     _T0CON0	set	4052
   264   000000                     _T0CON1	set	4053
   265   000000                     _T4CON	set	4022
   266   000000                     _OSCTUNE	set	3800
   267   000000                     _OSCFRQ	set	3801
   268   000000                     _IOCEF	set	3874
   269   000000                     _IOCEN	set	3875
   270   000000                     _IOCEP	set	3876
   271   000000                     _IOCCF	set	3861
   272   000000                     _IOCCN	set	3862
   273   000000                     _IOCCP	set	3863
   274   000000                     _IOCBF	set	3853
   275   000000                     _IOCBN	set	3854
   276   000000                     _IOCBP	set	3855
   277   000000                     _INLVLE	set	3877
   278   000000                     _INLVLD	set	3869
   279   000000                     _INLVLC	set	3864
   280   000000                     _INLVLB	set	3856
   281   000000                     _SLRCONE	set	3878
   282   000000                     _SLRCOND	set	3870
   283   000000                     _SLRCONC	set	3865
   284   000000                     _SLRCONB	set	3857
   285   000000                     _ODCONE	set	3879
   286   000000                     _ODCOND	set	3871
   287   000000                     _ODCONC	set	3866
   288   000000                     _ODCONB	set	3858
   289   000000                     _WPUE	set	3880
   290   000000                     _WPUD	set	3872
   291   000000                     _WPUC	set	3867
   292   000000                     _WPUB	set	3859
   293   000000                     _ANSELE	set	3881
   294   000000                     _ANSELD	set	3873
   295   000000                     _ANSELC	set	3868
   296   000000                     _ANSELB	set	3860
   297   000000                     _ADERRL	set	3945
   298   000000                     _ADERRH	set	3946
   299   000000                     _ADPREVL	set	3932
   300   000000                     _ADPREVH	set	3933
   301   000000                     _ADFLTRL	set	3949
   302   000000                     _ADFLTRH	set	3950
   303   000000                     _ADACCL	set	3947
   304   000000                     _ADACCH	set	3948
   305   000000                     _ADCNT	set	3938
   306   000000                     _ADRESL	set	3934
   307   000000                     _ADRESH	set	3935
   308   000000                     _ADACQ	set	3927
   309   000000                     _ADCON0	set	3931
   310   000000                     _ADCLK	set	3922
   311   000000                     _ADSTAT	set	3936
   312   000000                     _ADCON3	set	3926
   313   000000                     _ADCON2	set	3925
   314   000000                     _ADPRE	set	3929
   315   000000                     _ADSTPTH	set	3940
   316   000000                     _ADUTHH	set	3944
   317   000000                     _ADUTHL	set	3943
   318   000000                     _ADLTHH	set	3942
   319   00FF57                     STR_7:
   320                           
   321                           ; BSR set to: 14
   322   00FF57  42                 	db	66	;'B'
   323   00FF58  75                 	db	117	;'u'
   324   00FF59  72                 	db	114	;'r'
   325   00FF5A  73                 	db	115	;'s'
   326   00FF5B  74                 	db	116	;'t'
   327   00FF5C  20                 	db	32
   328   00FF5D  41                 	db	65	;'A'
   329   00FF5E  56                 	db	86	;'V'
   330   00FF5F  47                 	db	71	;'G'
   331   00FF60  20                 	db	32
   332   00FF61  4D                 	db	77	;'M'
   333   00FF62  6F                 	db	111	;'o'
   334   00FF63  64                 	db	100	;'d'
   335   00FF64  65                 	db	101	;'e'
   336   00FF65  20                 	db	32
   337   00FF66  2D                 	db	45
   338   00FF67  20                 	db	32
   339   00FF68  41                 	db	65	;'A'
   340   00FF69  44                 	db	68	;'D'
   341   00FF6A  46                 	db	70	;'F'
   342   00FF6B  4C                 	db	76	;'L'
   343   00FF6C  54                 	db	84	;'T'
   344   00FF6D  3D                 	db	61	;'='
   345   00FF6E  25                 	db	37
   346   00FF6F  64                 	db	100	;'d'
   347   00FF70  20                 	db	32
   348   00FF71  2D                 	db	45
   349   00FF72  20                 	db	32
   350   00FF73  53                 	db	83	;'S'
   351   00FF74  50                 	db	80	;'P'
   352   00FF75  3D                 	db	61	;'='
   353   00FF76  25                 	db	37
   354   00FF77  64                 	db	100	;'d'
   355   00FF78  20                 	db	32
   356   00FF79  2D                 	db	45
   357   00FF7A  20                 	db	32
   358   00FF7B  4C                 	db	76	;'L'
   359   00FF7C  54                 	db	84	;'T'
   360   00FF7D  3D                 	db	61	;'='
   361   00FF7E  25                 	db	37
   362   00FF7F  64                 	db	100	;'d'
   363   00FF80  20                 	db	32
   364   00FF81  2D                 	db	45
   365   00FF82  20                 	db	32
   366   00FF83  4C                 	db	76	;'L'
   367   00FF84  54                 	db	84	;'T'
   368   00FF85  20                 	db	32
   369   00FF86  43                 	db	67	;'C'
   370   00FF87  72                 	db	114	;'r'
   371   00FF88  6F                 	db	111	;'o'
   372   00FF89  73                 	db	115	;'s'
   373   00FF8A  73                 	db	115	;'s'
   374   00FF8B  65                 	db	101	;'e'
   375   00FF8C  64                 	db	100	;'d'
   376   00FF8D  0D                 	db	13
   377   00FF8E  0A                 	db	10
   378   00FF8F  00                 	db	0
   379   00FF90                     STR_6:
   380                           
   381                           ; BSR set to: 14
   382   00FF90  42                 	db	66	;'B'
   383   00FF91  75                 	db	117	;'u'
   384   00FF92  72                 	db	114	;'r'
   385   00FF93  73                 	db	115	;'s'
   386   00FF94  74                 	db	116	;'t'
   387   00FF95  20                 	db	32
   388   00FF96  41                 	db	65	;'A'
   389   00FF97  56                 	db	86	;'V'
   390   00FF98  47                 	db	71	;'G'
   391   00FF99  20                 	db	32
   392   00FF9A  4D                 	db	77	;'M'
   393   00FF9B  6F                 	db	111	;'o'
   394   00FF9C  64                 	db	100	;'d'
   395   00FF9D  65                 	db	101	;'e'
   396   00FF9E  20                 	db	32
   397   00FF9F  2D                 	db	45
   398   00FFA0  20                 	db	32
   399   00FFA1  41                 	db	65	;'A'
   400   00FFA2  44                 	db	68	;'D'
   401   00FFA3  46                 	db	70	;'F'
   402   00FFA4  4C                 	db	76	;'L'
   403   00FFA5  54                 	db	84	;'T'
   404   00FFA6  3D                 	db	61	;'='
   405   00FFA7  25                 	db	37
   406   00FFA8  64                 	db	100	;'d'
   407   00FFA9  20                 	db	32
   408   00FFAA  2D                 	db	45
   409   00FFAB  20                 	db	32
   410   00FFAC  53                 	db	83	;'S'
   411   00FFAD  50                 	db	80	;'P'
   412   00FFAE  3D                 	db	61	;'='
   413   00FFAF  25                 	db	37
   414   00FFB0  64                 	db	100	;'d'
   415   00FFB1  20                 	db	32
   416   00FFB2  2D                 	db	45
   417   00FFB3  20                 	db	32
   418   00FFB4  55                 	db	85	;'U'
   419   00FFB5  54                 	db	84	;'T'
   420   00FFB6  3D                 	db	61	;'='
   421   00FFB7  25                 	db	37
   422   00FFB8  64                 	db	100	;'d'
   423   00FFB9  20                 	db	32
   424   00FFBA  2D                 	db	45
   425   00FFBB  20                 	db	32
   426   00FFBC  55                 	db	85	;'U'
   427   00FFBD  54                 	db	84	;'T'
   428   00FFBE  20                 	db	32
   429   00FFBF  43                 	db	67	;'C'
   430   00FFC0  72                 	db	114	;'r'
   431   00FFC1  6F                 	db	111	;'o'
   432   00FFC2  73                 	db	115	;'s'
   433   00FFC3  73                 	db	115	;'s'
   434   00FFC4  65                 	db	101	;'e'
   435   00FFC5  64                 	db	100	;'d'
   436   00FFC6  0D                 	db	13
   437   00FFC7  0A                 	db	10
   438   00FFC8  00                 	db	0
   439   00FFC9                     STR_5:
   440                           
   441                           ; BSR set to: 14
   442   00FFC9  42                 	db	66	;'B'
   443   00FFCA  75                 	db	117	;'u'
   444   00FFCB  72                 	db	114	;'r'
   445   00FFCC  73                 	db	115	;'s'
   446   00FFCD  74                 	db	116	;'t'
   447   00FFCE  20                 	db	32
   448   00FFCF  41                 	db	65	;'A'
   449   00FFD0  56                 	db	86	;'V'
   450   00FFD1  47                 	db	71	;'G'
   451   00FFD2  20                 	db	32
   452   00FFD3  4D                 	db	77	;'M'
   453   00FFD4  6F                 	db	111	;'o'
   454   00FFD5  64                 	db	100	;'d'
   455   00FFD6  65                 	db	101	;'e'
   456   00FFD7  20                 	db	32
   457   00FFD8  2D                 	db	45
   458   00FFD9  20                 	db	32
   459   00FFDA  41                 	db	65	;'A'
   460   00FFDB  44                 	db	68	;'D'
   461   00FFDC  46                 	db	70	;'F'
   462   00FFDD  4C                 	db	76	;'L'
   463   00FFDE  54                 	db	84	;'T'
   464   00FFDF  3D                 	db	61	;'='
   465   00FFE0  25                 	db	37
   466   00FFE1  64                 	db	100	;'d'
   467   00FFE2  20                 	db	32
   468   00FFE3  0D                 	db	13
   469   00FFE4  0A                 	db	10
   470   00FFE5  00                 	db	0
   471   00FFE6                     STR_1:
   472                           
   473                           ; BSR set to: 14
   474   00FFE6  42                 	db	66	;'B'
   475   00FFE7  61                 	db	97	;'a'
   476   00FFE8  73                 	db	115	;'s'
   477   00FFE9  69                 	db	105	;'i'
   478   00FFEA  63                 	db	99	;'c'
   479   00FFEB  20                 	db	32
   480   00FFEC  4D                 	db	77	;'M'
   481   00FFED  6F                 	db	111	;'o'
   482   00FFEE  64                 	db	100	;'d'
   483   00FFEF  65                 	db	101	;'e'
   484   00FFF0  20                 	db	32
   485   00FFF1  2D                 	db	45
   486   00FFF2  20                 	db	32
   487   00FFF3  41                 	db	65	;'A'
   488   00FFF4  44                 	db	68	;'D'
   489   00FFF5  52                 	db	82	;'R'
   490   00FFF6  45                 	db	69	;'E'
   491   00FFF7  53                 	db	83	;'S'
   492   00FFF8  3D                 	db	61	;'='
   493   00FFF9  25                 	db	37
   494   00FFFA  64                 	db	100	;'d'
   495   00FFFB  20                 	db	32
   496   00FFFC  0D                 	db	13
   497   00FFFD  0A                 	db	10
   498   00FFFE  00                 	db	0
   499   00FFFF  00                 	db	0	; dummy byte at the end
   500   000000                     
   501                           	psect	nvCOMRAM
   502   000052                     __pnvCOMRAM:
   503                           	callstack 0
   504   000052                     _ADCC_ADTI_InterruptHandler:
   505                           	callstack 0
   506   000052                     	ds	3
   507   000000                     _ADRES	set	3934
   508   000000                     _ADLTH	set	3941
   509   000000                     _ADUTH	set	3943
   510   000000                     _ADSTPT	set	3939
   511   000000                     _ADFLTR	set	3949
   512   000000                     _LATAbits	set	3970
   513   000000                     _BAUD1CONbits	set	3998
   514   000000                     _TX1STAbits	set	3997
   515   000000                     _RC1STAbits	set	3996
   516   000000                     _T0CON0bits	set	4052
   517   000000                     _PR4	set	4021
   518   000000                     _T4CONbits	set	4022
   519   000000                     _ADSTATbits	set	3936
   520   000000                     _T4INPPS	set	3751
   521   000000                     _RX1PPS	set	3760
   522   000000                     _PIE1bits	set	3774
   523   000000                     _PIR1bits	set	3782
   524   000000                     _ADACT	set	3921
   525   000000                     _ADREF	set	3923
   526   000000                     _ADCON1	set	3924
   527   000000                     _ADCAP	set	3928
   528   000000                     _ADPCH	set	3930
   529   000000                     _ADRPT	set	3937
   530   000000                     _ADSTPTL	set	3939
   531   000000                     _ADLTHL	set	3941
   532   000000                     _PIR3bits	set	3784
   533   000000                     _PIR4bits	set	3785
   534   000000                     _OSCCON1	set	3795
   535   000000                     _RC6PPS	set	3832
   536   000000                     _INLVLA	set	3848
   537   000000                     _SLRCONA	set	3849
   538   000000                     _ODCONA	set	3850
   539   000000                     _WPUA	set	3851
   540   000000                     _ANSELA	set	3852
   541   000000                     _PIE4bits	set	3777
   542   000000                     _PIR0bits	set	3781
   543   000000                     _LATA	set	3970
   544   000000                     _PORTCbits	set	3982
   545   000000                     _RC1REG	set	3992
   546   000000                     _SP1BRGL	set	3994
   547   000000                     _RC1STA	set	3996
   548   000000                     _BAUD1CON	set	3998
   549   000000                     _T4TMR	set	4020
   550   000000                     _T4PR	set	4021
   551   000000                     _T4HLT	set	4023
   552   000000                     _T4CLKCON	set	4024
   553   000000                     _INTCONbits	set	4082
   554   000000                     _TRISE	set	3979
   555   000000                     _TRISD	set	3978
   556   000000                     _TRISC	set	3977
   557   000000                     _TRISB	set	3976
   558   000000                     _TRISA	set	3975
   559   000000                     _LATE	set	3974
   560   000000                     _LATD	set	3973
   561   000000                     _LATC	set	3972
   562   000000                     _LATB	set	3971
   563   000000                     _PIE0bits	set	3773
   564   000000                     _IOCAF	set	3845
   565   000000                     _IOCAN	set	3846
   566   000000                     _IOCAP	set	3847
   567   000000                     _OSCCON3	set	3797
   568   000000                     _OSCEN	set	3799
   569   000000                     _TMR0L	set	4050
   570   000000                     _TMR0H	set	4051
   571   000000                     _T4RST	set	4025
   572                           
   573                           ; #config settings
   574                           
   575                           	psect	cinit
   576   010732                     __pcinit:
   577                           	callstack 0
   578   010732                     start_initialization:
   579                           	callstack 0
   580   010732                     __initialization:
   581                           	callstack 0
   582                           
   583                           ; Initialize objects allocated to COMRAM (18 bytes)
   584                           ; load TBLPTR registers with __pidataCOMRAM
   585   010732  0E5C               	movlw	low __pidataCOMRAM
   586   010734  6EF6               	movwf	tblptrl,c
   587   010736  0E09               	movlw	high __pidataCOMRAM
   588   010738  6EF7               	movwf	tblptrh,c
   589   01073A  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
   590   01073C  6EF8               	movwf	tblptru,c
   591   01073E  EE00  F040         	lfsr	0,__pdataCOMRAM
   592   010742  EE10 F012          	lfsr	1,18
   593   010746                     copy_data0:
   594   010746  0009               	tblrd		*+
   595   010748  CFF5 FFEE          	movff	tablat,postinc0
   596   01074C  50E5               	movf	postdec1,w,c
   597   01074E  50E1               	movf	fsr1l,w,c
   598   010750  E1FA               	bnz	copy_data0
   599                           
   600                           ; Clear objects allocated to BANK0 (32 bytes)
   601   010752  EE00  F060         	lfsr	0,__pbssBANK0
   602   010756  0E20               	movlw	32
   603   010758                     clear_0:
   604   010758  6AEE               	clrf	postinc0,c
   605   01075A  06E8               	decf	wreg,f,c
   606   01075C  E1FD               	bnz	clear_0
   607                           
   608                           ; Clear objects allocated to COMRAM (20 bytes)
   609   01075E  EE00  F02C         	lfsr	0,__pbssCOMRAM
   610   010762  0E14               	movlw	20
   611   010764                     clear_1:
   612   010764  6AEE               	clrf	postinc0,c
   613   010766  06E8               	decf	wreg,f,c
   614   010768  E1FD               	bnz	clear_1
   615   01076A                     end_of_initialization:
   616                           	callstack 0
   617   01076A                     __end_of__initialization:
   618                           	callstack 0
   619   01076A  9055               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   620   01076C  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   621   01076E  0100               	movlb	0
   622   010770  EF4A  F083         	goto	_main	;jump to C main() function
   623                           
   624                           	psect	bssCOMRAM
   625   00002C                     __pbssCOMRAM:
   626                           	callstack 0
   627   00002C                     _EUSART1_OverrunErrorHandler:
   628                           	callstack 0
   629   00002C                     	ds	3
   630   00002F                     _EUSART1_FramingErrorHandler:
   631                           	callstack 0
   632   00002F                     	ds	3
   633   000032                     _TMR0_OverflowCallback:
   634                           	callstack 0
   635   000032                     	ds	3
   636   000035                     _TMR4_OverflowCallback:
   637                           	callstack 0
   638   000035                     	ds	3
   639   000038                     _eusart1RxLastError:
   640                           	callstack 0
   641   000038                     	ds	2
   642   00003A                     _lpfModeInit:
   643                           	callstack 0
   644   00003A                     	ds	1
   645   00003B                     _burstAvgModeInit:
   646                           	callstack 0
   647   00003B                     	ds	1
   648   00003C                     _avgModeInit:
   649                           	callstack 0
   650   00003C                     	ds	1
   651   00003D                     _basicModeInit:
   652                           	callstack 0
   653   00003D                     	ds	1
   654   00003E                     _adcReadyFlag:
   655                           	callstack 0
   656   00003E                     	ds	1
   657   00003F                     _count:
   658                           	callstack 0
   659   00003F                     	ds	1
   660                           
   661                           	psect	dataCOMRAM
   662   000040                     __pdataCOMRAM:
   663                           	callstack 0
   664   000040                     _Timer0:
   665                           	callstack 0
   666   000040                     	ds	18
   667                           
   668                           	psect	bssBANK0
   669   000060                     __pbssBANK0:
   670                           	callstack 0
   671   000060                     _dbuf:
   672                           	callstack 0
   673   000060                     	ds	32
   674                           
   675                           	psect	cstackCOMRAM
   676   000001                     __pcstackCOMRAM:
   677                           	callstack 0
   678   000001                     ??_INTERRUPT_InterruptManager:
   679   000001                     
   680                           ; 2 bytes @ 0x0
   681   000001                     	ds	2
   682   000003                     ?___awdiv:
   683                           	callstack 0
   684   000003                     ?___awmod:
   685                           	callstack 0
   686   000003                     _EUSART1_IsTxReady$1490:
   687                           	callstack 0
   688   000003                     EUSART1_Write@txData:
   689                           	callstack 0
   690   000003                     ADCC_SetChannel@channel:
   691                           	callstack 0
   692   000003                     TMR4_PeriodCountSet@periodVal:
   693                           	callstack 0
   694   000003                     TMR0_Reload@periodVal:
   695                           	callstack 0
   696   000003                     ___awdiv@dividend:
   697                           	callstack 0
   698   000003                     ___awmod@dividend:
   699                           	callstack 0
   700   000003                     ADCC_SetADTIInterruptHandler@InterruptHandler:
   701                           	callstack 0
   702   000003                     INT0_SetInterruptHandler@InterruptHandler:
   703                           	callstack 0
   704   000003                     INT1_SetInterruptHandler@InterruptHandler:
   705                           	callstack 0
   706   000003                     INT2_SetInterruptHandler@InterruptHandler:
   707                           	callstack 0
   708   000003                     TMR4_OverflowCallbackRegister@InterruptHandler:
   709                           	callstack 0
   710   000003                     TMR0_OverflowCallbackRegister@CallbackHandler:
   711                           	callstack 0
   712   000003                     EUSART1_FramingErrorCallbackRegister@callbackHandler:
   713                           	callstack 0
   714   000003                     EUSART1_OverrunErrorCallbackRegister@callbackHandler:
   715                           	callstack 0
   716                           
   717                           ; 3 bytes @ 0x2
   718   000003                     	ds	1
   719   000004                     putch@txData:
   720                           	callstack 0
   721                           
   722                           ; 1 bytes @ 0x3
   723   000004                     	ds	1
   724   000005                     ___awdiv@divisor:
   725                           	callstack 0
   726   000005                     ___awmod@divisor:
   727                           	callstack 0
   728   000005                     fputc@c:
   729                           	callstack 0
   730                           
   731                           ; 2 bytes @ 0x4
   732   000005                     	ds	1
   733   000006                     
   734                           ; 1 bytes @ 0x5
   735   000006                     	ds	1
   736   000007                     ___awdiv@counter:
   737                           	callstack 0
   738   000007                     ___awmod@counter:
   739                           	callstack 0
   740   000007                     fputc@fp:
   741                           	callstack 0
   742                           
   743                           ; 2 bytes @ 0x6
   744   000007                     	ds	1
   745   000008                     ___awdiv@sign:
   746                           	callstack 0
   747   000008                     ___awmod@sign:
   748                           	callstack 0
   749                           
   750                           ; 1 bytes @ 0x7
   751   000008                     	ds	1
   752   000009                     ??_fputc:
   753   000009                     ?_abs:
   754                           	callstack 0
   755   000009                     ___awdiv@quotient:
   756                           	callstack 0
   757   000009                     abs@a:
   758                           	callstack 0
   759                           
   760                           ; 2 bytes @ 0x8
   761   000009                     	ds	2
   762   00000B                     ??_abs:
   763                           
   764                           ; 1 bytes @ 0xA
   765   00000B                     	ds	3
   766   00000E                     vfpfcnvrt@fp:
   767                           	callstack 0
   768                           
   769                           ; 2 bytes @ 0xD
   770   00000E                     	ds	2
   771   000010                     vfpfcnvrt@fmt:
   772                           	callstack 0
   773                           
   774                           ; 1 bytes @ 0xF
   775   000010                     	ds	1
   776   000011                     vfpfcnvrt@ap:
   777                           	callstack 0
   778                           
   779                           ; 1 bytes @ 0x10
   780   000011                     	ds	1
   781   000012                     ??_vfpfcnvrt:
   782                           
   783                           ; 1 bytes @ 0x11
   784   000012                     	ds	2
   785   000014                     vfpfcnvrt@done:
   786                           	callstack 0
   787                           
   788                           ; 1 bytes @ 0x13
   789   000014                     	ds	1
   790   000015                     vfpfcnvrt@cp:
   791                           	callstack 0
   792                           
   793                           ; 2 bytes @ 0x14
   794   000015                     	ds	2
   795   000017                     vfpfcnvrt@convarg:
   796                           	callstack 0
   797                           
   798                           ; 4 bytes @ 0x16
   799   000017                     	ds	4
   800   00001B                     vfpfcnvrt@c:
   801                           	callstack 0
   802                           
   803                           ; 1 bytes @ 0x1A
   804   00001B                     	ds	1
   805   00001C                     ?_vfprintf:
   806                           	callstack 0
   807   00001C                     vfprintf@fp:
   808                           	callstack 0
   809                           
   810                           ; 2 bytes @ 0x1B
   811   00001C                     	ds	2
   812   00001E                     vfprintf@fmt:
   813                           	callstack 0
   814                           
   815                           ; 2 bytes @ 0x1D
   816   00001E                     	ds	2
   817   000020                     vfprintf@ap:
   818                           	callstack 0
   819                           
   820                           ; 1 bytes @ 0x1F
   821   000020                     	ds	1
   822   000021                     vfprintf@cfmt:
   823                           	callstack 0
   824                           
   825                           ; 2 bytes @ 0x20
   826   000021                     	ds	2
   827   000023                     ?_printf:
   828                           	callstack 0
   829   000023                     printf@fmt:
   830                           	callstack 0
   831                           
   832                           ; 2 bytes @ 0x22
   833   000023                     	ds	8
   834   00002B                     printf@ap:
   835                           	callstack 0
   836                           
   837                           ; 1 bytes @ 0x2A
   838   00002B                     	ds	1
   839   00002C                     
   840                           ; 1 bytes @ 0x2B
   841 ;;
   842 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   843 ;;
   844 ;; *************** function _main *****************
   845 ;; Defined at:
   846 ;;		line 40 in file "main.c"
   847 ;; Parameters:    Size  Location     Type
   848 ;;		None
   849 ;; Auto vars:     Size  Location     Type
   850 ;;		None
   851 ;; Return value:  Size  Location     Type
   852 ;;                  2  717[None  ] int 
   853 ;; Registers used:
   854 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, cstack
   855 ;; Tracked objects:
   856 ;;		On entry : 0/0
   857 ;;		On exit  : 0/0
   858 ;;		Unchanged: 0/0
   859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
   860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   864 ;;Total ram usage:        0 bytes
   865 ;; Hardware stack levels required when called: 10
   866 ;; This function calls:
   867 ;;		_ADCC_SetADTIInterruptHandler
   868 ;;		_ApplicationTask
   869 ;;		_SYSTEM_Initialize
   870 ;;		_TMR0_OverflowCallbackRegister
   871 ;;		_TMR4_OverflowCallbackRegister
   872 ;; This function is called by:
   873 ;;		Startup code after reset
   874 ;; This function uses a non-reentrant model
   875 ;;
   876                           
   877                           	psect	text0
   878   010694                     __ptext0:
   879                           	callstack 0
   880   010694                     _main:
   881                           	callstack 21
   882                           
   883                           ;main.c: 42:     SYSTEM_Initialize();
   884                           
   885                           ;incstack = 0
   886   010694  EC6E  F084         	call	_SYSTEM_Initialize	;wreg free
   887                           
   888                           ; BSR set to: 14
   889                           ;main.c: 49:     (INTCONbits.GIE = 1);
   890   010698  8EF2               	bsf	242,7,c	;volatile
   891                           
   892                           ; BSR set to: 14
   893                           ;main.c: 55:     (INTCONbits.PEIE = 1);
   894   01069A  8CF2               	bsf	242,6,c	;volatile
   895                           
   896                           ;main.c: 60:     ADCC_SetADTIInterruptHandler(ADCUserInterrupt);
   897   01069C  0E14               	movlw	low _ADCUserInterrupt
   898   01069E  6E03               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler^0,c
   899   0106A0  0E0A               	movlw	high _ADCUserInterrupt
   900   0106A2  6E04               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)^0,c
   901   0106A4  0E01               	movlw	low (_ADCUserInterrupt shr (0+16))
   902   0106A6  6E05               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+2)^0,c
   903   0106A8  ECE7  F084         	call	_ADCC_SetADTIInterruptHandler	;wreg free
   904                           
   905                           ; BSR set to: 14
   906                           ;main.c: 61:     Timer4.TimeoutCallbackRegister(TMR4UserInterrupt);
   907   0106AC  0E0E               	movlw	low _TMR4UserInterrupt
   908   0106AE  6E03               	movwf	TMR0_OverflowCallbackRegister@CallbackHandler^0,c
   909   0106B0  0E0A               	movlw	high _TMR4UserInterrupt
   910   0106B2  6E04               	movwf	(TMR0_OverflowCallbackRegister@CallbackHandler+1)^0,c
   911   0106B4  0E01               	movlw	low (_TMR4UserInterrupt shr (0+16))
   912   0106B6  6E05               	movwf	(TMR0_OverflowCallbackRegister@CallbackHandler+2)^0,c
   913   0106B8  0E51               	movlw	low (_Timer4+12)
   914   0106BA  6EF6               	movwf	tblptrl,c
   915   0106BC  0EFF               	movlw	high (_Timer4+12)
   916   0106BE  6EF7               	movwf	tblptrh,c
   917   0106C0                     	if	0	;tblptru may be non-zero
   918   0106C0                     	endif
   919   0106C0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
   920   0106C0  0E00               	movlw	low (__mediumconst shr (0+16))
   921   0106C2  6EF8               	movwf	tblptru,c
   922   0106C4                     	endif
   923   0106C4  D801               	call	u1628
   924   0106C6  D00D               	goto	u1629
   925   0106C8                     u1628:
   926   0106C8  0005               	push	
   927   0106CA  6EFA               	movwf	pclath,c
   928   0106CC  0009               	tblrd		*+
   929   0106CE  50F5               	movf	tablat,w,c
   930   0106D0  6EFD               	movwf	tosl,c
   931   0106D2  0009               	tblrd		*+
   932   0106D4  50F5               	movf	tablat,w,c
   933   0106D6  6EFE               	movwf	tosh,c
   934   0106D8  0009               	tblrd		*+
   935   0106DA  50F5               	movf	tablat,w,c
   936   0106DC  6EFF               	movwf	tosu,c
   937   0106DE  50FA               	movf	pclath,w,c
   938   0106E0  0012               	return		;indir
   939   0106E2                     u1629:
   940                           
   941                           ;main.c: 64:     {;main.c: 65:         ApplicationTask();
   942   0106E2  EC00  F080         	call	_ApplicationTask	;wreg free
   943   0106E6  D7FD               	goto	u1629
   944   0106E8                     __end_of_main:
   945                           	callstack 0
   946                           
   947 ;; *************** function _SYSTEM_Initialize *****************
   948 ;; Defined at:
   949 ;;		line 36 in file "mcc_generated_files/system/src/system.c"
   950 ;; Parameters:    Size  Location     Type
   951 ;;		None
   952 ;; Auto vars:     Size  Location     Type
   953 ;;		None
   954 ;; Return value:  Size  Location     Type
   955 ;;                  1    wreg      void 
   956 ;; Registers used:
   957 ;;		wreg, status,2, status,0, cstack
   958 ;; Tracked objects:
   959 ;;		On entry : 0/0
   960 ;;		On exit  : 3F/E
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
   963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   967 ;;Total ram usage:        0 bytes
   968 ;; Hardware stack levels used: 1
   969 ;; Hardware stack levels required when called: 5
   970 ;; This function calls:
   971 ;;		_ADCC_Initialize
   972 ;;		_CLOCK_Initialize
   973 ;;		_EUSART1_Initialize
   974 ;;		_INTERRUPT_Initialize
   975 ;;		_PIN_MANAGER_Initialize
   976 ;;		_TMR0_Initialize
   977 ;;		_TMR4_Initialize
   978 ;; This function is called by:
   979 ;;		_main
   980 ;; This function uses a non-reentrant model
   981 ;;
   982                           
   983                           	psect	text1
   984   0108DC                     __ptext1:
   985                           	callstack 0
   986   0108DC                     _SYSTEM_Initialize:
   987                           	callstack 25
   988                           
   989                           ;mcc_generated_files/system/src/system.c: 38:     CLOCK_Initialize();
   990                           
   991                           ;incstack = 0
   992   0108DC  ECB7  F084         	call	_CLOCK_Initialize	;wreg free
   993                           
   994                           ;mcc_generated_files/system/src/system.c: 39:     PIN_MANAGER_Initialize();
   995   0108E0  EC99  F082         	call	_PIN_MANAGER_Initialize	;wreg free
   996                           
   997                           ; BSR set to: 15
   998                           ;mcc_generated_files/system/src/system.c: 40:     ADCC_Initialize();
   999   0108E4  EC74  F083         	call	_ADCC_Initialize	;wreg free
  1000                           
  1001                           ; BSR set to: 14
  1002                           ;mcc_generated_files/system/src/system.c: 41:     EUSART1_Initialize();
  1003   0108E8  ECEA  F083         	call	_EUSART1_Initialize	;wreg free
  1004                           
  1005                           ; BSR set to: 14
  1006                           ;mcc_generated_files/system/src/system.c: 42:     TMR0_Initialize();
  1007   0108EC  EC3D  F084         	call	_TMR0_Initialize	;wreg free
  1008                           
  1009                           ; BSR set to: 14
  1010                           ;mcc_generated_files/system/src/system.c: 43:     TMR4_Initialize();
  1011   0108F0  EC00  F084         	call	_TMR4_Initialize	;wreg free
  1012                           
  1013                           ; BSR set to: 14
  1014                           ;mcc_generated_files/system/src/system.c: 44:     INTERRUPT_Initialize();
  1015   0108F4  EFD3  F083         	goto	_INTERRUPT_Initialize	;wreg free
  1016   0108F8                     __end_of_SYSTEM_Initialize:
  1017                           	callstack 0
  1018                           
  1019 ;; *************** function _TMR4_Initialize *****************
  1020 ;; Defined at:
  1021 ;;		line 57 in file "mcc_generated_files/timer/src/tmr4.c"
  1022 ;; Parameters:    Size  Location     Type
  1023 ;;		None
  1024 ;; Auto vars:     Size  Location     Type
  1025 ;;		None
  1026 ;; Return value:  Size  Location     Type
  1027 ;;                  1    wreg      void 
  1028 ;; Registers used:
  1029 ;;		wreg, status,2, status,0, cstack
  1030 ;; Tracked objects:
  1031 ;;		On entry : 3F/E
  1032 ;;		On exit  : 3F/E
  1033 ;;		Unchanged: 0/0
  1034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1039 ;;Total ram usage:        0 bytes
  1040 ;; Hardware stack levels used: 1
  1041 ;; Hardware stack levels required when called: 4
  1042 ;; This function calls:
  1043 ;;		_TMR4_OverflowCallbackRegister
  1044 ;; This function is called by:
  1045 ;;		_SYSTEM_Initialize
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049                           	psect	text2
  1050   010800                     __ptext2:
  1051                           	callstack 0
  1052   010800                     _TMR4_Initialize:
  1053                           	callstack 25
  1054                           
  1055                           ; BSR set to: 14
  1056                           ;mcc_generated_files/timer/src/tmr4.c: 61:     T4CLKCON = 0x4;
  1057                           
  1058                           ; BSR set to: 14
  1059                           ;incstack = 0
  1060   010800  0E04               	movlw	4
  1061   010802  6EB8               	movwf	184,c	;volatile
  1062                           
  1063                           ;mcc_generated_files/timer/src/tmr4.c: 63:     T4HLT = 0x11;
  1064   010804  0E11               	movlw	17
  1065   010806  6EB7               	movwf	183,c	;volatile
  1066                           
  1067                           ; BSR set to: 14
  1068                           ;mcc_generated_files/timer/src/tmr4.c: 65:     T4RST = 0x0;
  1069   010808  6AB9               	clrf	185,c	;volatile
  1070                           
  1071                           ;mcc_generated_files/timer/src/tmr4.c: 67:     T4PR = 0x9A;
  1072   01080A  0E9A               	movlw	154
  1073   01080C  6EB5               	movwf	181,c	;volatile
  1074                           
  1075                           ; BSR set to: 14
  1076                           ;mcc_generated_files/timer/src/tmr4.c: 69:     T4TMR = 0x0;
  1077   01080E  6AB4               	clrf	180,c	;volatile
  1078                           
  1079                           ; BSR set to: 14
  1080                           ;mcc_generated_files/timer/src/tmr4.c: 72:     TMR4_OverflowCallbackRegister(TMR4_Defaul
      +                          tOverflowCallback);
  1081   010810  0E32               	movlw	low _TMR4_DefaultOverflowCallback
  1082   010812  6E03               	movwf	TMR4_OverflowCallbackRegister@InterruptHandler^0,c
  1083   010814  0E0A               	movlw	high _TMR4_DefaultOverflowCallback
  1084   010816  6E04               	movwf	(TMR4_OverflowCallbackRegister@InterruptHandler+1)^0,c
  1085   010818  0E01               	movlw	low (_TMR4_DefaultOverflowCallback shr (0+16))
  1086   01081A  6E05               	movwf	(TMR4_OverflowCallbackRegister@InterruptHandler+2)^0,c
  1087   01081C  ECE0  F084         	call	_TMR4_OverflowCallbackRegister	;wreg free
  1088                           
  1089                           ; BSR set to: 14
  1090                           ;mcc_generated_files/timer/src/tmr4.c: 75:     PIR4bits.TMR4IF = 0;
  1091   010820  97C9               	bcf	201,3,b	;volatile
  1092                           
  1093                           ; BSR set to: 14
  1094                           ;mcc_generated_files/timer/src/tmr4.c: 77:     PIE4bits.TMR4IE = 1;
  1095   010822  87C1               	bsf	193,3,b	;volatile
  1096                           
  1097                           ; BSR set to: 14
  1098                           ;mcc_generated_files/timer/src/tmr4.c: 79:     T4CON = 0x90;
  1099   010824  0E90               	movlw	144
  1100   010826  6EB6               	movwf	182,c	;volatile
  1101                           
  1102                           ; BSR set to: 14
  1103   010828  0C90               	retlw	144	;funcret
  1104   01082A                     __end_of_TMR4_Initialize:
  1105                           	callstack 0
  1106                           
  1107 ;; *************** function _TMR0_OverflowCallbackRegister *****************
  1108 ;; Defined at:
  1109 ;;		line 108 in file "mcc_generated_files/timer/src/tmr0.c"
  1110 ;; Parameters:    Size  Location     Type
  1111 ;;  CallbackHand    3    2[COMRAM] PTR FTN()void 
  1112 ;;		 -> TMR4UserInterrupt(1), TMR0_DefaultOverflowCallback(1), TMR4_DefaultOverflowCallback(1), 
  1113 ;; Auto vars:     Size  Location     Type
  1114 ;;		None
  1115 ;; Return value:  Size  Location     Type
  1116 ;;                  1    wreg      void 
  1117 ;; Registers used:
  1118 ;;		wreg, status,2, status,0
  1119 ;; Tracked objects:
  1120 ;;		On entry : 3F/E
  1121 ;;		On exit  : 3F/E
  1122 ;;		Unchanged: 3F/0
  1123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1124 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1127 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1128 ;;Total ram usage:        3 bytes
  1129 ;; Hardware stack levels used: 1
  1130 ;; Hardware stack levels required when called: 3
  1131 ;; This function calls:
  1132 ;;		Nothing
  1133 ;; This function is called by:
  1134 ;;		_TMR0_Initialize
  1135 ;;		_main
  1136 ;; This function uses a non-reentrant model
  1137 ;;
  1138                           
  1139                           	psect	text3
  1140   0109B2                     __ptext3:
  1141                           	callstack 0
  1142   0109B2                     _TMR0_OverflowCallbackRegister:
  1143                           	callstack 27
  1144                           
  1145                           ; BSR set to: 14
  1146                           ;mcc_generated_files/timer/src/tmr0.c: 108: void TMR0_OverflowCallbackRegister(void (* C
      +                          allbackHandler)(void));mcc_generated_files/timer/src/tmr0.c: 109: {;mcc_generated_files/
      +                          timer/src/tmr0.c: 110:     TMR0_OverflowCallback = CallbackHandler;
  1147                           
  1148                           ; BSR set to: 14
  1149                           ;incstack = 0
  1150   0109B2  C003  F032         	movff	TMR0_OverflowCallbackRegister@CallbackHandler,_TMR0_OverflowCallback
  1151   0109B6  C004  F033         	movff	TMR0_OverflowCallbackRegister@CallbackHandler+1,_TMR0_OverflowCallback+1
  1152   0109BA  C005  F034         	movff	TMR0_OverflowCallbackRegister@CallbackHandler+2,_TMR0_OverflowCallback+2
  1153                           
  1154                           ; BSR set to: 14
  1155   0109BE  0012               	return		;funcret
  1156   0109C0                     __end_of_TMR0_OverflowCallbackRegister:
  1157                           	callstack 0
  1158                           
  1159 ;; *************** function _TMR4_OverflowCallbackRegister *****************
  1160 ;; Defined at:
  1161 ;;		line 135 in file "mcc_generated_files/timer/src/tmr4.c"
  1162 ;; Parameters:    Size  Location     Type
  1163 ;;  InterruptHan    3    2[COMRAM] PTR FTN()void 
  1164 ;;		 -> TMR4UserInterrupt(1), TMR0_DefaultOverflowCallback(1), TMR4_DefaultOverflowCallback(1), 
  1165 ;; Auto vars:     Size  Location     Type
  1166 ;;		None
  1167 ;; Return value:  Size  Location     Type
  1168 ;;                  1    wreg      void 
  1169 ;; Registers used:
  1170 ;;		wreg, status,2, status,0
  1171 ;; Tracked objects:
  1172 ;;		On entry : 3F/E
  1173 ;;		On exit  : 3F/E
  1174 ;;		Unchanged: 3F/0
  1175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1176 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1179 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1180 ;;Total ram usage:        3 bytes
  1181 ;; Hardware stack levels used: 1
  1182 ;; Hardware stack levels required when called: 3
  1183 ;; This function calls:
  1184 ;;		Nothing
  1185 ;; This function is called by:
  1186 ;;		_TMR4_Initialize
  1187 ;;		_main
  1188 ;; This function uses a non-reentrant model
  1189 ;;
  1190                           
  1191                           	psect	text4
  1192   0109C0                     __ptext4:
  1193                           	callstack 0
  1194   0109C0                     _TMR4_OverflowCallbackRegister:
  1195                           	callstack 27
  1196                           
  1197                           ; BSR set to: 14
  1198                           ;mcc_generated_files/timer/src/tmr4.c: 135: void TMR4_OverflowCallbackRegister(void (* I
      +                          nterruptHandler)(void));mcc_generated_files/timer/src/tmr4.c: 136: {;mcc_generated_files
      +                          /timer/src/tmr4.c: 137:    TMR4_OverflowCallback = InterruptHandler;
  1199                           
  1200                           ; BSR set to: 14
  1201                           ;incstack = 0
  1202   0109C0  C003  F035         	movff	TMR4_OverflowCallbackRegister@InterruptHandler,_TMR4_OverflowCallback
  1203   0109C4  C004  F036         	movff	TMR4_OverflowCallbackRegister@InterruptHandler+1,_TMR4_OverflowCallback+1
  1204   0109C8  C005  F037         	movff	TMR4_OverflowCallbackRegister@InterruptHandler+2,_TMR4_OverflowCallback+2
  1205                           
  1206                           ; BSR set to: 14
  1207   0109CC  0012               	return		;funcret
  1208   0109CE                     __end_of_TMR4_OverflowCallbackRegister:
  1209                           	callstack 0
  1210                           
  1211 ;; *************** function _TMR0_Initialize *****************
  1212 ;; Defined at:
  1213 ;;		line 53 in file "mcc_generated_files/timer/src/tmr0.c"
  1214 ;; Parameters:    Size  Location     Type
  1215 ;;		None
  1216 ;; Auto vars:     Size  Location     Type
  1217 ;;		None
  1218 ;; Return value:  Size  Location     Type
  1219 ;;                  1    wreg      void 
  1220 ;; Registers used:
  1221 ;;		wreg, status,2, status,0, cstack
  1222 ;; Tracked objects:
  1223 ;;		On entry : 3F/E
  1224 ;;		On exit  : 3F/E
  1225 ;;		Unchanged: 0/0
  1226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1231 ;;Total ram usage:        0 bytes
  1232 ;; Hardware stack levels used: 1
  1233 ;; Hardware stack levels required when called: 4
  1234 ;; This function calls:
  1235 ;;		_TMR0_OverflowCallbackRegister
  1236 ;; This function is called by:
  1237 ;;		_SYSTEM_Initialize
  1238 ;; This function uses a non-reentrant model
  1239 ;;
  1240                           
  1241                           	psect	text5
  1242   01087A                     __ptext5:
  1243                           	callstack 0
  1244   01087A                     _TMR0_Initialize:
  1245                           	callstack 25
  1246                           
  1247                           ; BSR set to: 14
  1248                           ;mcc_generated_files/timer/src/tmr0.c: 56:     TMR0H = 0x12;
  1249                           
  1250                           ; BSR set to: 14
  1251                           ;incstack = 0
  1252   01087A  0E12               	movlw	18
  1253   01087C  6ED3               	movwf	211,c	;volatile
  1254                           
  1255                           ; BSR set to: 14
  1256                           ;mcc_generated_files/timer/src/tmr0.c: 59:     TMR0L = 0x0;
  1257   01087E  6AD2               	clrf	210,c	;volatile
  1258                           
  1259                           ;mcc_generated_files/timer/src/tmr0.c: 62:     T0CON1 = 0x4D;
  1260   010880  0E4D               	movlw	77
  1261   010882  6ED5               	movwf	213,c	;volatile
  1262                           
  1263                           ; BSR set to: 14
  1264                           ;mcc_generated_files/timer/src/tmr0.c: 66:     TMR0_OverflowCallbackRegister(TMR0_Defaul
      +                          tOverflowCallback);
  1265   010884  0E30               	movlw	low _TMR0_DefaultOverflowCallback
  1266   010886  6E03               	movwf	TMR0_OverflowCallbackRegister@CallbackHandler^0,c
  1267   010888  0E0A               	movlw	high _TMR0_DefaultOverflowCallback
  1268   01088A  6E04               	movwf	(TMR0_OverflowCallbackRegister@CallbackHandler+1)^0,c
  1269   01088C  0E01               	movlw	low (_TMR0_DefaultOverflowCallback shr (0+16))
  1270   01088E  6E05               	movwf	(TMR0_OverflowCallbackRegister@CallbackHandler+2)^0,c
  1271   010890  ECD9  F084         	call	_TMR0_OverflowCallbackRegister	;wreg free
  1272                           
  1273                           ; BSR set to: 14
  1274                           ;mcc_generated_files/timer/src/tmr0.c: 69:     PIR0bits.TMR0IF = 0;
  1275   010894  9BC5               	bcf	197,5,b	;volatile
  1276                           
  1277                           ; BSR set to: 14
  1278                           ;mcc_generated_files/timer/src/tmr0.c: 72:     T0CON0 = 0x80;
  1279   010896  0E80               	movlw	128
  1280   010898  6ED4               	movwf	212,c	;volatile
  1281                           
  1282                           ; BSR set to: 14
  1283   01089A  0C80               	retlw	128	;funcret
  1284   01089C                     __end_of_TMR0_Initialize:
  1285                           	callstack 0
  1286                           
  1287 ;; *************** function _PIN_MANAGER_Initialize *****************
  1288 ;; Defined at:
  1289 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
  1290 ;; Parameters:    Size  Location     Type
  1291 ;;		None
  1292 ;; Auto vars:     Size  Location     Type
  1293 ;;		None
  1294 ;; Return value:  Size  Location     Type
  1295 ;;                  1    wreg      void 
  1296 ;; Registers used:
  1297 ;;		wreg, status,2
  1298 ;; Tracked objects:
  1299 ;;		On entry : 3F/E
  1300 ;;		On exit  : 3F/F
  1301 ;;		Unchanged: 0/0
  1302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1307 ;;Total ram usage:        0 bytes
  1308 ;; Hardware stack levels used: 1
  1309 ;; Hardware stack levels required when called: 3
  1310 ;; This function calls:
  1311 ;;		Nothing
  1312 ;; This function is called by:
  1313 ;;		_SYSTEM_Initialize
  1314 ;; This function uses a non-reentrant model
  1315 ;;
  1316                           
  1317                           	psect	text6
  1318   010532                     __ptext6:
  1319                           	callstack 0
  1320   010532                     _PIN_MANAGER_Initialize:
  1321                           	callstack 26
  1322                           
  1323                           ; BSR set to: 14
  1324                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
  1325                           
  1326                           ; BSR set to: 14
  1327                           ;incstack = 0
  1328   010532  6A82               	clrf	130,c	;volatile
  1329                           
  1330                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x0;
  1331   010534  6A83               	clrf	131,c	;volatile
  1332                           
  1333                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x0;
  1334   010536  6A84               	clrf	132,c	;volatile
  1335                           
  1336                           ;mcc_generated_files/system/src/pins.c: 46:     LATD = 0x0;
  1337   010538  6A85               	clrf	133,c	;volatile
  1338                           
  1339                           ;mcc_generated_files/system/src/pins.c: 47:     LATE = 0x0;
  1340   01053A  6A86               	clrf	134,c	;volatile
  1341                           
  1342                           ; BSR set to: 14
  1343                           ;mcc_generated_files/system/src/pins.c: 52:     TRISA = 0xCF;
  1344   01053C  0ECF               	movlw	207
  1345   01053E  6E87               	movwf	135,c	;volatile
  1346                           
  1347                           ; BSR set to: 14
  1348                           ;mcc_generated_files/system/src/pins.c: 53:     TRISB = 0xFF;
  1349   010540  6888               	setf	136,c	;volatile
  1350                           
  1351                           ;mcc_generated_files/system/src/pins.c: 54:     TRISC = 0xBF;
  1352   010542  0EBF               	movlw	191
  1353   010544  6E89               	movwf	137,c	;volatile
  1354                           
  1355                           ; BSR set to: 14
  1356                           ;mcc_generated_files/system/src/pins.c: 55:     TRISD = 0xFF;
  1357   010546  688A               	setf	138,c	;volatile
  1358                           
  1359                           ;mcc_generated_files/system/src/pins.c: 56:     TRISE = 0x7;
  1360   010548  0E07               	movlw	7
  1361   01054A  6E8B               	movwf	139,c	;volatile
  1362                           
  1363                           ;mcc_generated_files/system/src/pins.c: 61:     ANSELA = 0xCF;
  1364   01054C  0ECF               	movlw	207
  1365   01054E  010F               	movlb	15	; () banked
  1366   010550  6F0C               	movwf	12,b	;volatile
  1367                           
  1368                           ; BSR set to: 15
  1369                           ;mcc_generated_files/system/src/pins.c: 62:     ANSELB = 0xFF;
  1370   010552  6914               	setf	20,b	;volatile
  1371                           
  1372                           ;mcc_generated_files/system/src/pins.c: 63:     ANSELC = 0x1F;
  1373   010554  0E1F               	movlw	31
  1374   010556  6F1C               	movwf	28,b	;volatile
  1375                           
  1376                           ; BSR set to: 15
  1377                           ;mcc_generated_files/system/src/pins.c: 64:     ANSELD = 0xFF;
  1378   010558  6921               	setf	33,b	;volatile
  1379                           
  1380                           ;mcc_generated_files/system/src/pins.c: 65:     ANSELE = 0x7;
  1381   01055A  0E07               	movlw	7
  1382   01055C  6F29               	movwf	41,b	;volatile
  1383                           
  1384                           ; BSR set to: 15
  1385                           ;mcc_generated_files/system/src/pins.c: 70:     WPUA = 0x0;
  1386   01055E  6B0B               	clrf	11,b	;volatile
  1387                           
  1388                           ; BSR set to: 15
  1389                           ;mcc_generated_files/system/src/pins.c: 71:     WPUB = 0x0;
  1390   010560  6B13               	clrf	19,b	;volatile
  1391                           
  1392                           ; BSR set to: 15
  1393                           ;mcc_generated_files/system/src/pins.c: 72:     WPUC = 0x0;
  1394   010562  6B1B               	clrf	27,b	;volatile
  1395                           
  1396                           ; BSR set to: 15
  1397                           ;mcc_generated_files/system/src/pins.c: 73:     WPUD = 0x0;
  1398   010564  6B20               	clrf	32,b	;volatile
  1399                           
  1400                           ; BSR set to: 15
  1401                           ;mcc_generated_files/system/src/pins.c: 74:     WPUE = 0x0;
  1402   010566  6B28               	clrf	40,b	;volatile
  1403                           
  1404                           ; BSR set to: 15
  1405                           ;mcc_generated_files/system/src/pins.c: 79:     ODCONA = 0x0;
  1406   010568  6B0A               	clrf	10,b	;volatile
  1407                           
  1408                           ; BSR set to: 15
  1409                           ;mcc_generated_files/system/src/pins.c: 80:     ODCONB = 0x0;
  1410   01056A  6B12               	clrf	18,b	;volatile
  1411                           
  1412                           ; BSR set to: 15
  1413                           ;mcc_generated_files/system/src/pins.c: 81:     ODCONC = 0x0;
  1414   01056C  6B1A               	clrf	26,b	;volatile
  1415                           
  1416                           ; BSR set to: 15
  1417                           ;mcc_generated_files/system/src/pins.c: 82:     ODCOND = 0x0;
  1418   01056E  6B1F               	clrf	31,b	;volatile
  1419                           
  1420                           ; BSR set to: 15
  1421                           ;mcc_generated_files/system/src/pins.c: 83:     ODCONE = 0x0;
  1422   010570  6B27               	clrf	39,b	;volatile
  1423                           
  1424                           ; BSR set to: 15
  1425                           ;mcc_generated_files/system/src/pins.c: 88:     SLRCONA = 0xFF;
  1426   010572  6909               	setf	9,b	;volatile
  1427                           
  1428                           ; BSR set to: 15
  1429                           ;mcc_generated_files/system/src/pins.c: 89:     SLRCONB = 0xFF;
  1430   010574  6911               	setf	17,b	;volatile
  1431                           
  1432                           ; BSR set to: 15
  1433                           ;mcc_generated_files/system/src/pins.c: 90:     SLRCONC = 0xFF;
  1434   010576  6919               	setf	25,b	;volatile
  1435                           
  1436                           ; BSR set to: 15
  1437                           ;mcc_generated_files/system/src/pins.c: 91:     SLRCOND = 0xFF;
  1438   010578  691E               	setf	30,b	;volatile
  1439                           
  1440                           ;mcc_generated_files/system/src/pins.c: 92:     SLRCONE = 0x7;
  1441   01057A  0E07               	movlw	7
  1442   01057C  6F26               	movwf	38,b	;volatile
  1443                           
  1444                           ; BSR set to: 15
  1445                           ;mcc_generated_files/system/src/pins.c: 97:     INLVLA = 0xFF;
  1446   01057E  6908               	setf	8,b	;volatile
  1447                           
  1448                           ; BSR set to: 15
  1449                           ;mcc_generated_files/system/src/pins.c: 98:     INLVLB = 0xFF;
  1450   010580  6910               	setf	16,b	;volatile
  1451                           
  1452                           ; BSR set to: 15
  1453                           ;mcc_generated_files/system/src/pins.c: 99:     INLVLC = 0xFF;
  1454   010582  6918               	setf	24,b	;volatile
  1455                           
  1456                           ; BSR set to: 15
  1457                           ;mcc_generated_files/system/src/pins.c: 100:     INLVLD = 0xFF;
  1458   010584  691D               	setf	29,b	;volatile
  1459                           
  1460                           ;mcc_generated_files/system/src/pins.c: 101:     INLVLE = 0xF;
  1461   010586  0E0F               	movlw	15
  1462   010588  6F25               	movwf	37,b	;volatile
  1463                           
  1464                           ;mcc_generated_files/system/src/pins.c: 109:     RX1PPS = 0x17;
  1465   01058A  0E17               	movlw	23
  1466   01058C  010E               	movlb	14	; () banked
  1467   01058E  6FB0               	movwf	176,b	;volatile
  1468                           
  1469                           ;mcc_generated_files/system/src/pins.c: 110:     T4INPPS = 0x15;
  1470   010590  0E15               	movlw	21
  1471   010592  6FA7               	movwf	167,b	;volatile
  1472                           
  1473                           ;mcc_generated_files/system/src/pins.c: 111:     RC6PPS = 0x09;
  1474   010594  0E09               	movlw	9
  1475   010596  6FF8               	movwf	248,b	;volatile
  1476                           
  1477                           ; BSR set to: 14
  1478                           ;mcc_generated_files/system/src/pins.c: 116:     IOCAP = 0x0;
  1479   010598  010F               	movlb	15	; () banked
  1480   01059A  6B07               	clrf	7,b	;volatile
  1481                           
  1482                           ; BSR set to: 15
  1483                           ;mcc_generated_files/system/src/pins.c: 117:     IOCAN = 0x0;
  1484   01059C  6B06               	clrf	6,b	;volatile
  1485                           
  1486                           ; BSR set to: 15
  1487                           ;mcc_generated_files/system/src/pins.c: 118:     IOCAF = 0x0;
  1488   01059E  6B05               	clrf	5,b	;volatile
  1489                           
  1490                           ; BSR set to: 15
  1491                           ;mcc_generated_files/system/src/pins.c: 119:     IOCBP = 0x0;
  1492   0105A0  6B0F               	clrf	15,b	;volatile
  1493                           
  1494                           ; BSR set to: 15
  1495                           ;mcc_generated_files/system/src/pins.c: 120:     IOCBN = 0x0;
  1496   0105A2  6B0E               	clrf	14,b	;volatile
  1497                           
  1498                           ; BSR set to: 15
  1499                           ;mcc_generated_files/system/src/pins.c: 121:     IOCBF = 0x0;
  1500   0105A4  6B0D               	clrf	13,b	;volatile
  1501                           
  1502                           ; BSR set to: 15
  1503                           ;mcc_generated_files/system/src/pins.c: 122:     IOCCP = 0x0;
  1504   0105A6  6B17               	clrf	23,b	;volatile
  1505                           
  1506                           ; BSR set to: 15
  1507                           ;mcc_generated_files/system/src/pins.c: 123:     IOCCN = 0x0;
  1508   0105A8  6B16               	clrf	22,b	;volatile
  1509                           
  1510                           ; BSR set to: 15
  1511                           ;mcc_generated_files/system/src/pins.c: 124:     IOCCF = 0x0;
  1512   0105AA  6B15               	clrf	21,b	;volatile
  1513                           
  1514                           ; BSR set to: 15
  1515                           ;mcc_generated_files/system/src/pins.c: 125:     IOCEP = 0x0;
  1516   0105AC  6B24               	clrf	36,b	;volatile
  1517                           
  1518                           ; BSR set to: 15
  1519                           ;mcc_generated_files/system/src/pins.c: 126:     IOCEN = 0x0;
  1520   0105AE  6B23               	clrf	35,b	;volatile
  1521                           
  1522                           ; BSR set to: 15
  1523                           ;mcc_generated_files/system/src/pins.c: 127:     IOCEF = 0x0;
  1524   0105B0  6B22               	clrf	34,b	;volatile
  1525                           
  1526                           ; BSR set to: 15
  1527   0105B2  0012               	return		;funcret
  1528   0105B4                     __end_of_PIN_MANAGER_Initialize:
  1529                           	callstack 0
  1530                           
  1531 ;; *************** function _INTERRUPT_Initialize *****************
  1532 ;; Defined at:
  1533 ;;		line 42 in file "mcc_generated_files/system/src/interrupt.c"
  1534 ;; Parameters:    Size  Location     Type
  1535 ;;		None
  1536 ;; Auto vars:     Size  Location     Type
  1537 ;;		None
  1538 ;; Return value:  Size  Location     Type
  1539 ;;                  1    wreg      void 
  1540 ;; Registers used:
  1541 ;;		wreg, status,2, status,0, cstack
  1542 ;; Tracked objects:
  1543 ;;		On entry : 3F/E
  1544 ;;		On exit  : 3F/E
  1545 ;;		Unchanged: 0/0
  1546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1551 ;;Total ram usage:        0 bytes
  1552 ;; Hardware stack levels used: 1
  1553 ;; Hardware stack levels required when called: 4
  1554 ;; This function calls:
  1555 ;;		_INT0_SetInterruptHandler
  1556 ;;		_INT1_SetInterruptHandler
  1557 ;;		_INT2_SetInterruptHandler
  1558 ;; This function is called by:
  1559 ;;		_SYSTEM_Initialize
  1560 ;; This function uses a non-reentrant model
  1561 ;;
  1562                           
  1563                           	psect	text7
  1564   0107A6                     __ptext7:
  1565                           	callstack 0
  1566   0107A6                     _INTERRUPT_Initialize:
  1567                           	callstack 25
  1568                           
  1569                           ; BSR set to: 14
  1570                           ;mcc_generated_files/system/src/interrupt.c: 45:     INTCONbits.IPEN = 0;
  1571                           
  1572                           ; BSR set to: 15
  1573                           ;incstack = 0
  1574   0107A6  9AF2               	bcf	242,5,c	;volatile
  1575                           
  1576                           ;mcc_generated_files/system/src/interrupt.c: 49:     (PIR0bits.INT0IF = 0);
  1577   0107A8  91C5               	bcf	197,0,b	;volatile
  1578                           
  1579                           ;mcc_generated_files/system/src/interrupt.c: 50:     (INTCONbits.INT0EDG = 1);
  1580   0107AA  80F2               	bsf	242,0,c	;volatile
  1581                           
  1582                           ; BSR set to: 14
  1583                           ;mcc_generated_files/system/src/interrupt.c: 52:     INT0_SetInterruptHandler(INT0_Defau
      +                          ltInterruptHandler);
  1584   0107AC  0E00               	movlw	0
  1585   0107AE  6A03               	clrf	INT0_SetInterruptHandler@InterruptHandler^0,c
  1586   0107B0  6A04               	clrf	(INT0_SetInterruptHandler@InterruptHandler+1)^0,c
  1587   0107B2  6A05               	clrf	(INT0_SetInterruptHandler@InterruptHandler+2)^0,c
  1588   0107B4  EC17  F085         	call	_INT0_SetInterruptHandler	;wreg free
  1589                           
  1590                           ; BSR set to: 14
  1591                           ;mcc_generated_files/system/src/interrupt.c: 57:     (PIR0bits.INT1IF = 0);
  1592   0107B8  93C5               	bcf	197,1,b	;volatile
  1593                           
  1594                           ; BSR set to: 14
  1595                           ;mcc_generated_files/system/src/interrupt.c: 58:     (INTCONbits.INT1EDG = 1);
  1596   0107BA  82F2               	bsf	242,1,c	;volatile
  1597                           
  1598                           ;mcc_generated_files/system/src/interrupt.c: 60:     INT1_SetInterruptHandler(INT1_Defau
      +                          ltInterruptHandler);
  1599   0107BC  0E00               	movlw	0
  1600   0107BE  6A03               	clrf	INT1_SetInterruptHandler@InterruptHandler^0,c
  1601   0107C0  6A04               	clrf	(INT1_SetInterruptHandler@InterruptHandler+1)^0,c
  1602   0107C2  6A05               	clrf	(INT1_SetInterruptHandler@InterruptHandler+2)^0,c
  1603   0107C4  EC16  F085         	call	_INT1_SetInterruptHandler	;wreg free
  1604                           
  1605                           ; BSR set to: 14
  1606                           ;mcc_generated_files/system/src/interrupt.c: 65:     (PIR0bits.INT2IF = 0);
  1607   0107C8  95C5               	bcf	197,2,b	;volatile
  1608                           
  1609                           ; BSR set to: 14
  1610                           ;mcc_generated_files/system/src/interrupt.c: 66:     (INTCONbits.INT2EDG = 1);
  1611   0107CA  84F2               	bsf	242,2,c	;volatile
  1612                           
  1613                           ;mcc_generated_files/system/src/interrupt.c: 68:     INT2_SetInterruptHandler(INT2_Defau
      +                          ltInterruptHandler);
  1614   0107CC  6A03               	clrf	INT2_SetInterruptHandler@InterruptHandler^0,c
  1615   0107CE  6A04               	clrf	(INT2_SetInterruptHandler@InterruptHandler+1)^0,c
  1616   0107D0  6A05               	clrf	(INT2_SetInterruptHandler@InterruptHandler+2)^0,c
  1617   0107D2  0C00               	retlw	0	;wreg free
  1618   0107D4                     __end_of_INTERRUPT_Initialize:
  1619                           	callstack 0
  1620                           
  1621 ;; *************** function _INT2_SetInterruptHandler *****************
  1622 ;; Defined at:
  1623 ;;		line 178 in file "mcc_generated_files/system/src/interrupt.c"
  1624 ;; Parameters:    Size  Location     Type
  1625 ;;  InterruptHan    3    2[COMRAM] PTR FTN()void 
  1626 ;;		 -> INT2_DefaultInterruptHandler(1), 
  1627 ;; Auto vars:     Size  Location     Type
  1628 ;;		None
  1629 ;; Return value:  Size  Location     Type
  1630 ;;                  1    wreg      void 
  1631 ;; Registers used:
  1632 ;;		None
  1633 ;; Tracked objects:
  1634 ;;		On entry : 3F/E
  1635 ;;		On exit  : 3F/E
  1636 ;;		Unchanged: 3F/0
  1637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1638 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1641 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1642 ;;Total ram usage:        3 bytes
  1643 ;; Hardware stack levels used: 1
  1644 ;; Hardware stack levels required when called: 3
  1645 ;; This function calls:
  1646 ;;		Nothing
  1647 ;; This function is called by:
  1648 ;;		_INTERRUPT_Initialize
  1649 ;; This function uses a non-reentrant model
  1650 ;;
  1651                           
  1652                           	psect	text8
  1653   010A2A                     __ptext8:
  1654                           	callstack 0
  1655   010A2A                     _INT2_SetInterruptHandler:
  1656                           	callstack 25
  1657                           
  1658                           ; BSR set to: 14
  1659                           
  1660                           ; BSR set to: 14
  1661                           ;incstack = 0
  1662   010A2A  0012               	return		;funcret
  1663   010A2C                     __end_of_INT2_SetInterruptHandler:
  1664                           	callstack 0
  1665                           
  1666 ;; *************** function _INT1_SetInterruptHandler *****************
  1667 ;; Defined at:
  1668 ;;		line 152 in file "mcc_generated_files/system/src/interrupt.c"
  1669 ;; Parameters:    Size  Location     Type
  1670 ;;  InterruptHan    3    2[COMRAM] PTR FTN()void 
  1671 ;;		 -> INT1_DefaultInterruptHandler(1), 
  1672 ;; Auto vars:     Size  Location     Type
  1673 ;;		None
  1674 ;; Return value:  Size  Location     Type
  1675 ;;                  1    wreg      void 
  1676 ;; Registers used:
  1677 ;;		None
  1678 ;; Tracked objects:
  1679 ;;		On entry : 3F/E
  1680 ;;		On exit  : 3F/E
  1681 ;;		Unchanged: 3F/0
  1682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1683 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1686 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1687 ;;Total ram usage:        3 bytes
  1688 ;; Hardware stack levels used: 1
  1689 ;; Hardware stack levels required when called: 3
  1690 ;; This function calls:
  1691 ;;		Nothing
  1692 ;; This function is called by:
  1693 ;;		_INTERRUPT_Initialize
  1694 ;; This function uses a non-reentrant model
  1695 ;;
  1696                           
  1697                           	psect	text9
  1698   010A2C                     __ptext9:
  1699                           	callstack 0
  1700   010A2C                     _INT1_SetInterruptHandler:
  1701                           	callstack 25
  1702                           
  1703                           ; BSR set to: 14
  1704                           
  1705                           ; BSR set to: 14
  1706                           ;incstack = 0
  1707   010A2C  0012               	return		;funcret
  1708   010A2E                     __end_of_INT1_SetInterruptHandler:
  1709                           	callstack 0
  1710                           
  1711 ;; *************** function _INT0_SetInterruptHandler *****************
  1712 ;; Defined at:
  1713 ;;		line 126 in file "mcc_generated_files/system/src/interrupt.c"
  1714 ;; Parameters:    Size  Location     Type
  1715 ;;  InterruptHan    3    2[COMRAM] PTR FTN()void 
  1716 ;;		 -> INT0_DefaultInterruptHandler(1), 
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;		None
  1719 ;; Return value:  Size  Location     Type
  1720 ;;                  1    wreg      void 
  1721 ;; Registers used:
  1722 ;;		None
  1723 ;; Tracked objects:
  1724 ;;		On entry : 3F/E
  1725 ;;		On exit  : 3F/E
  1726 ;;		Unchanged: 3F/0
  1727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1728 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1731 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1732 ;;Total ram usage:        3 bytes
  1733 ;; Hardware stack levels used: 1
  1734 ;; Hardware stack levels required when called: 3
  1735 ;; This function calls:
  1736 ;;		Nothing
  1737 ;; This function is called by:
  1738 ;;		_INTERRUPT_Initialize
  1739 ;; This function uses a non-reentrant model
  1740 ;;
  1741                           
  1742                           	psect	text10
  1743   010A2E                     __ptext10:
  1744                           	callstack 0
  1745   010A2E                     _INT0_SetInterruptHandler:
  1746                           	callstack 25
  1747                           
  1748                           ; BSR set to: 14
  1749                           
  1750                           ; BSR set to: 14
  1751                           ;incstack = 0
  1752   010A2E  0012               	return		;funcret
  1753   010A30                     __end_of_INT0_SetInterruptHandler:
  1754                           	callstack 0
  1755                           
  1756 ;; *************** function _EUSART1_Initialize *****************
  1757 ;; Defined at:
  1758 ;;		line 94 in file "mcc_generated_files/uart/src/eusart1.c"
  1759 ;; Parameters:    Size  Location     Type
  1760 ;;		None
  1761 ;; Auto vars:     Size  Location     Type
  1762 ;;		None
  1763 ;; Return value:  Size  Location     Type
  1764 ;;                  1    wreg      void 
  1765 ;; Registers used:
  1766 ;;		wreg, status,2, status,0, cstack
  1767 ;; Tracked objects:
  1768 ;;		On entry : 3F/E
  1769 ;;		On exit  : 3F/E
  1770 ;;		Unchanged: 3F/0
  1771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1776 ;;Total ram usage:        0 bytes
  1777 ;; Hardware stack levels used: 1
  1778 ;; Hardware stack levels required when called: 4
  1779 ;; This function calls:
  1780 ;;		_EUSART1_FramingErrorCallbackRegister
  1781 ;;		_EUSART1_OverrunErrorCallbackRegister
  1782 ;; This function is called by:
  1783 ;;		_SYSTEM_Initialize
  1784 ;; This function uses a non-reentrant model
  1785 ;;
  1786                           
  1787                           	psect	text11
  1788   0107D4                     __ptext11:
  1789                           	callstack 0
  1790   0107D4                     _EUSART1_Initialize:
  1791                           	callstack 25
  1792                           
  1793                           ; BSR set to: 14
  1794                           ;mcc_generated_files/uart/src/eusart1.c: 99:     BAUD1CON = 0x48;
  1795                           
  1796                           ; BSR set to: 14
  1797                           ;incstack = 0
  1798   0107D4  0E48               	movlw	72
  1799   0107D6  6E9E               	movwf	158,c	;volatile
  1800                           
  1801                           ;mcc_generated_files/uart/src/eusart1.c: 101:     RC1STA = 0x90;
  1802   0107D8  0E90               	movlw	144
  1803   0107DA  6E9C               	movwf	156,c	;volatile
  1804                           
  1805                           ;mcc_generated_files/uart/src/eusart1.c: 103:     TX1STA = 0x26;
  1806   0107DC  0E26               	movlw	38
  1807   0107DE  6E9D               	movwf	157,c	;volatile
  1808                           
  1809                           ;mcc_generated_files/uart/src/eusart1.c: 105:     SP1BRGL = 0x8A;
  1810   0107E0  0E8A               	movlw	138
  1811   0107E2  6E9A               	movwf	154,c	;volatile
  1812                           
  1813                           ; BSR set to: 14
  1814                           ;mcc_generated_files/uart/src/eusart1.c: 107:     SP1BRGH = 0x0;
  1815   0107E4  6A9B               	clrf	155,c	;volatile
  1816                           
  1817                           ; BSR set to: 14
  1818                           ;mcc_generated_files/uart/src/eusart1.c: 109:     EUSART1_FramingErrorCallbackRegister(E
      +                          USART1_DefaultFramingErrorCallback);
  1819   0107E6  6A03               	clrf	EUSART1_FramingErrorCallbackRegister@callbackHandler^0,c
  1820   0107E8  6A04               	clrf	(EUSART1_FramingErrorCallbackRegister@callbackHandler+1)^0,c
  1821   0107EA  6A05               	clrf	(EUSART1_FramingErrorCallbackRegister@callbackHandler+2)^0,c
  1822   0107EC  EC96  F084         	call	_EUSART1_FramingErrorCallbackRegister	;wreg free
  1823                           
  1824                           ; BSR set to: 14
  1825                           ;mcc_generated_files/uart/src/eusart1.c: 110:     EUSART1_OverrunErrorCallbackRegister(E
      +                          USART1_DefaultOverrunErrorCallback);
  1826   0107F0  6A03               	clrf	EUSART1_OverrunErrorCallbackRegister@callbackHandler^0,c
  1827   0107F2  6A04               	clrf	(EUSART1_OverrunErrorCallbackRegister@callbackHandler+1)^0,c
  1828   0107F4  6A05               	clrf	(EUSART1_OverrunErrorCallbackRegister@callbackHandler+2)^0,c
  1829   0107F6  EC8A  F084         	call	_EUSART1_OverrunErrorCallbackRegister	;wreg free
  1830                           
  1831                           ; BSR set to: 14
  1832                           ;mcc_generated_files/uart/src/eusart1.c: 111:     eusart1RxLastError.status = 0;
  1833   0107FA  6A38               	clrf	_eusart1RxLastError^0,c	;volatile
  1834   0107FC  6A39               	clrf	(_eusart1RxLastError+1)^0,c	;volatile
  1835                           
  1836                           ; BSR set to: 14
  1837   0107FE  0012               	return		;funcret
  1838   010800                     __end_of_EUSART1_Initialize:
  1839                           	callstack 0
  1840                           
  1841 ;; *************** function _EUSART1_OverrunErrorCallbackRegister *****************
  1842 ;; Defined at:
  1843 ;;		line 272 in file "mcc_generated_files/uart/src/eusart1.c"
  1844 ;; Parameters:    Size  Location     Type
  1845 ;;  callbackHand    3    2[COMRAM] PTR FTN()void 
  1846 ;;		 -> EUSART1_DefaultOverrunErrorCallback(1), 
  1847 ;; Auto vars:     Size  Location     Type
  1848 ;;		None
  1849 ;; Return value:  Size  Location     Type
  1850 ;;                  1    wreg      void 
  1851 ;; Registers used:
  1852 ;;		wreg, status,2, status,0
  1853 ;; Tracked objects:
  1854 ;;		On entry : 3F/E
  1855 ;;		On exit  : 3F/E
  1856 ;;		Unchanged: 3F/0
  1857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1858 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1861 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1862 ;;Total ram usage:        3 bytes
  1863 ;; Hardware stack levels used: 1
  1864 ;; Hardware stack levels required when called: 3
  1865 ;; This function calls:
  1866 ;;		Nothing
  1867 ;; This function is called by:
  1868 ;;		_EUSART1_Initialize
  1869 ;; This function uses a non-reentrant model
  1870 ;;
  1871                           
  1872                           	psect	text12
  1873   010914                     __ptext12:
  1874                           	callstack 0
  1875   010914                     _EUSART1_OverrunErrorCallbackRegister:
  1876                           	callstack 25
  1877                           
  1878                           ; BSR set to: 14
  1879                           ;mcc_generated_files/uart/src/eusart1.c: 272: void EUSART1_OverrunErrorCallbackRegister(
      +                          void (* callbackHandler)(void));mcc_generated_files/uart/src/eusart1.c: 273: {;mcc_gener
      +                          ated_files/uart/src/eusart1.c: 274:     if(((void*)0) != callbackHandler)
  1880                           
  1881                           ; BSR set to: 14
  1882                           ;incstack = 0
  1883   010914  5003               	movf	EUSART1_OverrunErrorCallbackRegister@callbackHandler^0,w,c
  1884   010916  1004               	iorwf	(EUSART1_OverrunErrorCallbackRegister@callbackHandler+1)^0,w,c
  1885   010918  1005               	iorwf	(EUSART1_OverrunErrorCallbackRegister@callbackHandler+2)^0,w,c
  1886   01091A  B4D8               	btfsc	status,2,c
  1887   01091C  0012               	return	
  1888                           
  1889                           ; BSR set to: 14
  1890                           ;mcc_generated_files/uart/src/eusart1.c: 275:     {;mcc_generated_files/uart/src/eusart1
      +                          .c: 276:         EUSART1_OverrunErrorHandler = callbackHandler;
  1891   01091E  C003  F02C         	movff	EUSART1_OverrunErrorCallbackRegister@callbackHandler,_EUSART1_OverrunErrorHandler
  1892   010922  C004  F02D         	movff	EUSART1_OverrunErrorCallbackRegister@callbackHandler+1,_EUSART1_OverrunErrorHandl
      +                          er+1
  1893   010926  C005  F02E         	movff	EUSART1_OverrunErrorCallbackRegister@callbackHandler+2,_EUSART1_OverrunErrorHandl
      +                          er+2
  1894                           
  1895                           ; BSR set to: 14
  1896   01092A  0012               	return		;funcret
  1897   01092C                     __end_of_EUSART1_OverrunErrorCallbackRegister:
  1898                           	callstack 0
  1899                           
  1900 ;; *************** function _EUSART1_FramingErrorCallbackRegister *****************
  1901 ;; Defined at:
  1902 ;;		line 264 in file "mcc_generated_files/uart/src/eusart1.c"
  1903 ;; Parameters:    Size  Location     Type
  1904 ;;  callbackHand    3    2[COMRAM] PTR FTN()void 
  1905 ;;		 -> EUSART1_DefaultFramingErrorCallback(1), 
  1906 ;; Auto vars:     Size  Location     Type
  1907 ;;		None
  1908 ;; Return value:  Size  Location     Type
  1909 ;;                  1    wreg      void 
  1910 ;; Registers used:
  1911 ;;		wreg, status,2, status,0
  1912 ;; Tracked objects:
  1913 ;;		On entry : 3F/E
  1914 ;;		On exit  : 3F/E
  1915 ;;		Unchanged: 3F/0
  1916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1917 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1920 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1921 ;;Total ram usage:        3 bytes
  1922 ;; Hardware stack levels used: 1
  1923 ;; Hardware stack levels required when called: 3
  1924 ;; This function calls:
  1925 ;;		Nothing
  1926 ;; This function is called by:
  1927 ;;		_EUSART1_Initialize
  1928 ;; This function uses a non-reentrant model
  1929 ;;
  1930                           
  1931                           	psect	text13
  1932   01092C                     __ptext13:
  1933                           	callstack 0
  1934   01092C                     _EUSART1_FramingErrorCallbackRegister:
  1935                           	callstack 25
  1936                           
  1937                           ; BSR set to: 14
  1938                           ;mcc_generated_files/uart/src/eusart1.c: 264: void EUSART1_FramingErrorCallbackRegister(
      +                          void (* callbackHandler)(void));mcc_generated_files/uart/src/eusart1.c: 265: {;mcc_gener
      +                          ated_files/uart/src/eusart1.c: 266:     if(((void*)0) != callbackHandler)
  1939                           
  1940                           ; BSR set to: 14
  1941                           ;incstack = 0
  1942   01092C  5003               	movf	EUSART1_FramingErrorCallbackRegister@callbackHandler^0,w,c
  1943   01092E  1004               	iorwf	(EUSART1_FramingErrorCallbackRegister@callbackHandler+1)^0,w,c
  1944   010930  1005               	iorwf	(EUSART1_FramingErrorCallbackRegister@callbackHandler+2)^0,w,c
  1945   010932  B4D8               	btfsc	status,2,c
  1946   010934  0012               	return	
  1947                           
  1948                           ; BSR set to: 14
  1949                           ;mcc_generated_files/uart/src/eusart1.c: 267:     {;mcc_generated_files/uart/src/eusart1
      +                          .c: 268:         EUSART1_FramingErrorHandler = callbackHandler;
  1950   010936  C003  F02F         	movff	EUSART1_FramingErrorCallbackRegister@callbackHandler,_EUSART1_FramingErrorHandler
  1951   01093A  C004  F030         	movff	EUSART1_FramingErrorCallbackRegister@callbackHandler+1,_EUSART1_FramingErrorHandl
      +                          er+1
  1952   01093E  C005  F031         	movff	EUSART1_FramingErrorCallbackRegister@callbackHandler+2,_EUSART1_FramingErrorHandl
      +                          er+2
  1953                           
  1954                           ; BSR set to: 14
  1955   010942  0012               	return		;funcret
  1956   010944                     __end_of_EUSART1_FramingErrorCallbackRegister:
  1957                           	callstack 0
  1958                           
  1959 ;; *************** function _CLOCK_Initialize *****************
  1960 ;; Defined at:
  1961 ;;		line 37 in file "mcc_generated_files/system/src/clock.c"
  1962 ;; Parameters:    Size  Location     Type
  1963 ;;		None
  1964 ;; Auto vars:     Size  Location     Type
  1965 ;;		None
  1966 ;; Return value:  Size  Location     Type
  1967 ;;                  1    wreg      void 
  1968 ;; Registers used:
  1969 ;;		wreg, status,2
  1970 ;; Tracked objects:
  1971 ;;		On entry : 0/0
  1972 ;;		On exit  : 3F/E
  1973 ;;		Unchanged: 0/0
  1974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1979 ;;Total ram usage:        0 bytes
  1980 ;; Hardware stack levels used: 1
  1981 ;; Hardware stack levels required when called: 3
  1982 ;; This function calls:
  1983 ;;		Nothing
  1984 ;; This function is called by:
  1985 ;;		_SYSTEM_Initialize
  1986 ;; This function uses a non-reentrant model
  1987 ;;
  1988                           
  1989                           	psect	text14
  1990   01096E                     __ptext14:
  1991                           	callstack 0
  1992   01096E                     _CLOCK_Initialize:
  1993                           	callstack 26
  1994                           
  1995                           ;mcc_generated_files/system/src/clock.c: 41:     OSCCON1 = 0x60;
  1996                           
  1997                           ; BSR set to: 14
  1998                           ;incstack = 0
  1999   01096E  0E60               	movlw	96
  2000   010970  010E               	movlb	14	; () banked
  2001   010972  6FD3               	movwf	211,b	;volatile
  2002                           
  2003                           ; BSR set to: 14
  2004                           ;mcc_generated_files/system/src/clock.c: 43:     OSCCON3 = 0x0;
  2005   010974  6BD5               	clrf	213,b	;volatile
  2006                           
  2007                           ; BSR set to: 14
  2008                           ;mcc_generated_files/system/src/clock.c: 45:     OSCEN = 0x0;
  2009   010976  6BD7               	clrf	215,b	;volatile
  2010                           
  2011                           ;mcc_generated_files/system/src/clock.c: 47:     OSCFRQ = 0x8;
  2012   010978  0E08               	movlw	8
  2013   01097A  6FD9               	movwf	217,b	;volatile
  2014                           
  2015                           ; BSR set to: 14
  2016                           ;mcc_generated_files/system/src/clock.c: 49:     OSCTUNE = 0x0;
  2017   01097C  6BD8               	clrf	216,b	;volatile
  2018                           
  2019                           ; BSR set to: 14
  2020   01097E  0012               	return		;funcret
  2021   010980                     __end_of_CLOCK_Initialize:
  2022                           	callstack 0
  2023                           
  2024 ;; *************** function _ADCC_Initialize *****************
  2025 ;; Defined at:
  2026 ;;		line 47 in file "mcc_generated_files/adc/src/adcc.c"
  2027 ;; Parameters:    Size  Location     Type
  2028 ;;		None
  2029 ;; Auto vars:     Size  Location     Type
  2030 ;;		None
  2031 ;; Return value:  Size  Location     Type
  2032 ;;                  1    wreg      void 
  2033 ;; Registers used:
  2034 ;;		wreg, status,2, status,0, cstack
  2035 ;; Tracked objects:
  2036 ;;		On entry : 3F/F
  2037 ;;		On exit  : 3F/E
  2038 ;;		Unchanged: 0/0
  2039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2044 ;;Total ram usage:        0 bytes
  2045 ;; Hardware stack levels used: 1
  2046 ;; Hardware stack levels required when called: 4
  2047 ;; This function calls:
  2048 ;;		_ADCC_SetADTIInterruptHandler
  2049 ;; This function is called by:
  2050 ;;		_SYSTEM_Initialize
  2051 ;; This function uses a non-reentrant model
  2052 ;;
  2053                           
  2054                           	psect	text15
  2055   0106E8                     __ptext15:
  2056                           	callstack 0
  2057   0106E8                     _ADCC_Initialize:
  2058                           	callstack 25
  2059                           
  2060                           ; BSR set to: 15
  2061                           ;mcc_generated_files/adc/src/adcc.c: 51:     ADLTHL = 0x0;
  2062                           
  2063                           ; BSR set to: 14
  2064                           ;incstack = 0
  2065   0106E8  6A65               	clrf	101,c	;volatile
  2066                           
  2067                           ;mcc_generated_files/adc/src/adcc.c: 53:     ADLTHH = 0x0;
  2068   0106EA  6A66               	clrf	102,c	;volatile
  2069                           
  2070                           ;mcc_generated_files/adc/src/adcc.c: 55:     ADUTHL = 0x0;
  2071   0106EC  6A67               	clrf	103,c	;volatile
  2072                           
  2073                           ;mcc_generated_files/adc/src/adcc.c: 57:     ADUTHH = 0x0;
  2074   0106EE  6A68               	clrf	104,c	;volatile
  2075                           
  2076                           ;mcc_generated_files/adc/src/adcc.c: 59:     ADSTPTL = 0x0;
  2077   0106F0  6A63               	clrf	99,c	;volatile
  2078                           
  2079                           ;mcc_generated_files/adc/src/adcc.c: 61:     ADSTPTH = 0x0;
  2080   0106F2  6A64               	clrf	100,c	;volatile
  2081                           
  2082                           ;mcc_generated_files/adc/src/adcc.c: 63:     ADRPT = 0x0;
  2083   0106F4  6A61               	clrf	97,c	;volatile
  2084                           
  2085                           ;mcc_generated_files/adc/src/adcc.c: 65:     ADPCH = 0x0;
  2086   0106F6  6B5A               	clrf	90,b	;volatile
  2087                           
  2088                           ;mcc_generated_files/adc/src/adcc.c: 67:     ADCAP = 0x0;
  2089   0106F8  6B58               	clrf	88,b	;volatile
  2090                           
  2091                           ;mcc_generated_files/adc/src/adcc.c: 69:     ADPRE = 0x0;
  2092   0106FA  6B59               	clrf	89,b	;volatile
  2093                           
  2094                           ;mcc_generated_files/adc/src/adcc.c: 71:     ADCON1 = 0x0;
  2095   0106FC  6B54               	clrf	84,b	;volatile
  2096                           
  2097                           ; BSR set to: 15
  2098                           ;mcc_generated_files/adc/src/adcc.c: 73:     ADCON2 = 0x4;
  2099   0106FE  0E04               	movlw	4
  2100   010700  6F55               	movwf	85,b	;volatile
  2101                           
  2102                           ;mcc_generated_files/adc/src/adcc.c: 75:     ADCON3 = 0x50;
  2103   010702  0E50               	movlw	80
  2104   010704  6F56               	movwf	86,b	;volatile
  2105                           
  2106                           ; BSR set to: 15
  2107                           ;mcc_generated_files/adc/src/adcc.c: 77:     ADSTAT = 0x0;
  2108   010706  6A60               	clrf	96,c	;volatile
  2109                           
  2110                           ; BSR set to: 15
  2111                           ;mcc_generated_files/adc/src/adcc.c: 79:     ADREF = 0x0;
  2112   010708  6B53               	clrf	83,b	;volatile
  2113                           
  2114                           ;mcc_generated_files/adc/src/adcc.c: 81:     ADACT = 0x2;
  2115   01070A  0E02               	movlw	2
  2116   01070C  6F51               	movwf	81,b	;volatile
  2117                           
  2118                           ;mcc_generated_files/adc/src/adcc.c: 83:     ADCLK = 0x1F;
  2119   01070E  0E1F               	movlw	31
  2120   010710  6F52               	movwf	82,b	;volatile
  2121                           
  2122                           ;mcc_generated_files/adc/src/adcc.c: 85:     ADCON0 = 0x85;
  2123   010712  0E85               	movlw	133
  2124   010714  6F5B               	movwf	91,b	;volatile
  2125                           
  2126                           ; BSR set to: 15
  2127                           ;mcc_generated_files/adc/src/adcc.c: 87:     ADACQ = 0x0;
  2128   010716  6B57               	clrf	87,b	;volatile
  2129                           
  2130                           ; BSR set to: 15
  2131                           ;mcc_generated_files/adc/src/adcc.c: 90:     PIR1bits.ADIF = 0;
  2132   010718  010E               	movlb	14	; () banked
  2133   01071A  91C6               	bcf	198,0,b	;volatile
  2134                           
  2135                           ; BSR set to: 14
  2136                           ;mcc_generated_files/adc/src/adcc.c: 93:     PIR1bits.ADTIF = 0;
  2137   01071C  93C6               	bcf	198,1,b	;volatile
  2138                           
  2139                           ; BSR set to: 14
  2140                           ;mcc_generated_files/adc/src/adcc.c: 95:     ADCC_SetADTIInterruptHandler(ADCC_DefaultAD
      +                          TI_ISR);
  2141   01071E  0E36               	movlw	low _ADCC_DefaultADTI_ISR
  2142   010720  6E03               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler^0,c
  2143   010722  0E0A               	movlw	high _ADCC_DefaultADTI_ISR
  2144   010724  6E04               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)^0,c
  2145   010726  0E01               	movlw	low (_ADCC_DefaultADTI_ISR shr (0+16))
  2146   010728  6E05               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+2)^0,c
  2147   01072A  ECE7  F084         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  2148                           
  2149                           ; BSR set to: 14
  2150                           ;mcc_generated_files/adc/src/adcc.c: 97:     PIE1bits.ADTIE = 1;
  2151   01072E  83BE               	bsf	190,1,b	;volatile
  2152                           
  2153                           ; BSR set to: 14
  2154   010730  0012               	return		;funcret
  2155   010732                     __end_of_ADCC_Initialize:
  2156                           	callstack 0
  2157                           
  2158 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
  2159 ;; Defined at:
  2160 ;;		line 296 in file "mcc_generated_files/adc/src/adcc.c"
  2161 ;; Parameters:    Size  Location     Type
  2162 ;;  InterruptHan    3    2[COMRAM] PTR FTN()void 
  2163 ;;		 -> ADCUserInterrupt(1), ADCC_DefaultADTI_ISR(1), 
  2164 ;; Auto vars:     Size  Location     Type
  2165 ;;		None
  2166 ;; Return value:  Size  Location     Type
  2167 ;;                  1    wreg      void 
  2168 ;; Registers used:
  2169 ;;		wreg, status,2, status,0
  2170 ;; Tracked objects:
  2171 ;;		On entry : 3F/E
  2172 ;;		On exit  : 3F/E
  2173 ;;		Unchanged: 3F/0
  2174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2175 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2178 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2179 ;;Total ram usage:        3 bytes
  2180 ;; Hardware stack levels used: 1
  2181 ;; Hardware stack levels required when called: 3
  2182 ;; This function calls:
  2183 ;;		Nothing
  2184 ;; This function is called by:
  2185 ;;		_ADCC_Initialize
  2186 ;;		_main
  2187 ;; This function uses a non-reentrant model
  2188 ;;
  2189                           
  2190                           	psect	text16
  2191   0109CE                     __ptext16:
  2192                           	callstack 0
  2193   0109CE                     _ADCC_SetADTIInterruptHandler:
  2194                           	callstack 25
  2195                           
  2196                           ; BSR set to: 14
  2197                           ;mcc_generated_files/adc/src/adcc.c: 296: void ADCC_SetADTIInterruptHandler(void (* Inte
      +                          rruptHandler)(void));mcc_generated_files/adc/src/adcc.c: 297: {;mcc_generated_files/adc/
      +                          src/adcc.c: 298:     ADCC_ADTI_InterruptHandler = InterruptHandler;
  2198                           
  2199                           ; BSR set to: 14
  2200                           ;incstack = 0
  2201   0109CE  C003  F052         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler,_ADCC_ADTI_InterruptHandler
  2202   0109D2  C004  F053         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+1,_ADCC_ADTI_InterruptHandler+1
  2203   0109D6  C005  F054         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+2,_ADCC_ADTI_InterruptHandler+2
  2204                           
  2205                           ; BSR set to: 14
  2206   0109DA  0012               	return		;funcret
  2207   0109DC                     __end_of_ADCC_SetADTIInterruptHandler:
  2208                           	callstack 0
  2209                           
  2210 ;; *************** function _ApplicationTask *****************
  2211 ;; Defined at:
  2212 ;;		line 21 in file "application.c"
  2213 ;; Parameters:    Size  Location     Type
  2214 ;;		None
  2215 ;; Auto vars:     Size  Location     Type
  2216 ;;		None
  2217 ;; Return value:  Size  Location     Type
  2218 ;;                  1    wreg      void 
  2219 ;; Registers used:
  2220 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, cstack
  2221 ;; Tracked objects:
  2222 ;;		On entry : 0/E
  2223 ;;		On exit  : 0/0
  2224 ;;		Unchanged: 0/0
  2225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2230 ;;Total ram usage:        0 bytes
  2231 ;; Hardware stack levels used: 1
  2232 ;; Hardware stack levels required when called: 9
  2233 ;; This function calls:
  2234 ;;		_ADCC_HasErrorCrossedLowerThreshold
  2235 ;;		_ADCC_HasErrorCrossedUpperThreshold
  2236 ;;		_ADCC_Initialize_AverageMode
  2237 ;;		_ADCC_Initialize_BasicMode
  2238 ;;		_ADCC_Initialize_BurstAverageMode
  2239 ;;		_ADCC_Initialize_LowPassFilterMode
  2240 ;;		_ADCC_SetChannel
  2241 ;;		_EUSART1_IsTxReady
  2242 ;;		_EUSART1_Write
  2243 ;;		_TMR0_Reload
  2244 ;;		_TMR0_Start
  2245 ;;		_TMR0_Stop
  2246 ;;		_TMR4_PeriodCountSet
  2247 ;;		_TMR4_Start
  2248 ;;		_TMR4_Stop
  2249 ;;		_printf
  2250 ;; This function is called by:
  2251 ;;		_main
  2252 ;; This function uses a non-reentrant model
  2253 ;;
  2254                           
  2255                           	psect	text17
  2256   010000                     __ptext17:
  2257                           	callstack 0
  2258   010000                     _ApplicationTask:
  2259                           	callstack 21
  2260                           
  2261                           ;application.c: 25:     switch (count)
  2262                           
  2263                           ; BSR set to: 14
  2264                           ;incstack = 0
  2265   010000  D196               	goto	l2689
  2266   010002                     l2555:
  2267                           
  2268                           ;application.c: 29:             if (!basicModeInit)
  2269   010002  503D               	movf	_basicModeInit^0,w,c	;volatile
  2270   010004  E135               	bnz	l2571
  2271                           
  2272                           ;application.c: 30:             {;application.c: 32:                 Timer0.Stop();
  2273   010006  EE20  F046         	lfsr	2,_Timer0+6
  2274   01000A  D801               	call	u1298
  2275   01000C  D00A               	goto	u1299
  2276   01000E                     u1298:
  2277   01000E  0005               	push	
  2278   010010  6EFA               	movwf	pclath,c
  2279   010012  50DE               	movf	postinc2,w,c
  2280   010014  6EFD               	movwf	tosl,c
  2281   010016  50DE               	movf	postinc2,w,c
  2282   010018  6EFE               	movwf	tosh,c
  2283   01001A  50DE               	movf	postinc2,w,c
  2284   01001C  6EFF               	movwf	tosu,c
  2285   01001E  50FA               	movf	pclath,w,c
  2286   010020  0012               	return		;indir
  2287   010022                     u1299:
  2288                           
  2289                           ;application.c: 33:                 Timer0.PeriodCountSet(0x13);
  2290   010022  0E00               	movlw	0
  2291   010024  6E04               	movwf	(TMR0_Reload@periodVal+1)^0,c
  2292   010026  0E13               	movlw	19
  2293   010028  D9A1               	call	PL28	;call to abstracted procedure
  2294   01002A  D801               	call	u1308
  2295   01002C  D00A               	goto	u1309
  2296   01002E                     u1308:
  2297   01002E  0005               	push	
  2298   010030  6EFA               	movwf	pclath,c
  2299   010032  50DE               	movf	postinc2,w,c
  2300   010034  6EFD               	movwf	tosl,c
  2301   010036  50DE               	movf	postinc2,w,c
  2302   010038  6EFE               	movwf	tosh,c
  2303   01003A  50DE               	movf	postinc2,w,c
  2304   01003C  6EFF               	movwf	tosu,c
  2305   01003E  50FA               	movf	pclath,w,c
  2306   010040  0012               	return		;indir
  2307   010042                     u1309:
  2308   010042  9A82               	bcf	130,5,c	;volatile
  2309   010044  9882               	bcf	130,4,c	;volatile
  2310                           
  2311                           ;application.c: 38:                 ADCC_Initialize_BasicMode();
  2312   010046  ECEE  F084         	call	_ADCC_Initialize_BasicMode	;wreg free
  2313                           
  2314                           ;application.c: 39:                 ADCC_SetChannel(POT_DATA);
  2315   01004A  0E00               	movlw	0
  2316   01004C  ECF7  F084         	call	_ADCC_SetChannel
  2317                           
  2318                           ;application.c: 41:                 Timer0.Start();
  2319   010050  EE20  F043         	lfsr	2,_Timer0+3
  2320   010054  D801               	call	u1318
  2321   010056  D00A               	goto	u1319
  2322   010058                     u1318:
  2323   010058  0005               	push	
  2324   01005A  6EFA               	movwf	pclath,c
  2325   01005C  50DE               	movf	postinc2,w,c
  2326   01005E  6EFD               	movwf	tosl,c
  2327   010060  50DE               	movf	postinc2,w,c
  2328   010062  6EFE               	movwf	tosh,c
  2329   010064  50DE               	movf	postinc2,w,c
  2330   010066  6EFF               	movwf	tosu,c
  2331   010068  50FA               	movf	pclath,w,c
  2332   01006A  0012               	return		;indir
  2333   01006C                     u1319:
  2334                           
  2335                           ;application.c: 42:                 basicModeInit = 1;
  2336   01006C  0E01               	movlw	1
  2337   01006E  6E3D               	movwf	_basicModeInit^0,c	;volatile
  2338   010070                     l2571:
  2339                           
  2340                           ;application.c: 45:             if (adcReadyFlag)
  2341   010070  503E               	movf	_adcReadyFlag^0,w,c	;volatile
  2342   010072  B4D8               	btfsc	status,2,c
  2343   010074  0012               	return	
  2344                           
  2345                           ;application.c: 46:             {;application.c: 47:                 adcReadyFlag = 0;
  2346   010076  6A3E               	clrf	_adcReadyFlag^0,c	;volatile
  2347                           
  2348                           ;application.c: 48:                 printf("Basic Mode - ADRES=%d \r\n", ADRES);
  2349   010078  0EE6               	movlw	low STR_1
  2350   01007A  6E23               	movwf	printf@fmt^0,c
  2351   01007C  0EFF               	movlw	high STR_1
  2352   01007E  6E24               	movwf	(printf@fmt+1)^0,c
  2353   010080  CF5E F025          	movff	3934,?_printf+2	;volatile
  2354   010084  CF5F F026          	movff	3935,?_printf+3	;volatile
  2355   010088  EFA2  F084         	goto	_printf	;wreg free
  2356   01008C                     l2577:
  2357                           
  2358                           ;application.c: 54:             if (!avgModeInit)
  2359   01008C  503C               	movf	_avgModeInit^0,w,c	;volatile
  2360   01008E  E126               	bnz	l2595
  2361                           
  2362                           ;application.c: 55:             {;application.c: 57:                 Timer0.Stop();
  2363   010090  EE20  F046         	lfsr	2,_Timer0+6
  2364   010094  D801               	call	u1348
  2365   010096  D00A               	goto	u1349
  2366   010098                     u1348:
  2367   010098  0005               	push	
  2368   01009A  6EFA               	movwf	pclath,c
  2369   01009C  50DE               	movf	postinc2,w,c
  2370   01009E  6EFD               	movwf	tosl,c
  2371   0100A0  50DE               	movf	postinc2,w,c
  2372   0100A2  6EFE               	movwf	tosh,c
  2373   0100A4  50DE               	movf	postinc2,w,c
  2374   0100A6  6EFF               	movwf	tosu,c
  2375   0100A8  50FA               	movf	pclath,w,c
  2376   0100AA  0012               	return		;indir
  2377   0100AC                     u1349:
  2378   0100AC  9A82               	bcf	130,5,c	;volatile
  2379   0100AE  8882               	bsf	130,4,c	;volatile
  2380                           
  2381                           ;application.c: 62:                 ADCC_Initialize_AverageMode();
  2382   0100B0  EC7C  F084         	call	_ADCC_Initialize_AverageMode	;wreg free
  2383                           
  2384                           ; BSR set to: 15
  2385                           ;application.c: 63:                 ADCC_SetChannel(POT_DATA);
  2386   0100B4  0E00               	movlw	0
  2387   0100B6  ECF7  F084         	call	_ADCC_SetChannel
  2388                           
  2389                           ;application.c: 65:                 Timer0.Start();
  2390   0100BA  EE20  F043         	lfsr	2,_Timer0+3
  2391   0100BE  D801               	call	u1358
  2392   0100C0  D00A               	goto	u1359
  2393   0100C2                     u1358:
  2394   0100C2  0005               	push	
  2395   0100C4  6EFA               	movwf	pclath,c
  2396   0100C6  50DE               	movf	postinc2,w,c
  2397   0100C8  6EFD               	movwf	tosl,c
  2398   0100CA  50DE               	movf	postinc2,w,c
  2399   0100CC  6EFE               	movwf	tosh,c
  2400   0100CE  50DE               	movf	postinc2,w,c
  2401   0100D0  6EFF               	movwf	tosu,c
  2402   0100D2  50FA               	movf	pclath,w,c
  2403   0100D4  0012               	return		;indir
  2404   0100D6                     u1359:
  2405                           
  2406                           ;application.c: 66:                 avgModeInit = 1;
  2407   0100D6  0E01               	movlw	1
  2408   0100D8  6E3C               	movwf	_avgModeInit^0,c	;volatile
  2409                           
  2410                           ;application.c: 67:                 basicModeInit = 0;
  2411   0100DA  6A3D               	clrf	_basicModeInit^0,c	;volatile
  2412   0100DC                     l2595:
  2413                           
  2414                           ;application.c: 70:             if (adcReadyFlag)
  2415   0100DC  503E               	movf	_adcReadyFlag^0,w,c	;volatile
  2416   0100DE  E007               	bz	l2601
  2417                           
  2418                           ;application.c: 71:             {;application.c: 72:                 adcReadyFlag = 0;
  2419   0100E0  6A3E               	clrf	_adcReadyFlag^0,c	;volatile
  2420                           
  2421                           ;application.c: 73:                 printf("AVG Mode - ADFLT=%d \r\n", ADFLTR);
  2422   0100E2  0ECF               	movlw	low (STR_5+6)
  2423   0100E4  6E23               	movwf	printf@fmt^0,c
  2424   0100E6  0EFF               	movlw	high (STR_5+6)
  2425   0100E8  D936               	call	PL12	;call to abstracted procedure
  2426   0100EA  ECA2  F084         	call	_printf	;wreg free
  2427   0100EE                     l2601:
  2428                           
  2429                           ;application.c: 76:             if (ADCC_HasErrorCrossedUpperThreshold())
  2430   0100EE  EC01  F085         	call	_ADCC_HasErrorCrossedUpperThreshold	;wreg free
  2431   0100F2  0900               	iorlw	0
  2432   0100F4  E004               	bz	l2605
  2433                           
  2434                           ;application.c: 77:             {;application.c: 78:                 printf("AVG Mode - 
      +                          ADFLT=%d - SP=%d - UT=%d - UT Crossed\r\n", ADFLTR, ADSTPT, ADUTH);
  2435   0100F6  0E96               	movlw	low (STR_6+6)
  2436   0100F8  6E23               	movwf	printf@fmt^0,c
  2437   0100FA  0EFF               	movlw	high (STR_6+6)
  2438   0100FC  D041               	goto	L1
  2439   0100FE                     l2605:
  2440   0100FE  EC04  F085         	call	_ADCC_HasErrorCrossedLowerThreshold	;wreg free
  2441   010102  0900               	iorlw	0
  2442   010104  B4D8               	btfsc	status,2,c
  2443   010106  0012               	return	
  2444                           
  2445                           ;application.c: 83:             {;application.c: 84:                     printf("AVG Mod
      +                          e - ADFLT=%d - SP=%d - LT=%d - LT Crossed\r\n", ADFLTR, ADSTPT, ADLTH);
  2446   010108  0E5D               	movlw	low (STR_7+6)
  2447   01010A  6E23               	movwf	printf@fmt^0,c
  2448   01010C  0EFF               	movlw	high (STR_7+6)
  2449   01010E  D048               	goto	L2
  2450   010110                     l2609:
  2451                           
  2452                           ;application.c: 88:             if (!burstAvgModeInit)
  2453   010110  503B               	movf	_burstAvgModeInit^0,w,c	;volatile
  2454   010112  E126               	bnz	l2627
  2455                           
  2456                           ;application.c: 89:             {;application.c: 91:                 Timer0.Stop();
  2457   010114  EE20  F046         	lfsr	2,_Timer0+6
  2458   010118  D801               	call	u1408
  2459   01011A  D00A               	goto	u1409
  2460   01011C                     u1408:
  2461   01011C  0005               	push	
  2462   01011E  6EFA               	movwf	pclath,c
  2463   010120  50DE               	movf	postinc2,w,c
  2464   010122  6EFD               	movwf	tosl,c
  2465   010124  50DE               	movf	postinc2,w,c
  2466   010126  6EFE               	movwf	tosh,c
  2467   010128  50DE               	movf	postinc2,w,c
  2468   01012A  6EFF               	movwf	tosu,c
  2469   01012C  50FA               	movf	pclath,w,c
  2470   01012E  0012               	return		;indir
  2471   010130                     u1409:
  2472   010130  8A82               	bsf	130,5,c	;volatile
  2473   010132  9882               	bcf	130,4,c	;volatile
  2474                           
  2475                           ;application.c: 96:                 ADCC_Initialize_BurstAverageMode();
  2476   010134  EC29  F084         	call	_ADCC_Initialize_BurstAverageMode	;wreg free
  2477                           
  2478                           ; BSR set to: 15
  2479                           ;application.c: 97:                 ADCC_SetChannel(POT_DATA);
  2480   010138  0E00               	movlw	0
  2481   01013A  ECF7  F084         	call	_ADCC_SetChannel
  2482                           
  2483                           ;application.c: 99:                 Timer0.Start();
  2484   01013E  EE20  F043         	lfsr	2,_Timer0+3
  2485   010142  D801               	call	u1418
  2486   010144  D00A               	goto	u1419
  2487   010146                     u1418:
  2488   010146  0005               	push	
  2489   010148  6EFA               	movwf	pclath,c
  2490   01014A  50DE               	movf	postinc2,w,c
  2491   01014C  6EFD               	movwf	tosl,c
  2492   01014E  50DE               	movf	postinc2,w,c
  2493   010150  6EFE               	movwf	tosh,c
  2494   010152  50DE               	movf	postinc2,w,c
  2495   010154  6EFF               	movwf	tosu,c
  2496   010156  50FA               	movf	pclath,w,c
  2497   010158  0012               	return		;indir
  2498   01015A                     u1419:
  2499                           
  2500                           ;application.c: 100:                 burstAvgModeInit = 1;
  2501   01015A  0E01               	movlw	1
  2502   01015C  6E3B               	movwf	_burstAvgModeInit^0,c	;volatile
  2503                           
  2504                           ;application.c: 101:                 avgModeInit = 0;
  2505   01015E  6A3C               	clrf	_avgModeInit^0,c	;volatile
  2506   010160                     l2627:
  2507                           
  2508                           ;application.c: 105:            if (adcReadyFlag)
  2509   010160  503E               	movf	_adcReadyFlag^0,w,c	;volatile
  2510   010162  E007               	bz	l2633
  2511                           
  2512                           ;application.c: 106:             {;application.c: 107:                 adcReadyFlag = 0;
  2513   010164  6A3E               	clrf	_adcReadyFlag^0,c	;volatile
  2514                           
  2515                           ;application.c: 108:                 printf("Burst AVG Mode - ADFLT=%d \r\n", ADFLTR);
  2516   010166  0EC9               	movlw	low STR_5
  2517   010168  6E23               	movwf	printf@fmt^0,c
  2518   01016A  0EFF               	movlw	high STR_5
  2519   01016C  D8F4               	call	PL12	;call to abstracted procedure
  2520   01016E  ECA2  F084         	call	_printf	;wreg free
  2521   010172                     l2633:
  2522                           
  2523                           ;application.c: 111:            if (ADCC_HasErrorCrossedUpperThreshold())
  2524   010172  EC01  F085         	call	_ADCC_HasErrorCrossedUpperThreshold	;wreg free
  2525   010176  0900               	iorlw	0
  2526   010178  E00B               	bz	l2637
  2527                           
  2528                           ;application.c: 112:             {;application.c: 113:                 printf("Burst AVG
      +                           Mode - ADFLT=%d - SP=%d - UT=%d - UT Crossed\r\n", ADFLTR, ADSTPT, ADUTH);
  2529   01017A  0E90               	movlw	low STR_6
  2530   01017C  6E23               	movwf	printf@fmt^0,c
  2531   01017E  0EFF               	movlw	high STR_6
  2532   010180                     L1:
  2533   010180  D8EA               	call	PL12	;call to abstracted procedure
  2534   010182  D8EF               	call	PL26	;call to abstracted procedure
  2535   010184  CF67 F029          	movff	3943,?_printf+6	;volatile
  2536   010188  CF68 F02A          	movff	3944,?_printf+7	;volatile
  2537   01018C  EFA2  F084         	goto	_printf	;wreg free
  2538   010190                     l2637:
  2539   010190  EC04  F085         	call	_ADCC_HasErrorCrossedLowerThreshold	;wreg free
  2540   010194  0900               	iorlw	0
  2541   010196  B4D8               	btfsc	status,2,c
  2542   010198  0012               	return	
  2543                           
  2544                           ;application.c: 118:             {;application.c: 119:                printf("Burst AVG 
      +                          Mode - ADFLT=%d - SP=%d - LT=%d - LT Crossed\r\n", ADFLTR, ADSTPT, ADLTH);
  2545   01019A  0E57               	movlw	low STR_7
  2546   01019C  6E23               	movwf	printf@fmt^0,c
  2547   01019E  0EFF               	movlw	high STR_7
  2548   0101A0                     L2:
  2549   0101A0  D8DA               	call	PL12	;call to abstracted procedure
  2550   0101A2  D8DF               	call	PL26	;call to abstracted procedure
  2551   0101A4  CF65 F029          	movff	3941,?_printf+6	;volatile
  2552   0101A8  CF66 F02A          	movff	3942,?_printf+7	;volatile
  2553   0101AC  EFA2  F084         	goto	_printf	;wreg free
  2554   0101B0                     l2641:
  2555                           
  2556                           ;application.c: 124:             if (!lpfModeInit)
  2557   0101B0  503A               	movf	_lpfModeInit^0,w,c	;volatile
  2558   0101B2  E136               	bnz	l2659
  2559                           
  2560                           ;application.c: 125:             {;application.c: 127:                 Timer0.Stop();
  2561   0101B4  EE20  F046         	lfsr	2,_Timer0+6
  2562   0101B8  D801               	call	u1468
  2563   0101BA  D00A               	goto	u1469
  2564   0101BC                     u1468:
  2565   0101BC  0005               	push	
  2566   0101BE  6EFA               	movwf	pclath,c
  2567   0101C0  50DE               	movf	postinc2,w,c
  2568   0101C2  6EFD               	movwf	tosl,c
  2569   0101C4  50DE               	movf	postinc2,w,c
  2570   0101C6  6EFE               	movwf	tosh,c
  2571   0101C8  50DE               	movf	postinc2,w,c
  2572   0101CA  6EFF               	movwf	tosu,c
  2573   0101CC  50FA               	movf	pclath,w,c
  2574   0101CE  0012               	return		;indir
  2575   0101D0                     u1469:
  2576                           
  2577                           ;application.c: 128:                 Timer0.PeriodCountSet(0x01);
  2578   0101D0  0E00               	movlw	0
  2579   0101D2  6E04               	movwf	(TMR0_Reload@periodVal+1)^0,c
  2580   0101D4  0E01               	movlw	1
  2581   0101D6  D8CA               	call	PL28	;call to abstracted procedure
  2582   0101D8  D801               	call	u1478
  2583   0101DA  D00A               	goto	u1479
  2584   0101DC                     u1478:
  2585   0101DC  0005               	push	
  2586   0101DE  6EFA               	movwf	pclath,c
  2587   0101E0  50DE               	movf	postinc2,w,c
  2588   0101E2  6EFD               	movwf	tosl,c
  2589   0101E4  50DE               	movf	postinc2,w,c
  2590   0101E6  6EFE               	movwf	tosh,c
  2591   0101E8  50DE               	movf	postinc2,w,c
  2592   0101EA  6EFF               	movwf	tosu,c
  2593   0101EC  50FA               	movf	pclath,w,c
  2594   0101EE  0012               	return		;indir
  2595   0101F0                     u1479:
  2596   0101F0  8A82               	bsf	130,5,c	;volatile
  2597   0101F2  8882               	bsf	130,4,c	;volatile
  2598                           
  2599                           ;application.c: 133:                 ADCC_Initialize_LowPassFilterMode();
  2600   0101F4  ECD1  F084         	call	_ADCC_Initialize_LowPassFilterMode	;wreg free
  2601                           
  2602                           ;application.c: 134:                 ADCC_SetChannel(FG_DATA);
  2603   0101F8  0E01               	movlw	1
  2604   0101FA  ECF7  F084         	call	_ADCC_SetChannel
  2605                           
  2606                           ;application.c: 136:                 Timer0.Start();
  2607   0101FE  EE20  F043         	lfsr	2,_Timer0+3
  2608   010202  D801               	call	u1488
  2609   010204  D00A               	goto	u1489
  2610   010206                     u1488:
  2611   010206  0005               	push	
  2612   010208  6EFA               	movwf	pclath,c
  2613   01020A  50DE               	movf	postinc2,w,c
  2614   01020C  6EFD               	movwf	tosl,c
  2615   01020E  50DE               	movf	postinc2,w,c
  2616   010210  6EFE               	movwf	tosh,c
  2617   010212  50DE               	movf	postinc2,w,c
  2618   010214  6EFF               	movwf	tosu,c
  2619   010216  50FA               	movf	pclath,w,c
  2620   010218  0012               	return		;indir
  2621   01021A                     u1489:
  2622                           
  2623                           ;application.c: 137:                 lpfModeInit = 1;
  2624   01021A  0E01               	movlw	1
  2625   01021C  6E3A               	movwf	_lpfModeInit^0,c	;volatile
  2626                           
  2627                           ;application.c: 138:                 burstAvgModeInit = 0;
  2628   01021E  6A3B               	clrf	_burstAvgModeInit^0,c	;volatile
  2629   010220                     l2659:
  2630                           
  2631                           ;application.c: 141:             if (adcReadyFlag)
  2632   010220  503E               	movf	_adcReadyFlag^0,w,c	;volatile
  2633   010222  B4D8               	btfsc	status,2,c
  2634   010224  0012               	return	
  2635                           
  2636                           ;application.c: 142:             {;application.c: 143:                 adcReadyFlag = 0;
  2637   010226  6A3E               	clrf	_adcReadyFlag^0,c	;volatile
  2638   010228                     l2663:
  2639   010228  D88F               	call	PL2	;call to abstracted procedure
  2640   01022A  D801               	call	u1508
  2641   01022C  D00D               	goto	u1509
  2642   01022E                     u1508:
  2643   01022E  0005               	push	
  2644   010230  6EFA               	movwf	pclath,c
  2645   010232  0009               	tblrd		*+
  2646   010234  50F5               	movf	tablat,w,c
  2647   010236  6EFD               	movwf	tosl,c
  2648   010238  0009               	tblrd		*+
  2649   01023A  50F5               	movf	tablat,w,c
  2650   01023C  6EFE               	movwf	tosh,c
  2651   01023E  0009               	tblrd		*+
  2652   010240  50F5               	movf	tablat,w,c
  2653   010242  6EFF               	movwf	tosu,c
  2654   010244  50FA               	movf	pclath,w,c
  2655   010246  0012               	return		;indir
  2656   010248                     u1509:
  2657   010248  0900               	iorlw	0
  2658   01024A  E0EE               	bz	l2663
  2659                           
  2660                           ; BSR set to: 14
  2661                           ;application.c: 145:                 EUSART1_Write(0x03);
  2662   01024C  0E03               	movlw	3
  2663   01024E  ECF3  F084         	call	_EUSART1_Write
  2664   010252                     l2667:
  2665   010252  D87A               	call	PL2	;call to abstracted procedure
  2666   010254  D801               	call	u1528
  2667   010256  D00D               	goto	u1529
  2668   010258                     u1528:
  2669   010258  0005               	push	
  2670   01025A  6EFA               	movwf	pclath,c
  2671   01025C  0009               	tblrd		*+
  2672   01025E  50F5               	movf	tablat,w,c
  2673   010260  6EFD               	movwf	tosl,c
  2674   010262  0009               	tblrd		*+
  2675   010264  50F5               	movf	tablat,w,c
  2676   010266  6EFE               	movwf	tosh,c
  2677   010268  0009               	tblrd		*+
  2678   01026A  50F5               	movf	tablat,w,c
  2679   01026C  6EFF               	movwf	tosu,c
  2680   01026E  50FA               	movf	pclath,w,c
  2681   010270  0012               	return		;indir
  2682   010272                     u1529:
  2683   010272  0900               	iorlw	0
  2684   010274  E0EE               	bz	l2667
  2685                           
  2686                           ; BSR set to: 14
  2687                           ;application.c: 147:                 EUSART1_Write(ADRESL);
  2688   010276  010F               	movlb	15	; () banked
  2689   010278  515E               	movf	94,w,b	;volatile
  2690   01027A  ECF3  F084         	call	_EUSART1_Write
  2691   01027E                     l2671:
  2692   01027E  D864               	call	PL2	;call to abstracted procedure
  2693   010280  D801               	call	u1548
  2694   010282  D00D               	goto	u1549
  2695   010284                     u1548:
  2696   010284  0005               	push	
  2697   010286  6EFA               	movwf	pclath,c
  2698   010288  0009               	tblrd		*+
  2699   01028A  50F5               	movf	tablat,w,c
  2700   01028C  6EFD               	movwf	tosl,c
  2701   01028E  0009               	tblrd		*+
  2702   010290  50F5               	movf	tablat,w,c
  2703   010292  6EFE               	movwf	tosh,c
  2704   010294  0009               	tblrd		*+
  2705   010296  50F5               	movf	tablat,w,c
  2706   010298  6EFF               	movwf	tosu,c
  2707   01029A  50FA               	movf	pclath,w,c
  2708   01029C  0012               	return		;indir
  2709   01029E                     u1549:
  2710   01029E  0900               	iorlw	0
  2711   0102A0  E0EE               	bz	l2671
  2712                           
  2713                           ; BSR set to: 14
  2714                           ;application.c: 149:                 EUSART1_Write(ADRESH);
  2715   0102A2  010F               	movlb	15	; () banked
  2716   0102A4  515F               	movf	95,w,b	;volatile
  2717   0102A6  ECF3  F084         	call	_EUSART1_Write
  2718   0102AA                     l2675:
  2719   0102AA  D84E               	call	PL2	;call to abstracted procedure
  2720   0102AC  D801               	call	u1568
  2721   0102AE  D00D               	goto	u1569
  2722   0102B0                     u1568:
  2723   0102B0  0005               	push	
  2724   0102B2  6EFA               	movwf	pclath,c
  2725   0102B4  0009               	tblrd		*+
  2726   0102B6  50F5               	movf	tablat,w,c
  2727   0102B8  6EFD               	movwf	tosl,c
  2728   0102BA  0009               	tblrd		*+
  2729   0102BC  50F5               	movf	tablat,w,c
  2730   0102BE  6EFE               	movwf	tosh,c
  2731   0102C0  0009               	tblrd		*+
  2732   0102C2  50F5               	movf	tablat,w,c
  2733   0102C4  6EFF               	movwf	tosu,c
  2734   0102C6  50FA               	movf	pclath,w,c
  2735   0102C8  0012               	return		;indir
  2736   0102CA                     u1569:
  2737   0102CA  0900               	iorlw	0
  2738   0102CC  E0EE               	bz	l2675
  2739                           
  2740                           ; BSR set to: 14
  2741                           ;application.c: 151:                 EUSART1_Write(ADFLTRL);
  2742   0102CE  506D               	movf	109,w,c	;volatile
  2743   0102D0  ECF3  F084         	call	_EUSART1_Write
  2744   0102D4                     l2679:
  2745   0102D4  D839               	call	PL2	;call to abstracted procedure
  2746   0102D6  D801               	call	u1588
  2747   0102D8  D00D               	goto	u1589
  2748   0102DA                     u1588:
  2749   0102DA  0005               	push	
  2750   0102DC  6EFA               	movwf	pclath,c
  2751   0102DE  0009               	tblrd		*+
  2752   0102E0  50F5               	movf	tablat,w,c
  2753   0102E2  6EFD               	movwf	tosl,c
  2754   0102E4  0009               	tblrd		*+
  2755   0102E6  50F5               	movf	tablat,w,c
  2756   0102E8  6EFE               	movwf	tosh,c
  2757   0102EA  0009               	tblrd		*+
  2758   0102EC  50F5               	movf	tablat,w,c
  2759   0102EE  6EFF               	movwf	tosu,c
  2760   0102F0  50FA               	movf	pclath,w,c
  2761   0102F2  0012               	return		;indir
  2762   0102F4                     u1589:
  2763   0102F4  0900               	iorlw	0
  2764   0102F6  E0EE               	bz	l2679
  2765                           
  2766                           ; BSR set to: 14
  2767                           ;application.c: 153:                 EUSART1_Write(ADFLTRH);
  2768   0102F8  506E               	movf	110,w,c	;volatile
  2769   0102FA  ECF3  F084         	call	_EUSART1_Write
  2770   0102FE                     l2683:
  2771   0102FE  D824               	call	PL2	;call to abstracted procedure
  2772   010300  D801               	call	u1608
  2773   010302  D00D               	goto	u1609
  2774   010304                     u1608:
  2775   010304  0005               	push	
  2776   010306  6EFA               	movwf	pclath,c
  2777   010308  0009               	tblrd		*+
  2778   01030A  50F5               	movf	tablat,w,c
  2779   01030C  6EFD               	movwf	tosl,c
  2780   01030E  0009               	tblrd		*+
  2781   010310  50F5               	movf	tablat,w,c
  2782   010312  6EFE               	movwf	tosh,c
  2783   010314  0009               	tblrd		*+
  2784   010316  50F5               	movf	tablat,w,c
  2785   010318  6EFF               	movwf	tosu,c
  2786   01031A  50FA               	movf	pclath,w,c
  2787   01031C  0012               	return		;indir
  2788   01031E                     u1609:
  2789   01031E  0900               	iorlw	0
  2790   010320  E0EE               	bz	l2683
  2791                           
  2792                           ; BSR set to: 14
  2793                           ;application.c: 155:                 EUSART1_Write(0xFC);
  2794   010322  0EFC               	movlw	252
  2795   010324  EFF3  F084         	goto	_EUSART1_Write
  2796   010328                     l860:
  2797                           
  2798                           ;application.c: 161:             count = 0;
  2799   010328  6A3F               	clrf	_count^0,c	;volatile
  2800                           
  2801                           ;application.c: 162:             lpfModeInit = 0;
  2802   01032A  6A3A               	clrf	_lpfModeInit^0,c	;volatile
  2803                           
  2804                           ;application.c: 163:             break;
  2805   01032C  0012               	return	
  2806   01032E                     l2689:
  2807   01032E  503F               	movf	_count^0,w,c	;volatile
  2808                           
  2809                           ; Switch size 1, requested type "space"
  2810                           ; Number of cases is 4, Range of values is 0 to 3
  2811                           ; switch strategies available:
  2812                           ; Name         Instructions Cycles
  2813                           ; simple_byte           13     7 (average)
  2814                           ;	Chosen strategy is simple_byte
  2815   010330  E101 D667          	bz	l2555
  2816   010334  0A01               	xorlw	1	; case 1
  2817   010336  E101 D6A9          	bz	l2577
  2818   01033A  0A03               	xorlw	3	; case 2
  2819   01033C  E101 D6E8          	bz	l2609
  2820   010340  0A01               	xorlw	1	; case 3
  2821   010342  E101 D735          	bz	l2641
  2822   010346  D7F0               	goto	l860
  2823   010348                     __end_of_ApplicationTask:
  2824                           	callstack 0
  2825   010348                     PL2:
  2826                           	callstack 21
  2827   010348  0E0C               	movlw	low (_UART1+15)
  2828   01034A  6EF6               	movwf	tblptrl,c
  2829   01034C  0EFF               	movlw	high (_UART1+15)
  2830   01034E  6EF7               	movwf	tblptrh,c
  2831   010350                     	if	0	;tblptru may be non-zero
  2832   010350                     	endif
  2833   010350                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2834   010350  0E00               	movlw	low (__mediumconst shr (0+16))
  2835   010352  6EF8               	movwf	tblptru,c
  2836   010354                     	endif
  2837   010354  0012               	return	
  2838   010356                     __end_ofPL2:
  2839                           	callstack 0
  2840   010356                     PL12:
  2841                           	callstack 21
  2842   010356  6E24               	movwf	(printf@fmt+1)^0,c
  2843   010358  CF6D F025          	movff	3949,?_printf+2	;volatile
  2844   01035C  CF6E F026          	movff	3950,?_printf+3	;volatile
  2845   010360  0012               	return	
  2846   010362                     __end_ofPL12:
  2847                           	callstack 0
  2848   010362                     PL26:
  2849                           	callstack 21
  2850   010362  CF63 F027          	movff	3939,?_printf+4	;volatile
  2851   010366  CF64 F028          	movff	3940,?_printf+5	;volatile
  2852   01036A  0012               	return	
  2853   01036C                     __end_ofPL26:
  2854                           	callstack 0
  2855   01036C                     PL28:
  2856                           	callstack 21
  2857   01036C  6E03               	movwf	TMR0_Reload@periodVal^0,c
  2858   01036E  EE20  F049         	lfsr	2,_Timer0+9
  2859   010372  0012               	return	
  2860   010374                     __end_ofPL28:
  2861                           	callstack 0
  2862                           
  2863 ;; *************** function _printf *****************
  2864 ;; Defined at:
  2865 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\printf.c"
  2866 ;; Parameters:    Size  Location     Type
  2867 ;;  fmt             2   34[COMRAM] PTR const unsigned char 
  2868 ;;		 -> STR_7(57), STR_6(57), STR_5(29), STR_4(51), 
  2869 ;;		 -> STR_3(51), STR_2(23), STR_1(25), 
  2870 ;; Auto vars:     Size  Location     Type
  2871 ;;  ret             2    0        int 
  2872 ;;  ap              1   42[COMRAM] PTR void [1]
  2873 ;;		 -> ?_printf(2), 
  2874 ;; Return value:  Size  Location     Type
  2875 ;;                  2   34[COMRAM] int 
  2876 ;; Registers used:
  2877 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2878 ;; Tracked objects:
  2879 ;;		On entry : 0/E
  2880 ;;		On exit  : 0/0
  2881 ;;		Unchanged: 0/0
  2882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2883 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2884 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2886 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2887 ;;Total ram usage:        9 bytes
  2888 ;; Hardware stack levels used: 1
  2889 ;; Hardware stack levels required when called: 8
  2890 ;; This function calls:
  2891 ;;		_vfprintf
  2892 ;; This function is called by:
  2893 ;;		_ApplicationTask
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896                           
  2897                           	psect	text18
  2898   010944                     __ptext18:
  2899                           	callstack 0
  2900   010944                     _printf:
  2901                           	callstack 21
  2902                           
  2903                           ;incstack = 0
  2904   010944  0E25               	movlw	low (?_printf+2)
  2905   010946  6E2B               	movwf	printf@ap^0,c
  2906   010948  6A1C               	clrf	vfprintf@fp^0,c
  2907   01094A  6A1D               	clrf	(vfprintf@fp+1)^0,c
  2908   01094C  C023  F01E         	movff	printf@fmt,vfprintf@fmt
  2909   010950  C024  F01F         	movff	printf@fmt+1,vfprintf@fmt+1
  2910   010954  0E2B               	movlw	low printf@ap
  2911   010956  6E20               	movwf	vfprintf@ap^0,c
  2912   010958  EFBA  F083         	goto	_vfprintf	;wreg free
  2913   01095C                     __end_of_printf:
  2914                           	callstack 0
  2915                           
  2916 ;; *************** function _vfprintf *****************
  2917 ;; Defined at:
  2918 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  2919 ;; Parameters:    Size  Location     Type
  2920 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2921 ;;		 -> NULL(0), 
  2922 ;;  fmt             2   29[COMRAM] PTR const unsigned char 
  2923 ;;		 -> STR_7(57), STR_6(57), STR_5(29), STR_4(51), 
  2924 ;;		 -> STR_3(51), STR_2(23), STR_1(25), 
  2925 ;;  ap              1   31[COMRAM] PTR PTR void 
  2926 ;;		 -> printf@ap(1), 
  2927 ;; Auto vars:     Size  Location     Type
  2928 ;;  cfmt            2   32[COMRAM] PTR unsigned char 
  2929 ;;		 -> STR_7(57), STR_6(57), STR_5(29), STR_4(51), 
  2930 ;;		 -> STR_3(51), STR_2(23), STR_1(25), 
  2931 ;; Return value:  Size  Location     Type
  2932 ;;                  2   27[COMRAM] int 
  2933 ;; Registers used:
  2934 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2935 ;; Tracked objects:
  2936 ;;		On entry : 0/E
  2937 ;;		On exit  : 0/0
  2938 ;;		Unchanged: 0/0
  2939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2940 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2941 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2943 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2944 ;;Total ram usage:        7 bytes
  2945 ;; Hardware stack levels used: 1
  2946 ;; Hardware stack levels required when called: 7
  2947 ;; This function calls:
  2948 ;;		_vfpfcnvrt
  2949 ;; This function is called by:
  2950 ;;		_printf
  2951 ;; This function uses a non-reentrant model
  2952 ;;
  2953                           
  2954                           	psect	text19
  2955   010774                     __ptext19:
  2956                           	callstack 0
  2957   010774                     _vfprintf:
  2958                           	callstack 21
  2959                           
  2960                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2961                           
  2962                           ;incstack = 0
  2963   010774  C01E  F021         	movff	vfprintf@fmt,vfprintf@cfmt
  2964   010778  C01F  F022         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2965                           
  2966                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2967   01077C  D00A               	goto	l2435
  2968   01077E                     l2433:
  2969                           
  2970                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2971   01077E  C01C  F00E         	movff	vfprintf@fp,vfpfcnvrt@fp
  2972   010782  C01D  F00F         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2973   010786  0E21               	movlw	low vfprintf@cfmt
  2974   010788  6E10               	movwf	vfpfcnvrt@fmt^0,c
  2975   01078A  C020  F011         	movff	vfprintf@ap,vfpfcnvrt@ap
  2976   01078E  ECBA  F081         	call	_vfpfcnvrt	;wreg free
  2977   010792                     l2435:
  2978                           
  2979                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2980   010792  C021  FFF6         	movff	vfprintf@cfmt,tblptrl
  2981   010796  C022  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2982   01079A                     	if	0	;tblptru may be non-zero
  2983   01079A                     	endif
  2984   01079A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2985   01079A  EC37  F082         	call	PL14	;call to abstracted procedure
  2986   01079E  E1EF               	bnz	l2433
  2987                           
  2988                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2989   0107A0  6A1C               	clrf	?_vfprintf^0,c
  2990   0107A2  6A1D               	clrf	(?_vfprintf+1)^0,c
  2991   0107A4  0012               	return		;funcret
  2992   0107A6                     __end_of_vfprintf:
  2993                           	callstack 0
  2994                           
  2995 ;; *************** function _vfpfcnvrt *****************
  2996 ;; Defined at:
  2997 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  2998 ;; Parameters:    Size  Location     Type
  2999 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  3000 ;;		 -> NULL(0), 
  3001 ;;  fmt             1   15[COMRAM] PTR PTR unsigned char 
  3002 ;;		 -> vfprintf@cfmt(2), 
  3003 ;;  ap              1   16[COMRAM] PTR PTR void 
  3004 ;;		 -> printf@ap(1), 
  3005 ;; Auto vars:     Size  Location     Type
  3006 ;;  convarg         4   22[COMRAM] struct .
  3007 ;;  cp              2   20[COMRAM] PTR unsigned char 
  3008 ;;		 -> STR_7(57), STR_6(57), STR_5(29), STR_4(51), 
  3009 ;;		 -> STR_3(51), STR_2(23), STR_1(25), 
  3010 ;;  c               1   26[COMRAM] unsigned char 
  3011 ;;  done            1   19[COMRAM] _Bool 
  3012 ;; Return value:  Size  Location     Type
  3013 ;;                  1    wreg      void 
  3014 ;; Registers used:
  3015 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3016 ;; Tracked objects:
  3017 ;;		On entry : 0/E
  3018 ;;		On exit  : 0/0
  3019 ;;		Unchanged: 0/0
  3020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3021 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3022 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3023 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3024 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3025 ;;Total ram usage:       14 bytes
  3026 ;; Hardware stack levels used: 1
  3027 ;; Hardware stack levels required when called: 6
  3028 ;; This function calls:
  3029 ;;		___awdiv
  3030 ;;		___awmod
  3031 ;;		_abs
  3032 ;;		_fputc
  3033 ;; This function is called by:
  3034 ;;		_vfprintf
  3035 ;; This function uses a non-reentrant model
  3036 ;;
  3037                           
  3038                           	psect	text20
  3039   010374                     __ptext20:
  3040                           	callstack 0
  3041   010374                     _vfpfcnvrt:
  3042                           	callstack 0
  3043                           
  3044                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  3045                           
  3046                           ;incstack = 0
  3047   010374  D870               	call	PL10	;call to abstracted procedure
  3048   010376  0A25               	xorlw	37
  3049   010378  E169               	bnz	l2413
  3050                           
  3051                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  3052   01037A  D88A               	call	PL22	;call to abstracted procedure
  3053                           
  3054                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  3055   01037C  5010               	movf	vfpfcnvrt@fmt^0,w,c
  3056   01037E  6ED9               	movwf	fsr2l,c
  3057   010380  6ADA               	clrf	fsr2h,c
  3058   010382  CFDE F015          	movff	postinc2,vfpfcnvrt@cp
  3059   010386  CFDD F016          	movff	postdec2,vfpfcnvrt@cp+1
  3060                           
  3061                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  3062   01038A  D876               	call	PL16	;call to abstracted procedure
  3063   01038C  D870               	call	PL14	;call to abstracted procedure
  3064   01038E  0A64               	xorlw	100
  3065   010390  E004               	bz	u1150
  3066   010392  D872               	call	PL16	;call to abstracted procedure
  3067   010394  D86C               	call	PL14	;call to abstracted procedure
  3068   010396  0A69               	xorlw	105
  3069   010398  E157               	bnz	l2409
  3070   01039A                     u1150:
  3071                           
  3072                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3073   01039A  5011               	movf	vfpfcnvrt@ap^0,w,c
  3074   01039C  6ED9               	movwf	fsr2l,c
  3075   01039E  6ADA               	clrf	fsr2h,c
  3076   0103A0  0E02               	movlw	2
  3077   0103A2  26DF               	addwf	indf2,f,c
  3078   0103A4  5CDF               	subwf	indf2,w,c
  3079   0103A6  6ED9               	movwf	fsr2l,c
  3080   0103A8  6ADA               	clrf	fsr2h,c
  3081   0103AA  CFDE F017          	movff	postinc2,vfpfcnvrt@convarg
  3082   0103AE  CFDE F018          	movff	postinc2,vfpfcnvrt@convarg+1
  3083                           
  3084                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  3085   0103B2  2815               	incf	vfpfcnvrt@cp^0,w,c
  3086   0103B4  6E12               	movwf	??_vfpfcnvrt^0,c
  3087   0103B6  0E00               	movlw	0
  3088   0103B8  2016               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  3089   0103BA  6E13               	movwf	(??_vfpfcnvrt+1)^0,c
  3090   0103BC  5010               	movf	vfpfcnvrt@fmt^0,w,c
  3091   0103BE  6ED9               	movwf	fsr2l,c
  3092   0103C0  6ADA               	clrf	fsr2h,c
  3093   0103C2  C012  FFDE         	movff	??_vfpfcnvrt,postinc2
  3094   0103C6  C013  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  3095                           
  3096                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  3097   0103CA  0E20               	movlw	32
  3098   0103CC  6E1B               	movwf	vfpfcnvrt@c^0,c
  3099   0103CE  0E01               	movlw	1
  3100                           
  3101                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  3102   0103D0  AE18               	btfss	(vfpfcnvrt@convarg+1)^0,7,c
  3103   0103D2  0E00               	movlw	0
  3104   0103D4  6E14               	movwf	vfpfcnvrt@done^0,c
  3105   0103D6                     l2389:
  3106                           
  3107                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  3108   0103D6  061B               	decf	vfpfcnvrt@c^0,f,c
  3109   0103D8  D862               	call	PL24	;call to abstracted procedure
  3110   0103DA  C017  F003         	movff	vfpfcnvrt@convarg,___awmod@dividend
  3111   0103DE  C018  F004         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  3112   0103E2  6A06               	clrf	(___awmod@divisor+1)^0,c
  3113   0103E4  0E0A               	movlw	10
  3114   0103E6  6E05               	movwf	___awmod@divisor^0,c
  3115   0103E8  EC16  F083         	call	___awmod	;wreg free
  3116   0103EC  C003  F009         	movff	?___awmod,abs@a
  3117   0103F0  C004  F00A         	movff	?___awmod+1,abs@a+1
  3118   0103F4  EC15  F084         	call	_abs	;wreg free
  3119   0103F8  5009               	movf	?_abs^0,w,c
  3120   0103FA  0F30               	addlw	48
  3121   0103FC  6EDF               	movwf	indf2,c
  3122                           
  3123                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  3124   0103FE  C017  F003         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  3125   010402  C018  F004         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  3126   010406  6A06               	clrf	(___awdiv@divisor+1)^0,c
  3127   010408  0E0A               	movlw	10
  3128   01040A  6E05               	movwf	___awdiv@divisor^0,c
  3129   01040C  ECDA  F082         	call	___awdiv	;wreg free
  3130   010410  C003  F017         	movff	?___awdiv,vfpfcnvrt@convarg
  3131   010414  C004  F018         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  3132                           
  3133                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  3134   010418  5017               	movf	vfpfcnvrt@convarg^0,w,c
  3135   01041A  1018               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  3136   01041C  E002               	bz	u1190
  3137   01041E  501B               	movf	vfpfcnvrt@c^0,w,c
  3138   010420  E1DA               	bnz	l2389
  3139   010422                     u1190:
  3140                           
  3141                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  3142   010422  501B               	movf	vfpfcnvrt@c^0,w,c
  3143   010424  E00D               	bz	l2407
  3144   010426  5014               	movf	vfpfcnvrt@done^0,w,c
  3145   010428  E00B               	bz	l2407
  3146                           
  3147                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  3148   01042A  061B               	decf	vfpfcnvrt@c^0,f,c
  3149   01042C  D838               	call	PL24	;call to abstracted procedure
  3150   01042E  0E2D               	movlw	45
  3151   010430  6EDF               	movwf	indf2,c
  3152   010432  D006               	goto	l2407
  3153   010434                     l2403:
  3154                           
  3155                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  3156   010434  D834               	call	PL24	;call to abstracted procedure
  3157   010436  50DF               	movf	indf2,w,c
  3158   010438  D824               	call	PL20	;call to abstracted procedure
  3159   01043A  EC54  F082         	call	_fputc	;wreg free
  3160   01043E  2A1B               	incf	vfpfcnvrt@c^0,f,c
  3161   010440                     l2407:
  3162                           
  3163                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  3164   010440  0E20               	movlw	32
  3165   010442  181B               	xorwf	vfpfcnvrt@c^0,w,c
  3166   010444  E1F7               	bnz	l2403
  3167   010446  0012               	return	
  3168   010448                     l2409:
  3169                           
  3170                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  3171   010448  D823               	call	PL22	;call to abstracted procedure
  3172   01044A  0C00               	retlw	0
  3173   01044C                     l2413:
  3174                           
  3175                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  3176   01044C  D804               	call	PL10	;call to abstracted procedure
  3177   01044E  D819               	call	PL20	;call to abstracted procedure
  3178   010450  EC54  F082         	call	_fputc	;wreg free
  3179   010454  D7F9               	goto	l2409
  3180   010456                     __end_of_vfpfcnvrt:
  3181                           	callstack 0
  3182   010456                     PL10:
  3183                           	callstack 21
  3184   010456  5010               	movf	vfpfcnvrt@fmt^0,w,c
  3185   010458  6ED9               	movwf	fsr2l,c
  3186   01045A  6ADA               	clrf	fsr2h,c
  3187   01045C  CFDE FFF6          	movff	postinc2,tblptrl
  3188   010460  CFDD FFF7          	movff	postdec2,tblptrh
  3189   010464                     	if	0	;tblptru may be non-zero
  3190   010464                     	endif
  3191   010464                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3192   010464  0E00               	movlw	low (__mediumconst shr (0+16))
  3193   010466  6EF8               	movwf	tblptru,c
  3194   010468                     	endif
  3195   010468  0008               	tblrd		*
  3196   01046A  50F5               	movf	tablat,w,c
  3197   01046C  0012               	return	
  3198   01046E                     __end_ofPL10:
  3199                           	callstack 0
  3200   01046E                     PL14:
  3201                           	callstack 21
  3202   01046E  0E00               	movlw	low (__mediumconst shr (0+16))
  3203   010470  6EF8               	movwf	tblptru,c
  3204   010472                     	endif
  3205   010472  0008               	tblrd		*
  3206   010474  50F5               	movf	tablat,w,c
  3207   010476  0012               	return	
  3208   010478                     __end_ofPL14:
  3209                           	callstack 0
  3210   010478                     PL16:
  3211                           	callstack 21
  3212   010478  C015  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3213   01047C  C016  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3214   010480                     	if	0	;tblptru may be non-zero
  3215   010480                     	endif
  3216   010480                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3217   010480  0012               	return	
  3218   010482                     __end_ofPL16:
  3219                           	callstack 0
  3220   010482                     PL20:
  3221                           	callstack 21
  3222   010482  6E05               	movwf	fputc@c^0,c
  3223   010484  6A06               	clrf	(fputc@c+1)^0,c
  3224   010486  C00E  F007         	movff	vfpfcnvrt@fp,fputc@fp
  3225   01048A  C00F  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3226   01048E  0012               	return	
  3227   010490                     __end_ofPL20:
  3228                           	callstack 0
  3229   010490                     PL22:
  3230                           	callstack 21
  3231   010490  5010               	movf	vfpfcnvrt@fmt^0,w,c
  3232   010492  6ED9               	movwf	fsr2l,c
  3233   010494  6ADA               	clrf	fsr2h,c
  3234   010496  2ADE               	incf	postinc2,f,c
  3235   010498  0E00               	movlw	0
  3236   01049A  22DD               	addwfc	postdec2,f,c
  3237   01049C  0C00               	retlw	0
  3238   01049E                     __end_ofPL22:
  3239                           	callstack 0
  3240   01049E                     PL24:
  3241                           	callstack 21
  3242   01049E  501B               	movf	vfpfcnvrt@c^0,w,c
  3243   0104A0  0F60               	addlw	low _dbuf
  3244   0104A2  6ED9               	movwf	fsr2l,c
  3245   0104A4  6ADA               	clrf	fsr2h,c
  3246   0104A6  0012               	return	
  3247   0104A8                     __end_ofPL24:
  3248                           	callstack 0
  3249                           
  3250 ;; *************** function _fputc *****************
  3251 ;; Defined at:
  3252 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  3253 ;; Parameters:    Size  Location     Type
  3254 ;;  c               2    4[COMRAM] int 
  3255 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  3256 ;;		 -> NULL(0), 
  3257 ;; Auto vars:     Size  Location     Type
  3258 ;;		None
  3259 ;; Return value:  Size  Location     Type
  3260 ;;                  2    4[COMRAM] int 
  3261 ;; Registers used:
  3262 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3263 ;; Tracked objects:
  3264 ;;		On entry : 0/E
  3265 ;;		On exit  : 0/0
  3266 ;;		Unchanged: 0/0
  3267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3268 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3270 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3271 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3272 ;;Total ram usage:        9 bytes
  3273 ;; Hardware stack levels used: 1
  3274 ;; Hardware stack levels required when called: 5
  3275 ;; This function calls:
  3276 ;;		_putch
  3277 ;; This function is called by:
  3278 ;;		_vfpfcnvrt
  3279 ;; This function uses a non-reentrant model
  3280 ;;
  3281                           
  3282                           	psect	text21
  3283   0104A8                     __ptext21:
  3284                           	callstack 0
  3285   0104A8                     _fputc:
  3286                           	callstack 21
  3287                           
  3288                           ;incstack = 0
  3289   0104A8  5007               	movf	fputc@fp^0,w,c
  3290   0104AA  1008               	iorwf	(fputc@fp+1)^0,w,c
  3291   0104AC  E003               	bz	u1090
  3292   0104AE  5007               	movf	fputc@fp^0,w,c
  3293   0104B0  1008               	iorwf	(fputc@fp+1)^0,w,c
  3294   0104B2  E103               	bnz	l2361
  3295   0104B4                     u1090:
  3296   0104B4  5005               	movf	fputc@c^0,w,c
  3297   0104B6  EFC9  F084         	goto	_putch
  3298   0104BA                     l2361:
  3299   0104BA  EE20 F00A          	lfsr	2,10
  3300   0104BE  D834               	call	PL18	;call to abstracted procedure
  3301   0104C0  50DE               	movf	postinc2,w,c
  3302   0104C2  10DE               	iorwf	postinc2,w,c
  3303   0104C4  E013               	bz	u1110
  3304   0104C6  EE20 F00A          	lfsr	2,10
  3305   0104CA  D82E               	call	PL18	;call to abstracted procedure
  3306   0104CC  EE10 F003          	lfsr	1,3
  3307   0104D0  5007               	movf	fputc@fp^0,w,c
  3308   0104D2  26E1               	addwf	fsr1l,f,c
  3309   0104D4  5008               	movf	(fputc@fp+1)^0,w,c
  3310   0104D6  22E2               	addwfc	fsr1h,f,c
  3311   0104D8  50DE               	movf	postinc2,w,c
  3312   0104DA  5CE6               	subwf	postinc1,w,c
  3313   0104DC  50E6               	movf	postinc1,w,c
  3314   0104DE  0A80               	xorlw	128
  3315   0104E0  6E0D               	movwf	(??_fputc+4)^0,c
  3316   0104E2  50DE               	movf	postinc2,w,c
  3317   0104E4  0A80               	xorlw	128
  3318   0104E6  580D               	subwfb	(??_fputc+4)^0,w,c
  3319   0104E8  B0D8               	btfsc	status,0,c
  3320   0104EA  0012               	return	
  3321   0104EC                     u1110:
  3322   0104EC  EE20 F003          	lfsr	2,3
  3323   0104F0  D81B               	call	PL18	;call to abstracted procedure
  3324   0104F2  CFDE F009          	movff	postinc2,??_fputc
  3325   0104F6  CFDD F00A          	movff	postdec2,??_fputc+1
  3326   0104FA  C007  FFD9         	movff	fputc@fp,fsr2l
  3327   0104FE  C008  FFDA         	movff	fputc@fp+1,fsr2h
  3328   010502  CFDE F00B          	movff	postinc2,??_fputc+2
  3329   010506  CFDD F00C          	movff	postdec2,??_fputc+3
  3330   01050A  5009               	movf	??_fputc^0,w,c
  3331   01050C  240B               	addwf	(??_fputc+2)^0,w,c
  3332   01050E  6ED9               	movwf	fsr2l,c
  3333   010510  500A               	movf	(??_fputc+1)^0,w,c
  3334   010512  200C               	addwfc	(??_fputc+3)^0,w,c
  3335   010514  6EDA               	movwf	fsr2h,c
  3336   010516  C005  FFDF         	movff	fputc@c,indf2
  3337   01051A  EE20 F003          	lfsr	2,3
  3338   01051E  D804               	call	PL18	;call to abstracted procedure
  3339   010520  2ADE               	incf	postinc2,f,c
  3340   010522  0E00               	movlw	0
  3341   010524  22DD               	addwfc	postdec2,f,c
  3342   010526  0C00               	retlw	0	;funcret
  3343   010528                     __end_of_fputc:
  3344                           	callstack 0
  3345   010528                     PL18:
  3346                           	callstack 21
  3347   010528  5007               	movf	fputc@fp^0,w,c
  3348   01052A  26D9               	addwf	fsr2l,f,c
  3349   01052C  5008               	movf	(fputc@fp+1)^0,w,c
  3350   01052E  22DA               	addwfc	fsr2h,f,c
  3351   010530  0012               	return	
  3352   010532                     __end_ofPL18:
  3353                           	callstack 0
  3354                           
  3355 ;; *************** function _putch *****************
  3356 ;; Defined at:
  3357 ;;		line 246 in file "mcc_generated_files/uart/src/eusart1.c"
  3358 ;; Parameters:    Size  Location     Type
  3359 ;;  txData          1    wreg     unsigned char 
  3360 ;; Auto vars:     Size  Location     Type
  3361 ;;  txData          1    3[COMRAM] unsigned char 
  3362 ;; Return value:  Size  Location     Type
  3363 ;;                  1    wreg      void 
  3364 ;; Registers used:
  3365 ;;		wreg, status,2, cstack
  3366 ;; Tracked objects:
  3367 ;;		On entry : 0/E
  3368 ;;		On exit  : 0/0
  3369 ;;		Unchanged: 0/0
  3370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3372 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3374 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3375 ;;Total ram usage:        1 bytes
  3376 ;; Hardware stack levels used: 1
  3377 ;; Hardware stack levels required when called: 4
  3378 ;; This function calls:
  3379 ;;		_EUSART1_IsTxReady
  3380 ;;		_EUSART1_Write
  3381 ;; This function is called by:
  3382 ;;		_fputc
  3383 ;; This function uses a non-reentrant model
  3384 ;;
  3385                           
  3386                           	psect	text22
  3387   010992                     __ptext22:
  3388                           	callstack 0
  3389   010992                     _putch:
  3390                           	callstack 21
  3391                           
  3392                           ;incstack = 0
  3393                           ;putch@txData stored from wreg
  3394   010992  6E04               	movwf	putch@txData^0,c
  3395   010994                     
  3396                           ;mcc_generated_files/uart/src/eusart1.c: 246: void putch(char txData);mcc_generated_file
      +                          s/uart/src/eusart1.c: 247: {;mcc_generated_files/uart/src/eusart1.c: 248:     while(!(EU
      +                          SART1_IsTxReady()));
  3397   010994  ECC0  F084         	call	_EUSART1_IsTxReady	;wreg free
  3398   010998  0900               	iorlw	0
  3399   01099A  E0FC               	bz	l2267
  3400                           
  3401                           ; BSR set to: 14
  3402                           ;mcc_generated_files/uart/src/eusart1.c: 249:     return EUSART1_Write(txData);;	Return 
      +                          value of _putch is never used
  3403   01099C  5004               	movf	putch@txData^0,w,c
  3404   01099E  EFF3  F084         	goto	_EUSART1_Write
  3405   0109A2                     __end_of_putch:
  3406                           	callstack 0
  3407                           
  3408 ;; *************** function _EUSART1_Write *****************
  3409 ;; Defined at:
  3410 ;;		line 235 in file "mcc_generated_files/uart/src/eusart1.c"
  3411 ;; Parameters:    Size  Location     Type
  3412 ;;  txData          1    wreg     unsigned char 
  3413 ;; Auto vars:     Size  Location     Type
  3414 ;;  txData          1    2[COMRAM] unsigned char 
  3415 ;; Return value:  Size  Location     Type
  3416 ;;                  1    wreg      void 
  3417 ;; Registers used:
  3418 ;;		wreg
  3419 ;; Tracked objects:
  3420 ;;		On entry : 3E/E
  3421 ;;		On exit  : 0/0
  3422 ;;		Unchanged: 0/0
  3423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3425 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3427 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3428 ;;Total ram usage:        1 bytes
  3429 ;; Hardware stack levels used: 1
  3430 ;; Hardware stack levels required when called: 3
  3431 ;; This function calls:
  3432 ;;		Nothing
  3433 ;; This function is called by:
  3434 ;;		_putch
  3435 ;;		_ApplicationTask
  3436 ;; This function uses a non-reentrant model
  3437 ;;
  3438                           
  3439                           	psect	text23
  3440   0109E6                     __ptext23:
  3441                           	callstack 0
  3442   0109E6                     _EUSART1_Write:
  3443                           	callstack 21
  3444                           
  3445                           ;incstack = 0
  3446                           ;EUSART1_Write@txData stored from wreg
  3447   0109E6  6E03               	movwf	EUSART1_Write@txData^0,c
  3448                           
  3449                           ;mcc_generated_files/uart/src/eusart1.c: 235: void EUSART1_Write(uint8_t txData);mcc_gen
      +                          erated_files/uart/src/eusart1.c: 236: {;mcc_generated_files/uart/src/eusart1.c: 237:    
      +                           TX1REG = txData;
  3450   0109E8  C003  FF99         	movff	EUSART1_Write@txData,3993	;volatile
  3451   0109EC  0012               	return		;funcret
  3452   0109EE                     __end_of_EUSART1_Write:
  3453                           	callstack 0
  3454                           
  3455 ;; *************** function _EUSART1_IsTxReady *****************
  3456 ;; Defined at:
  3457 ;;		line 198 in file "mcc_generated_files/uart/src/eusart1.c"
  3458 ;; Parameters:    Size  Location     Type
  3459 ;;		None
  3460 ;; Auto vars:     Size  Location     Type
  3461 ;;		None
  3462 ;; Return value:  Size  Location     Type
  3463 ;;                  1    wreg      _Bool 
  3464 ;; Registers used:
  3465 ;;		wreg, status,2
  3466 ;; Tracked objects:
  3467 ;;		On entry : 0/E
  3468 ;;		On exit  : 3F/E
  3469 ;;		Unchanged: 0/0
  3470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3472 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3474 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3475 ;;Total ram usage:        1 bytes
  3476 ;; Hardware stack levels used: 1
  3477 ;; Hardware stack levels required when called: 3
  3478 ;; This function calls:
  3479 ;;		Nothing
  3480 ;; This function is called by:
  3481 ;;		_putch
  3482 ;;		_ApplicationTask
  3483 ;; This function uses a non-reentrant model
  3484 ;;
  3485                           
  3486                           	psect	text24
  3487   010980                     __ptext24:
  3488                           	callstack 0
  3489   010980                     _EUSART1_IsTxReady:
  3490                           	callstack 21
  3491                           
  3492                           ;mcc_generated_files/uart/src/eusart1.c: 200:     return (_Bool)(PIR3bits.TX1IF && TX1ST
      +                          Abits.TXEN);
  3493                           
  3494                           ;incstack = 0
  3495   010980  6A03               	clrf	_EUSART1_IsTxReady$1490^0,c
  3496   010982  010E               	movlb	14	; () banked
  3497   010984  B9C8               	btfsc	200,4,b	;volatile
  3498                           
  3499                           ; BSR set to: 14
  3500   010986  AA9D               	btfss	157,5,c	;volatile
  3501   010988  D002               	goto	l656
  3502                           
  3503                           ; BSR set to: 14
  3504   01098A  0E01               	movlw	1
  3505   01098C  6E03               	movwf	_EUSART1_IsTxReady$1490^0,c
  3506   01098E                     l656:
  3507                           
  3508                           ; BSR set to: 14
  3509   01098E  5003               	movf	_EUSART1_IsTxReady$1490^0,w,c
  3510                           
  3511                           ; BSR set to: 14
  3512   010990  0012               	return		;funcret
  3513   010992                     __end_of_EUSART1_IsTxReady:
  3514                           	callstack 0
  3515                           
  3516 ;; *************** function _abs *****************
  3517 ;; Defined at:
  3518 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  3519 ;; Parameters:    Size  Location     Type
  3520 ;;  a               2    8[COMRAM] int 
  3521 ;; Auto vars:     Size  Location     Type
  3522 ;;		None
  3523 ;; Return value:  Size  Location     Type
  3524 ;;                  2    8[COMRAM] int 
  3525 ;; Registers used:
  3526 ;;		wreg, status,2, status,0
  3527 ;; Tracked objects:
  3528 ;;		On entry : 0/E
  3529 ;;		On exit  : 0/0
  3530 ;;		Unchanged: 0/0
  3531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3532 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3534 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3535 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3536 ;;Total ram usage:        4 bytes
  3537 ;; Hardware stack levels used: 1
  3538 ;; Hardware stack levels required when called: 3
  3539 ;; This function calls:
  3540 ;;		Nothing
  3541 ;; This function is called by:
  3542 ;;		_vfpfcnvrt
  3543 ;; This function uses a non-reentrant model
  3544 ;;
  3545                           
  3546                           	psect	text25
  3547   01082A                     __ptext25:
  3548                           	callstack 0
  3549   01082A                     _abs:
  3550                           	callstack 23
  3551                           
  3552                           ; BSR set to: 14
  3553                           ;incstack = 0
  3554   01082A  BE0A               	btfsc	(abs@a+1)^0,7,c
  3555   01082C  D005               	goto	l1612
  3556   01082E  C009  F009         	movff	abs@a,?_abs
  3557   010832  C00A  F00A         	movff	abs@a+1,?_abs+1
  3558   010836  0012               	return	
  3559   010838                     l1612:
  3560   010838  C009  F00B         	movff	abs@a,??_abs
  3561   01083C  C00A  F00C         	movff	abs@a+1,??_abs+1
  3562   010840  1E0B               	comf	??_abs^0,f,c
  3563   010842  1E0C               	comf	(??_abs+1)^0,f,c
  3564   010844  4A0B               	infsnz	??_abs^0,f,c
  3565   010846  2A0C               	incf	(??_abs+1)^0,f,c
  3566   010848  C00B  F009         	movff	??_abs,?_abs
  3567   01084C  C00C  F00A         	movff	??_abs+1,?_abs+1
  3568   010850  0012               	return		;funcret
  3569   010852                     __end_of_abs:
  3570                           	callstack 0
  3571                           
  3572 ;; *************** function ___awmod *****************
  3573 ;; Defined at:
  3574 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  3575 ;; Parameters:    Size  Location     Type
  3576 ;;  dividend        2    2[COMRAM] int 
  3577 ;;  divisor         2    4[COMRAM] int 
  3578 ;; Auto vars:     Size  Location     Type
  3579 ;;  sign            1    7[COMRAM] unsigned char 
  3580 ;;  counter         1    6[COMRAM] unsigned char 
  3581 ;; Return value:  Size  Location     Type
  3582 ;;                  2    2[COMRAM] int 
  3583 ;; Registers used:
  3584 ;;		wreg, status,2, status,0
  3585 ;; Tracked objects:
  3586 ;;		On entry : 0/E
  3587 ;;		On exit  : 0/0
  3588 ;;		Unchanged: 0/0
  3589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3590 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3591 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3593 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3594 ;;Total ram usage:        6 bytes
  3595 ;; Hardware stack levels used: 1
  3596 ;; Hardware stack levels required when called: 3
  3597 ;; This function calls:
  3598 ;;		Nothing
  3599 ;; This function is called by:
  3600 ;;		_vfpfcnvrt
  3601 ;; This function uses a non-reentrant model
  3602 ;;
  3603                           
  3604                           	psect	text26
  3605   01062C                     __ptext26:
  3606                           	callstack 0
  3607   01062C                     ___awmod:
  3608                           	callstack 23
  3609                           
  3610                           ;incstack = 0
  3611   01062C  6A08               	clrf	___awmod@sign^0,c
  3612   01062E  AE04               	btfss	(___awmod@dividend+1)^0,7,c
  3613   010630  D006               	goto	l2327
  3614   010632  6C03               	negf	___awmod@dividend^0,c
  3615   010634  1E04               	comf	(___awmod@dividend+1)^0,f,c
  3616   010636  B0D8               	btfsc	status,0,c
  3617   010638  2A04               	incf	(___awmod@dividend+1)^0,f,c
  3618   01063A  0E01               	movlw	1
  3619   01063C  6E08               	movwf	___awmod@sign^0,c
  3620   01063E                     l2327:
  3621   01063E  AE06               	btfss	(___awmod@divisor+1)^0,7,c
  3622   010640  D004               	goto	l2331
  3623   010642  6C05               	negf	___awmod@divisor^0,c
  3624   010644  1E06               	comf	(___awmod@divisor+1)^0,f,c
  3625   010646  B0D8               	btfsc	status,0,c
  3626   010648  2A06               	incf	(___awmod@divisor+1)^0,f,c
  3627   01064A                     l2331:
  3628   01064A  5005               	movf	___awmod@divisor^0,w,c
  3629   01064C  1006               	iorwf	(___awmod@divisor+1)^0,w,c
  3630   01064E  E017               	bz	l2347
  3631   010650  0E01               	movlw	1
  3632   010652  6E07               	movwf	___awmod@counter^0,c
  3633   010654  D004               	goto	l2337
  3634   010656                     l2335:
  3635   010656  90D8               	bcf	status,0,c
  3636   010658  3605               	rlcf	___awmod@divisor^0,f,c
  3637   01065A  3606               	rlcf	(___awmod@divisor+1)^0,f,c
  3638   01065C  2A07               	incf	___awmod@counter^0,f,c
  3639   01065E                     l2337:
  3640   01065E  AE06               	btfss	(___awmod@divisor+1)^0,7,c
  3641   010660  D7FA               	goto	l2335
  3642   010662                     u1050:
  3643   010662  5005               	movf	___awmod@divisor^0,w,c
  3644   010664  5C03               	subwf	___awmod@dividend^0,w,c
  3645   010666  5006               	movf	(___awmod@divisor+1)^0,w,c
  3646   010668  5804               	subwfb	(___awmod@dividend+1)^0,w,c
  3647   01066A  E304               	bnc	l2343
  3648   01066C  5005               	movf	___awmod@divisor^0,w,c
  3649   01066E  5E03               	subwf	___awmod@dividend^0,f,c
  3650   010670  5006               	movf	(___awmod@divisor+1)^0,w,c
  3651   010672  5A04               	subwfb	(___awmod@dividend+1)^0,f,c
  3652   010674                     l2343:
  3653   010674  90D8               	bcf	status,0,c
  3654   010676  3206               	rrcf	(___awmod@divisor+1)^0,f,c
  3655   010678  3205               	rrcf	___awmod@divisor^0,f,c
  3656   01067A  2E07               	decfsz	___awmod@counter^0,f,c
  3657   01067C  D7F2               	goto	u1050
  3658   01067E                     l2347:
  3659   01067E  5008               	movf	___awmod@sign^0,w,c
  3660   010680  E004               	bz	l2351
  3661   010682  6C03               	negf	___awmod@dividend^0,c
  3662   010684  1E04               	comf	(___awmod@dividend+1)^0,f,c
  3663   010686  B0D8               	btfsc	status,0,c
  3664   010688  2A04               	incf	(___awmod@dividend+1)^0,f,c
  3665   01068A                     l2351:
  3666   01068A  C003  F003         	movff	___awmod@dividend,?___awmod
  3667   01068E  C004  F004         	movff	___awmod@dividend+1,?___awmod+1
  3668   010692  0012               	return		;funcret
  3669   010694                     __end_of___awmod:
  3670                           	callstack 0
  3671                           
  3672 ;; *************** function ___awdiv *****************
  3673 ;; Defined at:
  3674 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  3675 ;; Parameters:    Size  Location     Type
  3676 ;;  dividend        2    2[COMRAM] int 
  3677 ;;  divisor         2    4[COMRAM] int 
  3678 ;; Auto vars:     Size  Location     Type
  3679 ;;  quotient        2    8[COMRAM] int 
  3680 ;;  sign            1    7[COMRAM] unsigned char 
  3681 ;;  counter         1    6[COMRAM] unsigned char 
  3682 ;; Return value:  Size  Location     Type
  3683 ;;                  2    2[COMRAM] int 
  3684 ;; Registers used:
  3685 ;;		wreg, status,2, status,0
  3686 ;; Tracked objects:
  3687 ;;		On entry : 0/E
  3688 ;;		On exit  : 0/0
  3689 ;;		Unchanged: 0/0
  3690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3691 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3692 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3694 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3695 ;;Total ram usage:        8 bytes
  3696 ;; Hardware stack levels used: 1
  3697 ;; Hardware stack levels required when called: 3
  3698 ;; This function calls:
  3699 ;;		Nothing
  3700 ;; This function is called by:
  3701 ;;		_vfpfcnvrt
  3702 ;; This function uses a non-reentrant model
  3703 ;;
  3704                           
  3705                           	psect	text27
  3706   0105B4                     __ptext27:
  3707                           	callstack 0
  3708   0105B4                     ___awdiv:
  3709                           	callstack 23
  3710                           
  3711                           ;incstack = 0
  3712   0105B4  6A08               	clrf	___awdiv@sign^0,c
  3713   0105B6  AE06               	btfss	(___awdiv@divisor+1)^0,7,c
  3714   0105B8  D006               	goto	l2283
  3715   0105BA  6C05               	negf	___awdiv@divisor^0,c
  3716   0105BC  1E06               	comf	(___awdiv@divisor+1)^0,f,c
  3717   0105BE  B0D8               	btfsc	status,0,c
  3718   0105C0  2A06               	incf	(___awdiv@divisor+1)^0,f,c
  3719   0105C2  0E01               	movlw	1
  3720   0105C4  6E08               	movwf	___awdiv@sign^0,c
  3721   0105C6                     l2283:
  3722   0105C6  AE04               	btfss	(___awdiv@dividend+1)^0,7,c
  3723   0105C8  D006               	goto	l2289
  3724   0105CA  6C03               	negf	___awdiv@dividend^0,c
  3725   0105CC  1E04               	comf	(___awdiv@dividend+1)^0,f,c
  3726   0105CE  B0D8               	btfsc	status,0,c
  3727   0105D0  2A04               	incf	(___awdiv@dividend+1)^0,f,c
  3728   0105D2  0E01               	movlw	1
  3729   0105D4  1A08               	xorwf	___awdiv@sign^0,f,c
  3730   0105D6                     l2289:
  3731   0105D6  6A09               	clrf	___awdiv@quotient^0,c
  3732   0105D8  6A0A               	clrf	(___awdiv@quotient+1)^0,c
  3733   0105DA  5005               	movf	___awdiv@divisor^0,w,c
  3734   0105DC  1006               	iorwf	(___awdiv@divisor+1)^0,w,c
  3735   0105DE  E01B               	bz	l2311
  3736   0105E0  0E01               	movlw	1
  3737   0105E2  6E07               	movwf	___awdiv@counter^0,c
  3738   0105E4  D004               	goto	l2297
  3739   0105E6                     l2295:
  3740   0105E6  90D8               	bcf	status,0,c
  3741   0105E8  3605               	rlcf	___awdiv@divisor^0,f,c
  3742   0105EA  3606               	rlcf	(___awdiv@divisor+1)^0,f,c
  3743   0105EC  2A07               	incf	___awdiv@counter^0,f,c
  3744   0105EE                     l2297:
  3745   0105EE  AE06               	btfss	(___awdiv@divisor+1)^0,7,c
  3746   0105F0  D7FA               	goto	l2295
  3747   0105F2                     u990:
  3748   0105F2  90D8               	bcf	status,0,c
  3749   0105F4  3609               	rlcf	___awdiv@quotient^0,f,c
  3750   0105F6  360A               	rlcf	(___awdiv@quotient+1)^0,f,c
  3751   0105F8  5005               	movf	___awdiv@divisor^0,w,c
  3752   0105FA  5C03               	subwf	___awdiv@dividend^0,w,c
  3753   0105FC  5006               	movf	(___awdiv@divisor+1)^0,w,c
  3754   0105FE  5804               	subwfb	(___awdiv@dividend+1)^0,w,c
  3755   010600  E305               	bnc	l2307
  3756   010602  5005               	movf	___awdiv@divisor^0,w,c
  3757   010604  5E03               	subwf	___awdiv@dividend^0,f,c
  3758   010606  5006               	movf	(___awdiv@divisor+1)^0,w,c
  3759   010608  5A04               	subwfb	(___awdiv@dividend+1)^0,f,c
  3760   01060A  8009               	bsf	___awdiv@quotient^0,0,c
  3761   01060C                     l2307:
  3762   01060C  90D8               	bcf	status,0,c
  3763   01060E  3206               	rrcf	(___awdiv@divisor+1)^0,f,c
  3764   010610  3205               	rrcf	___awdiv@divisor^0,f,c
  3765   010612  2E07               	decfsz	___awdiv@counter^0,f,c
  3766   010614  D7EE               	goto	u990
  3767   010616                     l2311:
  3768   010616  5008               	movf	___awdiv@sign^0,w,c
  3769   010618  E004               	bz	l2315
  3770   01061A  6C09               	negf	___awdiv@quotient^0,c
  3771   01061C  1E0A               	comf	(___awdiv@quotient+1)^0,f,c
  3772   01061E  B0D8               	btfsc	status,0,c
  3773   010620  2A0A               	incf	(___awdiv@quotient+1)^0,f,c
  3774   010622                     l2315:
  3775   010622  C009  F003         	movff	___awdiv@quotient,?___awdiv
  3776   010626  C00A  F004         	movff	___awdiv@quotient+1,?___awdiv+1
  3777   01062A  0012               	return		;funcret
  3778   01062C                     __end_of___awdiv:
  3779                           	callstack 0
  3780                           
  3781 ;; *************** function _TMR0_Stop *****************
  3782 ;; Defined at:
  3783 ;;		line 80 in file "mcc_generated_files/timer/src/tmr0.c"
  3784 ;; Parameters:    Size  Location     Type
  3785 ;;		None
  3786 ;; Auto vars:     Size  Location     Type
  3787 ;;		None
  3788 ;; Return value:  Size  Location     Type
  3789 ;;                  1    wreg      void 
  3790 ;; Registers used:
  3791 ;;		None
  3792 ;; Tracked objects:
  3793 ;;		On entry : 0/E
  3794 ;;		On exit  : 0/0
  3795 ;;		Unchanged: 0/0
  3796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3801 ;;Total ram usage:        0 bytes
  3802 ;; Hardware stack levels used: 1
  3803 ;; Hardware stack levels required when called: 3
  3804 ;; This function calls:
  3805 ;;		Nothing
  3806 ;; This function is called by:
  3807 ;;		_ApplicationTask
  3808 ;; This function uses a non-reentrant model
  3809 ;;
  3810                           
  3811                           	psect	text28
  3812   010A1A                     __ptext28:
  3813                           	callstack 0
  3814   010A1A                     _TMR0_Stop:
  3815                           	callstack 26
  3816                           
  3817                           ;mcc_generated_files/timer/src/tmr0.c: 82:     T0CON0bits.T0EN = 0;
  3818                           
  3819                           ;incstack = 0
  3820   010A1A  9ED4               	bcf	212,7,c	;volatile
  3821   010A1C  0012               	return		;funcret
  3822   010A1E                     __end_of_TMR0_Stop:
  3823                           	callstack 0
  3824                           
  3825 ;; *************** function _TMR4_Stop *****************
  3826 ;; Defined at:
  3827 ;;		line 100 in file "mcc_generated_files/timer/src/tmr4.c"
  3828 ;; Parameters:    Size  Location     Type
  3829 ;;		None
  3830 ;; Auto vars:     Size  Location     Type
  3831 ;;		None
  3832 ;; Return value:  Size  Location     Type
  3833 ;;                  1    wreg      void 
  3834 ;; Registers used:
  3835 ;;		None
  3836 ;; Tracked objects:
  3837 ;;		On entry : 0/E
  3838 ;;		On exit  : 0/0
  3839 ;;		Unchanged: 0/0
  3840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3845 ;;Total ram usage:        0 bytes
  3846 ;; Hardware stack levels used: 1
  3847 ;; Hardware stack levels required when called: 3
  3848 ;; This function calls:
  3849 ;;		Nothing
  3850 ;; This function is called by:
  3851 ;;		_ApplicationTask
  3852 ;; This function uses a non-reentrant model
  3853 ;;
  3854                           
  3855                           	psect	text29
  3856   010A1E                     __ptext29:
  3857                           	callstack 0
  3858   010A1E                     _TMR4_Stop:
  3859                           	callstack 26
  3860                           
  3861                           ;mcc_generated_files/timer/src/tmr4.c: 103:     T4CONbits.TMR4ON = 0;
  3862                           
  3863                           ;incstack = 0
  3864   010A1E  9EB6               	bcf	182,7,c	;volatile
  3865   010A20  0012               	return		;funcret
  3866   010A22                     __end_of_TMR4_Stop:
  3867                           	callstack 0
  3868                           
  3869 ;; *************** function _TMR0_Start *****************
  3870 ;; Defined at:
  3871 ;;		line 75 in file "mcc_generated_files/timer/src/tmr0.c"
  3872 ;; Parameters:    Size  Location     Type
  3873 ;;		None
  3874 ;; Auto vars:     Size  Location     Type
  3875 ;;		None
  3876 ;; Return value:  Size  Location     Type
  3877 ;;                  1    wreg      void 
  3878 ;; Registers used:
  3879 ;;		None
  3880 ;; Tracked objects:
  3881 ;;		On entry : 0/E
  3882 ;;		On exit  : 0/0
  3883 ;;		Unchanged: 0/0
  3884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3889 ;;Total ram usage:        0 bytes
  3890 ;; Hardware stack levels used: 1
  3891 ;; Hardware stack levels required when called: 3
  3892 ;; This function calls:
  3893 ;;		Nothing
  3894 ;; This function is called by:
  3895 ;;		_ApplicationTask
  3896 ;; This function uses a non-reentrant model
  3897 ;;
  3898                           
  3899                           	psect	text30
  3900   010A22                     __ptext30:
  3901                           	callstack 0
  3902   010A22                     _TMR0_Start:
  3903                           	callstack 26
  3904                           
  3905                           ;mcc_generated_files/timer/src/tmr0.c: 77:     T0CON0bits.T0EN = 1;
  3906                           
  3907                           ;incstack = 0
  3908   010A22  8ED4               	bsf	212,7,c	;volatile
  3909   010A24  0012               	return		;funcret
  3910   010A26                     __end_of_TMR0_Start:
  3911                           	callstack 0
  3912                           
  3913 ;; *************** function _TMR4_Start *****************
  3914 ;; Defined at:
  3915 ;;		line 94 in file "mcc_generated_files/timer/src/tmr4.c"
  3916 ;; Parameters:    Size  Location     Type
  3917 ;;		None
  3918 ;; Auto vars:     Size  Location     Type
  3919 ;;		None
  3920 ;; Return value:  Size  Location     Type
  3921 ;;                  1    wreg      void 
  3922 ;; Registers used:
  3923 ;;		None
  3924 ;; Tracked objects:
  3925 ;;		On entry : 0/E
  3926 ;;		On exit  : 0/0
  3927 ;;		Unchanged: 0/0
  3928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3933 ;;Total ram usage:        0 bytes
  3934 ;; Hardware stack levels used: 1
  3935 ;; Hardware stack levels required when called: 3
  3936 ;; This function calls:
  3937 ;;		Nothing
  3938 ;; This function is called by:
  3939 ;;		_ApplicationTask
  3940 ;; This function uses a non-reentrant model
  3941 ;;
  3942                           
  3943                           	psect	text31
  3944   010A26                     __ptext31:
  3945                           	callstack 0
  3946   010A26                     _TMR4_Start:
  3947                           	callstack 26
  3948                           
  3949                           ;mcc_generated_files/timer/src/tmr4.c: 97:     T4CONbits.TMR4ON = 1;
  3950                           
  3951                           ;incstack = 0
  3952   010A26  8EB6               	bsf	182,7,c	;volatile
  3953   010A28  0012               	return		;funcret
  3954   010A2A                     __end_of_TMR4_Start:
  3955                           	callstack 0
  3956                           
  3957 ;; *************** function _TMR0_Reload *****************
  3958 ;; Defined at:
  3959 ;;		line 101 in file "mcc_generated_files/timer/src/tmr0.c"
  3960 ;; Parameters:    Size  Location     Type
  3961 ;;  periodVal       2    2[COMRAM] unsigned int 
  3962 ;; Auto vars:     Size  Location     Type
  3963 ;;		None
  3964 ;; Return value:  Size  Location     Type
  3965 ;;                  1    wreg      void 
  3966 ;; Registers used:
  3967 ;;		None
  3968 ;; Tracked objects:
  3969 ;;		On entry : 0/E
  3970 ;;		On exit  : 0/0
  3971 ;;		Unchanged: 0/0
  3972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3973 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3976 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3977 ;;Total ram usage:        2 bytes
  3978 ;; Hardware stack levels used: 1
  3979 ;; Hardware stack levels required when called: 3
  3980 ;; This function calls:
  3981 ;;		Nothing
  3982 ;; This function is called by:
  3983 ;;		_ApplicationTask
  3984 ;; This function uses a non-reentrant model
  3985 ;;
  3986                           
  3987                           	psect	text32
  3988   0109F6                     __ptext32:
  3989                           	callstack 0
  3990   0109F6                     _TMR0_Reload:
  3991                           	callstack 26
  3992                           
  3993                           ;mcc_generated_files/timer/src/tmr0.c: 101: void TMR0_Reload(size_t periodVal);mcc_gener
      +                          ated_files/timer/src/tmr0.c: 102: {;mcc_generated_files/timer/src/tmr0.c: 104:    TMR0H 
      +                          = (uint8_t)periodVal;
  3994                           
  3995                           ;incstack = 0
  3996   0109F6  C003  FFD3         	movff	TMR0_Reload@periodVal,4051	;volatile
  3997   0109FA  0012               	return		;funcret
  3998   0109FC                     __end_of_TMR0_Reload:
  3999                           	callstack 0
  4000                           
  4001 ;; *************** function _TMR4_PeriodCountSet *****************
  4002 ;; Defined at:
  4003 ;;		line 119 in file "mcc_generated_files/timer/src/tmr4.c"
  4004 ;; Parameters:    Size  Location     Type
  4005 ;;  periodVal       2    2[COMRAM] unsigned int 
  4006 ;; Auto vars:     Size  Location     Type
  4007 ;;		None
  4008 ;; Return value:  Size  Location     Type
  4009 ;;                  1    wreg      void 
  4010 ;; Registers used:
  4011 ;;		None
  4012 ;; Tracked objects:
  4013 ;;		On entry : 0/E
  4014 ;;		On exit  : 0/0
  4015 ;;		Unchanged: 0/0
  4016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4017 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4020 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4021 ;;Total ram usage:        2 bytes
  4022 ;; Hardware stack levels used: 1
  4023 ;; Hardware stack levels required when called: 3
  4024 ;; This function calls:
  4025 ;;		Nothing
  4026 ;; This function is called by:
  4027 ;;		_ApplicationTask
  4028 ;; This function uses a non-reentrant model
  4029 ;;
  4030                           
  4031                           	psect	text33
  4032   0109FC                     __ptext33:
  4033                           	callstack 0
  4034   0109FC                     _TMR4_PeriodCountSet:
  4035                           	callstack 26
  4036                           
  4037                           ;mcc_generated_files/timer/src/tmr4.c: 119: void TMR4_PeriodCountSet(size_t periodVal);m
      +                          cc_generated_files/timer/src/tmr4.c: 120: {;mcc_generated_files/timer/src/tmr4.c: 121:  
      +                            PR4 = (uint8_t) periodVal;
  4038                           
  4039                           ;incstack = 0
  4040   0109FC  C003  FFB5         	movff	TMR4_PeriodCountSet@periodVal,4021	;volatile
  4041   010A00  0012               	return		;funcret
  4042   010A02                     __end_of_TMR4_PeriodCountSet:
  4043                           	callstack 0
  4044                           
  4045 ;; *************** function _ADCC_SetChannel *****************
  4046 ;; Defined at:
  4047 ;;		line 253 in file "application.c"
  4048 ;; Parameters:    Size  Location     Type
  4049 ;;  channel         1    wreg     enum E12909
  4050 ;; Auto vars:     Size  Location     Type
  4051 ;;  channel         1    2[COMRAM] enum E12909
  4052 ;; Return value:  Size  Location     Type
  4053 ;;                  1    wreg      void 
  4054 ;; Registers used:
  4055 ;;		wreg
  4056 ;; Tracked objects:
  4057 ;;		On entry : 3F/F
  4058 ;;		On exit  : 0/0
  4059 ;;		Unchanged: 0/0
  4060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4062 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4064 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4065 ;;Total ram usage:        1 bytes
  4066 ;; Hardware stack levels used: 1
  4067 ;; Hardware stack levels required when called: 3
  4068 ;; This function calls:
  4069 ;;		Nothing
  4070 ;; This function is called by:
  4071 ;;		_ApplicationTask
  4072 ;; This function uses a non-reentrant model
  4073 ;;
  4074                           
  4075                           	psect	text34
  4076   0109EE                     __ptext34:
  4077                           	callstack 0
  4078   0109EE                     _ADCC_SetChannel:
  4079                           	callstack 26
  4080                           
  4081                           ;incstack = 0
  4082                           ;ADCC_SetChannel@channel stored from wreg
  4083   0109EE  6E03               	movwf	ADCC_SetChannel@channel^0,c
  4084                           
  4085                           ;application.c: 253: void ADCC_SetChannel(adcc_channel_t channel);application.c: 254: {;
      +                          application.c: 256:     ADPCH = channel;
  4086   0109F0  C003  FF5A         	movff	ADCC_SetChannel@channel,3930	;volatile
  4087   0109F4  0012               	return		;funcret
  4088   0109F6                     __end_of_ADCC_SetChannel:
  4089                           	callstack 0
  4090                           
  4091 ;; *************** function _ADCC_Initialize_LowPassFilterMode *****************
  4092 ;; Defined at:
  4093 ;;		line 237 in file "application.c"
  4094 ;; Parameters:    Size  Location     Type
  4095 ;;		None
  4096 ;; Auto vars:     Size  Location     Type
  4097 ;;		None
  4098 ;; Return value:  Size  Location     Type
  4099 ;;                  1    wreg      void 
  4100 ;; Registers used:
  4101 ;;		wreg, status,2
  4102 ;; Tracked objects:
  4103 ;;		On entry : 0/E
  4104 ;;		On exit  : 3F/F
  4105 ;;		Unchanged: 0/0
  4106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4111 ;;Total ram usage:        0 bytes
  4112 ;; Hardware stack levels used: 1
  4113 ;; Hardware stack levels required when called: 3
  4114 ;; This function calls:
  4115 ;;		Nothing
  4116 ;; This function is called by:
  4117 ;;		_ApplicationTask
  4118 ;; This function uses a non-reentrant model
  4119 ;;
  4120                           
  4121                           	psect	text35
  4122   0109A2                     __ptext35:
  4123                           	callstack 0
  4124   0109A2                     _ADCC_Initialize_LowPassFilterMode:
  4125                           	callstack 26
  4126                           
  4127                           ;application.c: 240:     ADRPT = 0x10;
  4128                           
  4129                           ;incstack = 0
  4130   0109A2  0E10               	movlw	16
  4131   0109A4  6E61               	movwf	97,c	;volatile
  4132                           
  4133                           ;application.c: 242:     ADCON2 = 0x34;
  4134   0109A6  0E34               	movlw	52
  4135   0109A8  010F               	movlb	15	; () banked
  4136   0109AA  6F55               	movwf	85,b	;volatile
  4137                           
  4138                           ;application.c: 244:     ADCON3 = 0x57;
  4139   0109AC  0E57               	movlw	87
  4140                           
  4141                           ;application.c: 246:     ADACT = 0x02;
  4142                           
  4143                           ;application.c: 248:     ADCLK = 0x1F;
  4144                           
  4145                           ;application.c: 250:     ADCON0 = 0x84;
  4146                           
  4147                           ; BSR set to: 15
  4148   0109AE  EF82  F084         	goto	__end_of_ADCC_Initialize_AverageMode	;call to abstracted procedure
  4149   0109B2                     __end_of_ADCC_Initialize_LowPassFilterMode:
  4150                           	callstack 0
  4151                           
  4152 ;; *************** function _ADCC_Initialize_BurstAverageMode *****************
  4153 ;; Defined at:
  4154 ;;		line 209 in file "application.c"
  4155 ;; Parameters:    Size  Location     Type
  4156 ;;		None
  4157 ;; Auto vars:     Size  Location     Type
  4158 ;;		None
  4159 ;; Return value:  Size  Location     Type
  4160 ;;                  1    wreg      void 
  4161 ;; Registers used:
  4162 ;;		wreg, status,2
  4163 ;; Tracked objects:
  4164 ;;		On entry : 0/E
  4165 ;;		On exit  : 3F/F
  4166 ;;		Unchanged: 0/0
  4167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4172 ;;Total ram usage:        0 bytes
  4173 ;; Hardware stack levels used: 1
  4174 ;; Hardware stack levels required when called: 3
  4175 ;; This function calls:
  4176 ;;		Nothing
  4177 ;; This function is called by:
  4178 ;;		_ApplicationTask
  4179 ;; This function uses a non-reentrant model
  4180 ;;
  4181                           
  4182                           	psect	text36
  4183   010852                     __ptext36:
  4184                           	callstack 0
  4185   010852                     _ADCC_Initialize_BurstAverageMode:
  4186                           	callstack 0
  4187                           
  4188                           ;application.c: 212:     ADLTHL = 0x38;
  4189                           
  4190                           ; BSR set to: 15
  4191                           ;incstack = 0
  4192                           
  4193                           ;application.c: 214:     ADLTHH = 0xFF;
  4194                           
  4195                           ;application.c: 216:     ADUTHL = 0xC8;
  4196                           
  4197                           ;application.c: 218:     ADUTHH = 0x00;
  4198                           
  4199                           ;application.c: 220:     ADSTPTL = 0xFF;
  4200                           
  4201                           ;application.c: 222:     ADSTPTH = 0x01;
  4202                           
  4203                           ;application.c: 224:     ADRPT = 0x10;
  4204   010852  D807               	call	PL8	;call to abstracted procedure
  4205                           
  4206                           ;application.c: 226:     ADCON2 = 0x43;
  4207   010854  0E43               	movlw	67
  4208                           
  4209                           ;application.c: 228:     ADCON3 = 0x13;
  4210   010856  D802               	call	PL6	;call to abstracted procedure
  4211                           
  4212                           ;application.c: 230:     ADACT = 0x02;
  4213                           
  4214                           ;application.c: 232:     ADCLK = 0x1F;
  4215                           
  4216                           ;application.c: 234:     ADCON0 = 0x84;
  4217                           
  4218                           ; BSR set to: 15
  4219   010858  EF82  F084         	goto	__end_of_ADCC_Initialize_AverageMode	;call to abstracted procedure
  4220   01085C                     __end_of_ADCC_Initialize_BurstAverageMode:
  4221                           	callstack 0
  4222   01085C                     PL6:
  4223                           	callstack 26
  4224   01085C  010F               	movlb	15	; () banked
  4225   01085E  6F55               	movwf	85,b	;volatile
  4226   010860  0C13               	retlw	19
  4227   010862                     __end_ofPL6:
  4228                           	callstack 0
  4229   010862                     PL8:
  4230                           	callstack 26
  4231   010862  0E38               	movlw	56
  4232   010864  6E65               	movwf	101,c	;volatile
  4233   010866  6866               	setf	102,c	;volatile
  4234   010868  0EC8               	movlw	200
  4235   01086A  6E67               	movwf	103,c	;volatile
  4236   01086C  6A68               	clrf	104,c	;volatile
  4237   01086E  6863               	setf	99,c	;volatile
  4238   010870  0E01               	movlw	1
  4239   010872  6E64               	movwf	100,c	;volatile
  4240   010874  0E10               	movlw	16
  4241   010876  6E61               	movwf	97,c	;volatile
  4242   010878  0C10               	retlw	16
  4243   01087A                     __end_ofPL8:
  4244                           	callstack 0
  4245                           
  4246 ;; *************** function _ADCC_Initialize_BasicMode *****************
  4247 ;; Defined at:
  4248 ;;		line 167 in file "application.c"
  4249 ;; Parameters:    Size  Location     Type
  4250 ;;		None
  4251 ;; Auto vars:     Size  Location     Type
  4252 ;;		None
  4253 ;; Return value:  Size  Location     Type
  4254 ;;                  1    wreg      void 
  4255 ;; Registers used:
  4256 ;;		wreg, status,2
  4257 ;; Tracked objects:
  4258 ;;		On entry : 0/E
  4259 ;;		On exit  : 3F/F
  4260 ;;		Unchanged: 0/0
  4261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4266 ;;Total ram usage:        0 bytes
  4267 ;; Hardware stack levels used: 1
  4268 ;; Hardware stack levels required when called: 3
  4269 ;; This function calls:
  4270 ;;		Nothing
  4271 ;; This function is called by:
  4272 ;;		_ApplicationTask
  4273 ;; This function uses a non-reentrant model
  4274 ;;
  4275                           
  4276                           	psect	text37
  4277   0109DC                     __ptext37:
  4278                           	callstack 0
  4279   0109DC                     _ADCC_Initialize_BasicMode:
  4280                           	callstack 26
  4281                           
  4282                           ;application.c: 170:     ADCON2 = 0x00;
  4283                           
  4284                           ; BSR set to: 15
  4285                           ;incstack = 0
  4286   0109DC  010F               	movlb	15	; () banked
  4287   0109DE  6B55               	clrf	85,b	;volatile
  4288                           
  4289                           ; BSR set to: 15
  4290                           ;application.c: 172:     ADCON3 = 0x07;
  4291   0109E0  0E07               	movlw	7
  4292                           
  4293                           ;application.c: 174:     ADACT = 0x02;
  4294                           
  4295                           ;application.c: 176:     ADCLK = 0x1F;
  4296                           
  4297                           ;application.c: 178:     ADCON0 = 0x84;
  4298                           
  4299                           ; BSR set to: 15
  4300   0109E2  EF82  F084         	goto	__end_of_ADCC_Initialize_AverageMode	;call to abstracted procedure
  4301   0109E6                     __end_of_ADCC_Initialize_BasicMode:
  4302                           	callstack 0
  4303                           
  4304 ;; *************** function _ADCC_Initialize_AverageMode *****************
  4305 ;; Defined at:
  4306 ;;		line 181 in file "application.c"
  4307 ;; Parameters:    Size  Location     Type
  4308 ;;		None
  4309 ;; Auto vars:     Size  Location     Type
  4310 ;;		None
  4311 ;; Return value:  Size  Location     Type
  4312 ;;                  1    wreg      void 
  4313 ;; Registers used:
  4314 ;;		wreg, status,2
  4315 ;; Tracked objects:
  4316 ;;		On entry : 0/E
  4317 ;;		On exit  : 3F/F
  4318 ;;		Unchanged: 0/0
  4319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4324 ;;Total ram usage:        0 bytes
  4325 ;; Hardware stack levels used: 1
  4326 ;; Hardware stack levels required when called: 3
  4327 ;; This function calls:
  4328 ;;		Nothing
  4329 ;; This function is called by:
  4330 ;;		_ApplicationTask
  4331 ;; This function uses a non-reentrant model
  4332 ;;
  4333                           
  4334                           	psect	text38
  4335   0108F8                     __ptext38:
  4336                           	callstack 0
  4337   0108F8                     _ADCC_Initialize_AverageMode:
  4338                           	callstack 0
  4339                           
  4340                           ;application.c: 184:     ADLTHL = 0x38;
  4341                           
  4342                           ; BSR set to: 15
  4343                           ;incstack = 0
  4344                           
  4345                           ;application.c: 186:     ADLTHH = 0xFF;
  4346                           
  4347                           ;application.c: 188:     ADUTHL = 0xC8;
  4348                           
  4349                           ;application.c: 190:     ADUTHH = 0x00;
  4350                           
  4351                           ;application.c: 192:     ADSTPTL = 0xFF;
  4352                           
  4353                           ;application.c: 194:     ADSTPTH = 0x01;
  4354                           
  4355                           ;application.c: 196:     ADRPT = 0x10;
  4356   0108F8  EC31  F084         	call	PL8	;call to abstracted procedure
  4357                           
  4358                           ;application.c: 198:     ADCON2 = 0x42;
  4359   0108FC  0E42               	movlw	66
  4360                           
  4361                           ;application.c: 200:     ADCON3 = 0x13;
  4362   0108FE  EC2E  F084         	call	PL6	;call to abstracted procedure
  4363                           
  4364                           ;application.c: 202:     ADACT = 0x02;
  4365                           
  4366                           ;application.c: 204:     ADCLK = 0x1F;
  4367                           
  4368                           ;application.c: 206:     ADCON0 = 0x84;
  4369                           
  4370                           ; BSR set to: 15
  4371   010902  D000               	goto	PL4	;call to abstracted procedure
  4372   010904                     __end_of_ADCC_Initialize_AverageMode:
  4373                           	callstack 0
  4374   010904                     PL4:
  4375                           	callstack 26
  4376   010904  6F56               	movwf	86,b	;volatile
  4377   010906  0E02               	movlw	2
  4378   010908  6F51               	movwf	81,b	;volatile
  4379   01090A  0E1F               	movlw	31
  4380   01090C  6F52               	movwf	82,b	;volatile
  4381   01090E  0E84               	movlw	132
  4382   010910  6F5B               	movwf	91,b	;volatile
  4383   010912  0C84               	retlw	132	;funcret
  4384   010914                     __end_ofPL4:
  4385                           	callstack 0
  4386                           
  4387 ;; *************** function _ADCC_HasErrorCrossedUpperThreshold *****************
  4388 ;; Defined at:
  4389 ;;		line 266 in file "mcc_generated_files/adc/src/adcc.c"
  4390 ;; Parameters:    Size  Location     Type
  4391 ;;		None
  4392 ;; Auto vars:     Size  Location     Type
  4393 ;;		None
  4394 ;; Return value:  Size  Location     Type
  4395 ;;                  1    wreg      _Bool 
  4396 ;; Registers used:
  4397 ;;		wreg
  4398 ;; Tracked objects:
  4399 ;;		On entry : 0/E
  4400 ;;		On exit  : 0/0
  4401 ;;		Unchanged: 0/0
  4402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4407 ;;Total ram usage:        0 bytes
  4408 ;; Hardware stack levels used: 1
  4409 ;; Hardware stack levels required when called: 3
  4410 ;; This function calls:
  4411 ;;		Nothing
  4412 ;; This function is called by:
  4413 ;;		_ApplicationTask
  4414 ;; This function uses a non-reentrant model
  4415 ;;
  4416                           
  4417                           	psect	text39
  4418   010A02                     __ptext39:
  4419                           	callstack 0
  4420   010A02                     _ADCC_HasErrorCrossedUpperThreshold:
  4421                           	callstack 26
  4422                           
  4423                           ;mcc_generated_files/adc/src/adcc.c: 269:     return ADSTATbits.ADUTHR;
  4424                           
  4425                           ; BSR set to: 15
  4426                           ;incstack = 0
  4427   010A02  BC60               	btfsc	96,6,c	;volatile
  4428   010A04  0C01               	retlw	1
  4429   010A06  0C00               	retlw	0	;funcret
  4430   010A08                     __end_of_ADCC_HasErrorCrossedUpperThreshold:
  4431                           	callstack 0
  4432                           
  4433 ;; *************** function _ADCC_HasErrorCrossedLowerThreshold *****************
  4434 ;; Defined at:
  4435 ;;		line 272 in file "mcc_generated_files/adc/src/adcc.c"
  4436 ;; Parameters:    Size  Location     Type
  4437 ;;		None
  4438 ;; Auto vars:     Size  Location     Type
  4439 ;;		None
  4440 ;; Return value:  Size  Location     Type
  4441 ;;                  1    wreg      _Bool 
  4442 ;; Registers used:
  4443 ;;		wreg
  4444 ;; Tracked objects:
  4445 ;;		On entry : 0/E
  4446 ;;		On exit  : 0/0
  4447 ;;		Unchanged: 0/0
  4448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4453 ;;Total ram usage:        0 bytes
  4454 ;; Hardware stack levels used: 1
  4455 ;; Hardware stack levels required when called: 3
  4456 ;; This function calls:
  4457 ;;		Nothing
  4458 ;; This function is called by:
  4459 ;;		_ApplicationTask
  4460 ;; This function uses a non-reentrant model
  4461 ;;
  4462                           
  4463                           	psect	text40
  4464   010A08                     __ptext40:
  4465                           	callstack 0
  4466   010A08                     _ADCC_HasErrorCrossedLowerThreshold:
  4467                           	callstack 26
  4468                           
  4469                           ;mcc_generated_files/adc/src/adcc.c: 275:     return ADSTATbits.ADLTHR;
  4470                           
  4471                           ;incstack = 0
  4472   010A08  BA60               	btfsc	96,5,c	;volatile
  4473   010A0A  0C01               	retlw	1
  4474   010A0C  0C00               	retlw	0	;funcret
  4475   010A0E                     __end_of_ADCC_HasErrorCrossedLowerThreshold:
  4476                           	callstack 0
  4477                           
  4478 ;; *************** function _INTERRUPT_InterruptManager *****************
  4479 ;; Defined at:
  4480 ;;		line 80 in file "mcc_generated_files/system/src/interrupt.c"
  4481 ;; Parameters:    Size  Location     Type
  4482 ;;		None
  4483 ;; Auto vars:     Size  Location     Type
  4484 ;;		None
  4485 ;; Return value:  Size  Location     Type
  4486 ;;                  1    wreg      void 
  4487 ;; Registers used:
  4488 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  4489 ;; Tracked objects:
  4490 ;;		On entry : 0/0
  4491 ;;		On exit  : 0/0
  4492 ;;		Unchanged: 0/0
  4493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4496 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4497 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4498 ;;Total ram usage:        2 bytes
  4499 ;; Hardware stack levels used: 1
  4500 ;; Hardware stack levels required when called: 2
  4501 ;; This function calls:
  4502 ;;		_ADCC_ThresholdISR
  4503 ;;		_PIN_MANAGER_IOC
  4504 ;;		_TMR4_ISR
  4505 ;; This function is called by:
  4506 ;;		Interrupt level 2
  4507 ;; This function uses a non-reentrant model
  4508 ;;
  4509                           
  4510                           	psect	intcode
  4511   000008                     __pintcode:
  4512                           	callstack 0
  4513   000008                     _INTERRUPT_InterruptManager:
  4514                           	callstack 21
  4515                           
  4516                           ;incstack = 0
  4517   000008  8255               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4518   00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  4519   00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  4520                           
  4521                           ;mcc_generated_files/system/src/interrupt.c: 83:     if(PIE0bits.IOCIE == 1 && PIR0bits.
      +                          IOCIF == 1)
  4522   000012  010E               	movlb	14	; () banked
  4523   000014  B9BD               	btfsc	189,4,b	;volatile
  4524                           
  4525                           ; BSR set to: 14
  4526   000016  A9C5               	btfss	197,4,b	;volatile
  4527   000018  D003               	goto	i2l345
  4528                           
  4529                           ; BSR set to: 14
  4530                           ;mcc_generated_files/system/src/interrupt.c: 84:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 85:         PIN_MANAGER_IOC();
  4531   00001A  EC1A  F085         	call	_PIN_MANAGER_IOC	;wreg free
  4532                           
  4533                           ;mcc_generated_files/system/src/interrupt.c: 86:     }
  4534   00001E  D00D               	goto	i2l352
  4535   000020                     i2l345:
  4536                           
  4537                           ; BSR set to: 14
  4538   000020  ACF2               	btfss	242,6,c	;volatile
  4539   000022  D00B               	goto	i2l352
  4540                           
  4541                           ; BSR set to: 14
  4542                           ;mcc_generated_files/system/src/interrupt.c: 88:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 89:         if(PIE4bits.TMR4IE == 1 && PIR4bits.TMR4IF == 1)
  4543   000024  B7C1               	btfsc	193,3,b	;volatile
  4544                           
  4545                           ; BSR set to: 14
  4546   000026  A7C9               	btfss	201,3,b	;volatile
  4547   000028  D003               	goto	i2l348
  4548                           
  4549                           ; BSR set to: 14
  4550                           ;mcc_generated_files/system/src/interrupt.c: 90:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 91:             TMR4_ISR();
  4551   00002A  EC4E  F084         	call	_TMR4_ISR	;wreg free
  4552                           
  4553                           ;mcc_generated_files/system/src/interrupt.c: 92:         }
  4554   00002E  D005               	goto	i2l352
  4555   000030                     i2l348:
  4556                           
  4557                           ; BSR set to: 14
  4558   000030  B3BE               	btfsc	190,1,b	;volatile
  4559                           
  4560                           ; BSR set to: 14
  4561   000032  A3C6               	btfss	198,1,b	;volatile
  4562   000034  D002               	goto	i2l352
  4563                           
  4564                           ; BSR set to: 14
  4565                           ;mcc_generated_files/system/src/interrupt.c: 94:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 95:             ADCC_ThresholdISR();
  4566   000036  EC5E  F084         	call	_ADCC_ThresholdISR	;wreg free
  4567   00003A                     i2l352:
  4568                           
  4569                           ; BSR set to: 14
  4570   00003A  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  4571   00003E  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  4572   000042  9255               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4573   000044  0011               	retfie		f
  4574   000046                     __end_of_INTERRUPT_InterruptManager:
  4575                           	callstack 0
  4576                           
  4577 ;; *************** function _TMR4_ISR *****************
  4578 ;; Defined at:
  4579 ;;		line 124 in file "mcc_generated_files/timer/src/tmr4.c"
  4580 ;; Parameters:    Size  Location     Type
  4581 ;;		None
  4582 ;; Auto vars:     Size  Location     Type
  4583 ;;		None
  4584 ;; Return value:  Size  Location     Type
  4585 ;;                  1    wreg      void 
  4586 ;; Registers used:
  4587 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  4588 ;; Tracked objects:
  4589 ;;		On entry : 3F/E
  4590 ;;		On exit  : 0/0
  4591 ;;		Unchanged: 0/0
  4592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4597 ;;Total ram usage:        0 bytes
  4598 ;; Hardware stack levels used: 1
  4599 ;; Hardware stack levels required when called: 1
  4600 ;; This function calls:
  4601 ;;		NULL
  4602 ;;		_TMR0_DefaultOverflowCallback
  4603 ;;		_TMR4UserInterrupt
  4604 ;;		_TMR4_DefaultOverflowCallback
  4605 ;; This function is called by:
  4606 ;;		_INTERRUPT_InterruptManager
  4607 ;; This function uses a non-reentrant model
  4608 ;;
  4609                           
  4610                           	psect	text42
  4611   01089C                     __ptext42:
  4612                           	callstack 0
  4613   01089C                     _TMR4_ISR:
  4614                           	callstack 21
  4615                           
  4616                           ; BSR set to: 14
  4617                           ;mcc_generated_files/timer/src/tmr4.c: 127:      PIR4bits.TMR4IF = 0;
  4618                           
  4619                           ;incstack = 0
  4620   01089C  97C9               	bcf	201,3,b	;volatile
  4621                           
  4622                           ; BSR set to: 14
  4623                           ;mcc_generated_files/timer/src/tmr4.c: 129:     if(TMR4_OverflowCallback)
  4624   01089E  5035               	movf	_TMR4_OverflowCallback^0,w,c
  4625   0108A0  1036               	iorwf	(_TMR4_OverflowCallback+1)^0,w,c
  4626   0108A2  1037               	iorwf	(_TMR4_OverflowCallback+2)^0,w,c
  4627   0108A4  B4D8               	btfsc	status,2,c
  4628   0108A6  0012               	return	
  4629                           
  4630                           ; BSR set to: 14
  4631                           ;mcc_generated_files/timer/src/tmr4.c: 130:     {;mcc_generated_files/timer/src/tmr4.c: 
      +                          131:         TMR4_OverflowCallback();
  4632   0108A8  0005               	push	
  4633   0108AA  6EFA               	movwf	pclath,c
  4634   0108AC  5035               	movf	_TMR4_OverflowCallback^0,w,c
  4635   0108AE  6EFD               	movwf	tosl,c
  4636   0108B0  5036               	movf	(_TMR4_OverflowCallback+1)^0,w,c
  4637   0108B2  6EFE               	movwf	tosh,c
  4638   0108B4  5037               	movf	(_TMR4_OverflowCallback+2)^0,w,c
  4639   0108B6  6EFF               	movwf	tosu,c
  4640   0108B8  50FA               	movf	pclath,w,c
  4641   0108BA  0012               	return		;indir
  4642   0108BC                     __end_of_TMR4_ISR:
  4643                           	callstack 0
  4644                           
  4645 ;; *************** function _TMR4UserInterrupt *****************
  4646 ;; Defined at:
  4647 ;;		line 263 in file "application.c"
  4648 ;; Parameters:    Size  Location     Type
  4649 ;;		None
  4650 ;; Auto vars:     Size  Location     Type
  4651 ;;		None
  4652 ;; Return value:  Size  Location     Type
  4653 ;;                  1    wreg      void 
  4654 ;; Registers used:
  4655 ;;		status,2, status,0
  4656 ;; Tracked objects:
  4657 ;;		On entry : 3F/E
  4658 ;;		On exit  : 3F/E
  4659 ;;		Unchanged: 3F/0
  4660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4665 ;;Total ram usage:        0 bytes
  4666 ;; Hardware stack levels used: 1
  4667 ;; This function calls:
  4668 ;;		Nothing
  4669 ;; This function is called by:
  4670 ;;		_main
  4671 ;;		_TMR4_ISR
  4672 ;;		_TMR0_Tasks
  4673 ;; This function uses a non-reentrant model
  4674 ;;
  4675                           
  4676                           	psect	text43
  4677   010A0E                     __ptext43:
  4678                           	callstack 0
  4679   010A0E                     _TMR4UserInterrupt:
  4680                           	callstack 21
  4681                           
  4682                           ; BSR set to: 14
  4683                           ;application.c: 265:     if (PORTCbits.RC5)
  4684                           
  4685                           ;incstack = 0
  4686   010A0E  BA8E               	btfsc	142,5,c	;volatile
  4687                           
  4688                           ; BSR set to: 14
  4689                           ;application.c: 266:     {;application.c: 267:         count++;
  4690   010A10  2A3F               	incf	_count^0,f,c	;volatile
  4691                           
  4692                           ; BSR set to: 14
  4693   010A12  0012               	return		;funcret
  4694   010A14                     __end_of_TMR4UserInterrupt:
  4695                           	callstack 0
  4696                           
  4697 ;; *************** function _TMR0_DefaultOverflowCallback *****************
  4698 ;; Defined at:
  4699 ;;		line 113 in file "mcc_generated_files/timer/src/tmr0.c"
  4700 ;; Parameters:    Size  Location     Type
  4701 ;;		None
  4702 ;; Auto vars:     Size  Location     Type
  4703 ;;		None
  4704 ;; Return value:  Size  Location     Type
  4705 ;;                  1    wreg      void 
  4706 ;; Registers used:
  4707 ;;		None
  4708 ;; Tracked objects:
  4709 ;;		On entry : 3F/E
  4710 ;;		On exit  : 3F/E
  4711 ;;		Unchanged: 3F/0
  4712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4717 ;;Total ram usage:        0 bytes
  4718 ;; Hardware stack levels used: 1
  4719 ;; This function calls:
  4720 ;;		Nothing
  4721 ;; This function is called by:
  4722 ;;		_TMR0_Initialize
  4723 ;;		_TMR4_ISR
  4724 ;;		_TMR0_Tasks
  4725 ;; This function uses a non-reentrant model
  4726 ;;
  4727                           
  4728                           	psect	text44
  4729   010A30                     __ptext44:
  4730                           	callstack 0
  4731   010A30                     _TMR0_DefaultOverflowCallback:
  4732                           	callstack 21
  4733                           
  4734                           ; BSR set to: 14
  4735                           
  4736                           ; BSR set to: 14
  4737                           ;incstack = 0
  4738   010A30  0012               	return		;funcret
  4739   010A32                     __end_of_TMR0_DefaultOverflowCallback:
  4740                           	callstack 0
  4741                           
  4742 ;; *************** function _TMR4_DefaultOverflowCallback *****************
  4743 ;; Defined at:
  4744 ;;		line 140 in file "mcc_generated_files/timer/src/tmr4.c"
  4745 ;; Parameters:    Size  Location     Type
  4746 ;;		None
  4747 ;; Auto vars:     Size  Location     Type
  4748 ;;		None
  4749 ;; Return value:  Size  Location     Type
  4750 ;;                  1    wreg      void 
  4751 ;; Registers used:
  4752 ;;		None
  4753 ;; Tracked objects:
  4754 ;;		On entry : 3F/E
  4755 ;;		On exit  : 3F/E
  4756 ;;		Unchanged: 3F/0
  4757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4762 ;;Total ram usage:        0 bytes
  4763 ;; Hardware stack levels used: 1
  4764 ;; This function calls:
  4765 ;;		Nothing
  4766 ;; This function is called by:
  4767 ;;		_TMR4_Initialize
  4768 ;;		_TMR4_ISR
  4769 ;;		_TMR0_Tasks
  4770 ;; This function uses a non-reentrant model
  4771 ;;
  4772                           
  4773                           	psect	text45
  4774   010A32                     __ptext45:
  4775                           	callstack 0
  4776   010A32                     _TMR4_DefaultOverflowCallback:
  4777                           	callstack 21
  4778                           
  4779                           ; BSR set to: 14
  4780                           
  4781                           ; BSR set to: 14
  4782                           ;incstack = 0
  4783   010A32  0012               	return		;funcret
  4784   010A34                     __end_of_TMR4_DefaultOverflowCallback:
  4785                           	callstack 0
  4786                           
  4787 ;; *************** function _PIN_MANAGER_IOC *****************
  4788 ;; Defined at:
  4789 ;;		line 132 in file "mcc_generated_files/system/src/pins.c"
  4790 ;; Parameters:    Size  Location     Type
  4791 ;;		None
  4792 ;; Auto vars:     Size  Location     Type
  4793 ;;		None
  4794 ;; Return value:  Size  Location     Type
  4795 ;;                  1    wreg      void 
  4796 ;; Registers used:
  4797 ;;		None
  4798 ;; Tracked objects:
  4799 ;;		On entry : 3F/E
  4800 ;;		On exit  : 3F/E
  4801 ;;		Unchanged: 3F/0
  4802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4807 ;;Total ram usage:        0 bytes
  4808 ;; Hardware stack levels used: 1
  4809 ;; This function calls:
  4810 ;;		Nothing
  4811 ;; This function is called by:
  4812 ;;		_INTERRUPT_InterruptManager
  4813 ;; This function uses a non-reentrant model
  4814 ;;
  4815                           
  4816                           	psect	text46
  4817   010A34                     __ptext46:
  4818                           	callstack 0
  4819   010A34                     _PIN_MANAGER_IOC:
  4820                           	callstack 22
  4821                           
  4822                           ; BSR set to: 14
  4823                           
  4824                           ; BSR set to: 14
  4825                           ;incstack = 0
  4826   010A34  0012               	return		;funcret
  4827   010A36                     __end_of_PIN_MANAGER_IOC:
  4828                           	callstack 0
  4829                           
  4830 ;; *************** function _ADCC_ThresholdISR *****************
  4831 ;; Defined at:
  4832 ;;		line 285 in file "mcc_generated_files/adc/src/adcc.c"
  4833 ;; Parameters:    Size  Location     Type
  4834 ;;		None
  4835 ;; Auto vars:     Size  Location     Type
  4836 ;;		None
  4837 ;; Return value:  Size  Location     Type
  4838 ;;                  1    wreg      void 
  4839 ;; Registers used:
  4840 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  4841 ;; Tracked objects:
  4842 ;;		On entry : 3F/E
  4843 ;;		On exit  : 0/0
  4844 ;;		Unchanged: 0/0
  4845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4850 ;;Total ram usage:        0 bytes
  4851 ;; Hardware stack levels used: 1
  4852 ;; Hardware stack levels required when called: 1
  4853 ;; This function calls:
  4854 ;;		NULL
  4855 ;;		_ADCC_DefaultADTI_ISR
  4856 ;;		_ADCUserInterrupt
  4857 ;; This function is called by:
  4858 ;;		_INTERRUPT_InterruptManager
  4859 ;; This function uses a non-reentrant model
  4860 ;;
  4861                           
  4862                           	psect	text47
  4863   0108BC                     __ptext47:
  4864                           	callstack 0
  4865   0108BC                     _ADCC_ThresholdISR:
  4866                           	callstack 21
  4867                           
  4868                           ; BSR set to: 14
  4869                           ;mcc_generated_files/adc/src/adcc.c: 288:     PIR1bits.ADTIF = 0;
  4870                           
  4871                           ; BSR set to: 14
  4872                           ;incstack = 0
  4873   0108BC  93C6               	bcf	198,1,b	;volatile
  4874                           
  4875                           ; BSR set to: 14
  4876                           ;mcc_generated_files/adc/src/adcc.c: 290:     if (ADCC_ADTI_InterruptHandler != ((void*)
      +                          0))
  4877   0108BE  5052               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
  4878   0108C0  1053               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
  4879   0108C2  1054               	iorwf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
  4880   0108C4  B4D8               	btfsc	status,2,c
  4881   0108C6  0012               	return	
  4882                           
  4883                           ; BSR set to: 14
  4884                           ;mcc_generated_files/adc/src/adcc.c: 291:     {;mcc_generated_files/adc/src/adcc.c: 292:
      +                                   ADCC_ADTI_InterruptHandler();
  4885   0108C8  0005               	push	
  4886   0108CA  6EFA               	movwf	pclath,c
  4887   0108CC  5052               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
  4888   0108CE  6EFD               	movwf	tosl,c
  4889   0108D0  5053               	movf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
  4890   0108D2  6EFE               	movwf	tosh,c
  4891   0108D4  5054               	movf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
  4892   0108D6  6EFF               	movwf	tosu,c
  4893   0108D8  50FA               	movf	pclath,w,c
  4894   0108DA  0012               	return		;indir
  4895   0108DC                     __end_of_ADCC_ThresholdISR:
  4896                           	callstack 0
  4897                           
  4898 ;; *************** function _ADCC_DefaultADTI_ISR *****************
  4899 ;; Defined at:
  4900 ;;		line 301 in file "mcc_generated_files/adc/src/adcc.c"
  4901 ;; Parameters:    Size  Location     Type
  4902 ;;		None
  4903 ;; Auto vars:     Size  Location     Type
  4904 ;;		None
  4905 ;; Return value:  Size  Location     Type
  4906 ;;                  1    wreg      void 
  4907 ;; Registers used:
  4908 ;;		None
  4909 ;; Tracked objects:
  4910 ;;		On entry : 3F/E
  4911 ;;		On exit  : 3F/E
  4912 ;;		Unchanged: 3F/0
  4913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4918 ;;Total ram usage:        0 bytes
  4919 ;; Hardware stack levels used: 1
  4920 ;; This function calls:
  4921 ;;		Nothing
  4922 ;; This function is called by:
  4923 ;;		_ADCC_Initialize
  4924 ;;		_ADCC_ThresholdISR
  4925 ;; This function uses a non-reentrant model
  4926 ;;
  4927                           
  4928                           	psect	text48
  4929   010A36                     __ptext48:
  4930                           	callstack 0
  4931   010A36                     _ADCC_DefaultADTI_ISR:
  4932                           	callstack 21
  4933                           
  4934                           ; BSR set to: 14
  4935                           
  4936                           ;incstack = 0
  4937   010A36  0012               	return		;funcret
  4938   010A38                     __end_of_ADCC_DefaultADTI_ISR:
  4939                           	callstack 0
  4940                           
  4941 ;; *************** function _ADCUserInterrupt *****************
  4942 ;; Defined at:
  4943 ;;		line 258 in file "application.c"
  4944 ;; Parameters:    Size  Location     Type
  4945 ;;		None
  4946 ;; Auto vars:     Size  Location     Type
  4947 ;;		None
  4948 ;; Return value:  Size  Location     Type
  4949 ;;                  1    wreg      void 
  4950 ;; Registers used:
  4951 ;;		wreg, status,2
  4952 ;; Tracked objects:
  4953 ;;		On entry : 3F/E
  4954 ;;		On exit  : 3F/E
  4955 ;;		Unchanged: 3F/0
  4956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4961 ;;Total ram usage:        0 bytes
  4962 ;; Hardware stack levels used: 1
  4963 ;; This function calls:
  4964 ;;		Nothing
  4965 ;; This function is called by:
  4966 ;;		_main
  4967 ;;		_ADCC_ThresholdISR
  4968 ;; This function uses a non-reentrant model
  4969 ;;
  4970                           
  4971                           	psect	text49
  4972   010A14                     __ptext49:
  4973                           	callstack 0
  4974   010A14                     _ADCUserInterrupt:
  4975                           	callstack 21
  4976                           
  4977                           ; BSR set to: 14
  4978                           ;application.c: 260:     adcReadyFlag = 1;
  4979                           
  4980                           ; BSR set to: 14
  4981                           ;incstack = 0
  4982   010A14  0E01               	movlw	1
  4983   010A16  6E3E               	movwf	_adcReadyFlag^0,c	;volatile
  4984                           
  4985                           ; BSR set to: 14
  4986   010A18  0C01               	retlw	1	;funcret
  4987   010A1A                     __end_of_ADCUserInterrupt:
  4988                           	callstack 0
  4989                           
  4990                           	psect	rparam
  4991   000000                     
  4992                           	psect	temp
  4993   000055                     btemp:
  4994                           	callstack 0
  4995   000055                     	ds	1
  4996   000000                     int$flags	set	btemp
  4997   000000                     wtemp8	set	btemp+1
  4998   000000                     ttemp5	set	btemp+1
  4999   000000                     ttemp6	set	btemp+4
  5000   000000                     ttemp7	set	btemp+8
  5001                           
  5002                           	psect	config
  5003                           
  5004                           ;Config register CONFIG1L @ 0x300000
  5005                           ;	External Oscillator mode Selection bits
  5006                           ;	FEXTOSC = ECH, EC (external clock) above 8 MHz; PFM set to high power
  5007                           ;	Power-up default value for COSC bits
  5008                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  5009   300000                     	org	3145728
  5010   300000  FF                 	db	255
  5011                           
  5012                           ;Config register CONFIG1H @ 0x300001
  5013                           ;	Clock Out Enable bit
  5014                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  5015                           ;	Clock Switch Enable bit
  5016                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  5017                           ;	Fail-Safe Clock Monitor Enable bit
  5018                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  5019   300001                     	org	3145729
  5020   300001  FF                 	db	255
  5021                           
  5022                           ;Config register CONFIG2L @ 0x300002
  5023                           ;	Master Clear Enable bit
  5024                           ;	MCLRE = EXTMCLR, MCLR pin (RE3) is MCLR
  5025                           ;	Power-up Timer Enable bit
  5026                           ;	PWRTE = OFF, Power up timer disabled
  5027                           ;	Low-power BOR enable bit
  5028                           ;	LPBOREN = OFF, Low power BOR is disabled
  5029                           ;	Brown-out Reset Enable bits
  5030                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  5031   300002                     	org	3145730
  5032   300002  FF                 	db	255
  5033                           
  5034                           ;Config register CONFIG2H @ 0x300003
  5035                           ;	Brown Out Reset Voltage selection bits
  5036                           ;	BORV = VBOR_190, Brown-out Reset Voltage (VBOR) set to 1.90V
  5037                           ;	ZCD Disable bit
  5038                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  5039                           ;	PPSLOCK bit One-Way Set Enable bit
  5040                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  5041                           ;	Stack Full/Underflow Reset Enable bit
  5042                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5043                           ;	Extended Instruction Set Enable bit
  5044                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  5045   300003                     	org	3145731
  5046   300003  FF                 	db	255
  5047                           
  5048                           ;Config register CONFIG3L @ 0x300004
  5049                           ;	WDT Period Select bits
  5050                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  5051                           ;	WDT operating mode
  5052                           ;	WDTE = OFF, WDT Disabled
  5053   300004                     	org	3145732
  5054   300004  9F                 	db	159
  5055                           
  5056                           ;Config register CONFIG3H @ 0x300005
  5057                           ;	WDT Window Select bits
  5058                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  5059                           ;	WDT input clock selector
  5060                           ;	WDTCCS = SC, Software Control
  5061   300005                     	org	3145733
  5062   300005  FF                 	db	255
  5063                           
  5064                           ;Config register CONFIG4L @ 0x300006
  5065                           ;	Write Protection Block 0
  5066                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  5067                           ;	Write Protection Block 1
  5068                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  5069                           ;	Write Protection Block 2
  5070                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  5071                           ;	Write Protection Block 3
  5072                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  5073                           ;	Write Protection Block 4
  5074                           ;	WRT4 = OFF, Block 4 (010000-013FFFh) not write-protected
  5075                           ;	Write Protection Block 5
  5076                           ;	WRT5 = OFF, Block 5 (014000-017FFFh) not write-protected
  5077                           ;	Write Protection Block 6
  5078                           ;	WRT6 = OFF, Block 6 (018000-01BFFFh) not write-protected
  5079                           ;	Write Protection Block 7
  5080                           ;	WRT7 = OFF, Block 7 (01C000-01FFFFh) not write-protected
  5081   300006                     	org	3145734
  5082   300006  FF                 	db	255
  5083                           
  5084                           ;Config register CONFIG4H @ 0x300007
  5085                           ;	Configuration Register Write Protection bit
  5086                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
  5087                           ;	Boot Block Write Protection bit
  5088                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  5089                           ;	Data EEPROM Write Protection bit
  5090                           ;	WRTD = OFF, Data EEPROM not write-protected
  5091                           ;	Scanner Enable bit
  5092                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
  5093                           ;	Low Voltage Programming Enable bit
  5094                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  5095   300007                     	org	3145735
  5096   300007  FF                 	db	255
  5097                           
  5098                           ;Config register CONFIG5L @ 0x300008
  5099                           ;	UserNVM Program Memory Code Protection bit
  5100                           ;	CP = OFF, UserNVM code protection disabled
  5101                           ;	DataNVM Memory Code Protection bit
  5102                           ;	CPD = OFF, DataNVM code protection disabled
  5103   300008                     	org	3145736
  5104   300008  FF                 	db	255
  5105                           
  5106                           ;Config register CONFIG5H @ 0x300009
  5107                           ;	unspecified, using default values
  5108   300009                     	org	3145737
  5109   300009  FF                 	db	255
  5110                           
  5111                           ;Config register CONFIG6L @ 0x30000A
  5112                           ;	Table Read Protection Block 0
  5113                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  5114                           ;	Table Read Protection Block 1
  5115                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5116                           ;	Table Read Protection Block 2
  5117                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  5118                           ;	Table Read Protection Block 3
  5119                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  5120                           ;	Table Read Protection Block 4
  5121                           ;	EBTR4 = OFF, Block 4 (010000-013FFFh) not protected from table reads executed in other
      +                           blocks
  5122                           ;	Table Read Protection Block 5
  5123                           ;	EBTR5 = OFF, Block 5 (014000-017FFFh) not protected from table reads executed in other
      +                           blocks
  5124                           ;	Table Read Protection Block 6
  5125                           ;	EBTR6 = OFF, Block 6 (018000-01BFFFh) not protected from table reads executed in other
      +                           blocks
  5126                           ;	Table Read Protection Block 7
  5127                           ;	EBTR7 = OFF, Block 7 (01C000-01FFFFh) not protected from table reads executed in other
      +                           blocks
  5128   30000A                     	org	3145738
  5129   30000A  FF                 	db	255
  5130                           
  5131                           ;Config register CONFIG6H @ 0x30000B
  5132                           ;	Boot Block Table Read Protection bit
  5133                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5134   30000B                     	org	3145739
  5135   30000B  FF                 	db	255
  5136                           tosu	equ	0xFFF
  5137                           tosh	equ	0xFFE
  5138                           tosl	equ	0xFFD
  5139                           stkptr	equ	0xFFC
  5140                           pclatu	equ	0xFFB
  5141                           pclath	equ	0xFFA
  5142                           pcl	equ	0xFF9
  5143                           tblptru	equ	0xFF8
  5144                           tblptrh	equ	0xFF7
  5145                           tblptrl	equ	0xFF6
  5146                           tablat	equ	0xFF5
  5147                           prodh	equ	0xFF4
  5148                           prodl	equ	0xFF3
  5149                           indf0	equ	0xFEF
  5150                           postinc0	equ	0xFEE
  5151                           postdec0	equ	0xFED
  5152                           preinc0	equ	0xFEC
  5153                           plusw0	equ	0xFEB
  5154                           fsr0h	equ	0xFEA
  5155                           fsr0l	equ	0xFE9
  5156                           wreg	equ	0xFE8
  5157                           indf1	equ	0xFE7
  5158                           postinc1	equ	0xFE6
  5159                           postdec1	equ	0xFE5
  5160                           preinc1	equ	0xFE4
  5161                           plusw1	equ	0xFE3
  5162                           fsr1h	equ	0xFE2
  5163                           fsr1l	equ	0xFE1
  5164                           bsr	equ	0xFE0
  5165                           indf2	equ	0xFDF
  5166                           postinc2	equ	0xFDE
  5167                           postdec2	equ	0xFDD
  5168                           preinc2	equ	0xFDC
  5169                           plusw2	equ	0xFDB
  5170                           fsr2h	equ	0xFDA
  5171                           fsr2l	equ	0xFD9
  5172                           status	equ	0xFD8

Data Sizes:
    Strings     168
    Constant    90
    Data        18
    BSS         52
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     43      84
    BANK0           160      0      32
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK14           31      0       0

Pointer List with Targets:

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultADTI_ISR(), ADCUserInterrupt(), NULL(), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultADTI_ISR(), ADCUserInterrupt(), 

    EUSART1_FramingErrorCallbackRegister@callbackHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultFramingErrorCallback(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultFramingErrorCallback(), NULL(), 

    EUSART1_OverrunErrorCallbackRegister@callbackHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorCallback(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorCallback(), NULL(), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), NULL(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), NULL(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), NULL(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_1(CODE[25]), STR_2(CODE[23]), STR_3(CODE[51]), STR_4(CODE[51]), 
		 -> STR_5(CODE[29]), STR_6(CODE[57]), STR_7(CODE[57]), 

    S1121$20$0	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultFramingErrorCallback(), 

    S1121$21$0	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorCallback(), 

    S1121$AutoBaudEventEnableGet	PTR FTN()_Bool  size(3) Largest target is 1
		 -> NULL(), 

    S1121$AutoBaudQuery	PTR FTN()_Bool  size(3) Largest target is 1
		 -> EUSART1_AutoBaudQuery(), 

    S1121$AutoBaudSet	PTR FTN(_Bool ,)void  size(3) Largest target is 1
		 -> EUSART1_AutoBaudSet(), 

    S1121$BaudRateGet	PTR FTN()unsigned long  size(3) Largest target is 1
		 -> NULL(), 

    S1121$BaudRateSet	PTR FTN(unsigned long ,)void  size(3) Largest target is 1
		 -> NULL(), 

    S1121$BRGCountGet	PTR FTN()unsigned long  size(3) Largest target is 1
		 -> NULL(), 

    S1121$BRGCountSet	PTR FTN(unsigned long ,)void  size(3) Largest target is 1
		 -> NULL(), 

    S1121$Deinitialize	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_Deinitialize(), 

    S1121$ErrorGet	PTR FTN()unsigned int  size(3) Largest target is 2
		 -> EUSART1_ErrorGet(), 

    S1121$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    S1121$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> EUSART1_FramingErrorCallbackRegister(), 

    S1121$Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_Initialize(), 

    S1121$IsRxReady	PTR FTN()_Bool  size(3) Largest target is 1
		 -> EUSART1_IsRxReady(), 

    S1121$IsTxDone	PTR FTN()_Bool  size(3) Largest target is 1
		 -> EUSART1_IsTxDone(), 

    S1121$IsTxReady	PTR FTN()_Bool  size(3) Largest target is 1
		 -> EUSART1_IsTxReady(), 

    S1121$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> EUSART1_OverrunErrorCallbackRegister(), 

    S1121$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    S1121$Read	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> EUSART1_Read(), 

    S1121$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    S1121$TransmitDisable	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_TransmitDisable(), 

    S1121$TransmitEnable	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_TransmitEnable(), 

    S1121$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    S1121$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    S1121$Write	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> EUSART1_Write(), 

    S2284$buffer	PTR unsigned char  size(2) Largest target is 0

    S2284$source	PTR const unsigned char  size(2) Largest target is 0

    S670$4$0	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultOverflowCallback(), TMR4_DefaultOverflowCallback(), TMR4UserInterrupt(), 

    S670TMR_INTERFACE$Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Initialize(), TMR4_Initialize(), 

    S670TMR_INTERFACE$PeriodCountSet	PTR FTN(unsigned int ,)void  size(3) Largest target is 1
		 -> TMR0_Reload(), TMR4_PeriodCountSet(), 

    S670TMR_INTERFACE$Start	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Start(), TMR4_Start(), 

    S670TMR_INTERFACE$Stop	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Stop(), TMR4_Stop(), 

    S670TMR_INTERFACE$Tasks	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Tasks(), NULL(), 

    S670TMR_INTERFACE$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> TMR0_OverflowCallbackRegister(), TMR4_OverflowCallbackRegister(), 

    Timer0$Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Initialize(), TMR4_Initialize(), 

    Timer0$PeriodCountSet	PTR FTN(unsigned int ,)void  size(3) Largest target is 1
		 -> TMR0_Reload(), TMR4_PeriodCountSet(), 

    Timer0$Start	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Start(), TMR4_Start(), 

    Timer0$Stop	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Stop(), TMR4_Stop(), 

    Timer0$Tasks	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Tasks(), NULL(), 

    Timer0$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> TMR0_OverflowCallbackRegister(), TMR4_OverflowCallbackRegister(), 

    Timer4$Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Initialize(), TMR4_Initialize(), 

    Timer4$PeriodCountSet	PTR FTN(unsigned int ,)void  size(3) Largest target is 1
		 -> TMR0_Reload(), TMR4_PeriodCountSet(), 

    Timer4$Start	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Start(), TMR4_Start(), 

    Timer4$Stop	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Stop(), TMR4_Stop(), 

    Timer4$Tasks	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Tasks(), NULL(), 

    Timer4$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> TMR0_OverflowCallbackRegister(), TMR4_OverflowCallbackRegister(), 

    TMR0_OverflowCallback	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultOverflowCallback(), TMR4_DefaultOverflowCallback(), TMR4UserInterrupt(), NULL(), 

    TMR0_OverflowCallbackRegister@CallbackHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultOverflowCallback(), TMR4_DefaultOverflowCallback(), TMR4UserInterrupt(), 

    TMR4_OverflowCallback	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultOverflowCallback(), TMR4_DefaultOverflowCallback(), TMR4UserInterrupt(), NULL(), 

    TMR4_OverflowCallbackRegister@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultOverflowCallback(), TMR4_DefaultOverflowCallback(), TMR4UserInterrupt(), 

    UART1$AutoBaudEventEnableGet	PTR FTN()_Bool  size(3) Largest target is 1
		 -> NULL(), 

    UART1$AutoBaudQuery	PTR FTN()_Bool  size(3) Largest target is 1
		 -> EUSART1_AutoBaudQuery(), 

    UART1$AutoBaudSet	PTR FTN(_Bool ,)void  size(3) Largest target is 1
		 -> EUSART1_AutoBaudSet(), 

    UART1$BaudRateGet	PTR FTN()unsigned long  size(3) Largest target is 1
		 -> NULL(), 

    UART1$BaudRateSet	PTR FTN(unsigned long ,)void  size(3) Largest target is 1
		 -> NULL(), 

    UART1$BRGCountGet	PTR FTN()unsigned long  size(3) Largest target is 1
		 -> NULL(), 

    UART1$BRGCountSet	PTR FTN(unsigned long ,)void  size(3) Largest target is 1
		 -> NULL(), 

    UART1$Deinitialize	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_Deinitialize(), 

    UART1$ErrorGet	PTR FTN()unsigned int  size(3) Largest target is 2
		 -> EUSART1_ErrorGet(), 

    UART1$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    UART1$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> EUSART1_FramingErrorCallbackRegister(), 

    UART1$Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_Initialize(), 

    UART1$IsRxReady	PTR FTN()_Bool  size(3) Largest target is 1
		 -> EUSART1_IsRxReady(), 

    UART1$IsTxDone	PTR FTN()_Bool  size(3) Largest target is 1
		 -> EUSART1_IsTxDone(), 

    UART1$IsTxReady	PTR FTN()_Bool  size(3) Largest target is 1
		 -> EUSART1_IsTxReady(), 

    UART1$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> EUSART1_OverrunErrorCallbackRegister(), 

    UART1$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    UART1$Read	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> EUSART1_Read(), 

    UART1$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    UART1$TransmitDisable	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_TransmitDisable(), 

    UART1$TransmitEnable	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_TransmitEnable(), 

    UART1$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    UART1$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    UART1$Write	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> EUSART1_Write(), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 57
		 -> STR_1(CODE[25]), STR_2(CODE[23]), STR_3(CODE[51]), STR_4(CODE[51]), 
		 -> STR_5(CODE[29]), STR_6(CODE[57]), STR_7(CODE[57]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 57
		 -> STR_1(CODE[25]), STR_2(CODE[23]), STR_3(CODE[51]), STR_4(CODE[51]), 
		 -> STR_5(CODE[29]), STR_6(CODE[57]), STR_7(CODE[57]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_1(CODE[25]), STR_2(CODE[23]), STR_3(CODE[51]), STR_4(CODE[51]), 
		 -> STR_5(CODE[29]), STR_6(CODE[57]), STR_7(CODE[57]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _TMR4_Initialize->_TMR4_OverflowCallbackRegister
    _TMR0_Initialize->_TMR0_OverflowCallbackRegister
    _INTERRUPT_Initialize->_INT0_SetInterruptHandler
    _INTERRUPT_Initialize->_INT1_SetInterruptHandler
    _INTERRUPT_Initialize->_INT2_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_FramingErrorCallbackRegister
    _EUSART1_Initialize->_EUSART1_OverrunErrorCallbackRegister
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _ApplicationTask->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _fputc->_putch
    _putch->_EUSART1_IsTxReady
    _putch->_EUSART1_Write
    _abs->___awmod

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5097
       _ADCC_SetADTIInterruptHandler
                    _ApplicationTask
                  _SYSTEM_Initialize
      _TMR0_OverflowCallbackRegister *
      _TMR4_OverflowCallbackRegister *
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     895
                    _ADCC_Initialize
                   _CLOCK_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR4_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0      98
      _TMR4_OverflowCallbackRegister
 ---------------------------------------------------------------------------------
 (1) _TMR4_OverflowCallbackRegister                        3     0      3      98
                                              2 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     122
      _TMR0_OverflowCallbackRegister
 ---------------------------------------------------------------------------------
 (1) _TMR0_OverflowCallbackRegister                        3     0      3     122
                                              2 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0     261
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3      87
                                              2 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      87
                                              2 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      87
                                              2 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     240
_EUSART1_FramingErrorCallbackRegiste
_EUSART1_OverrunErrorCallbackRegiste
 ---------------------------------------------------------------------------------
 (3) _EUSART1_OverrunErrorCallbackRegister                 3     0      3     120
                                              2 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART1_FramingErrorCallbackRegister                 3     0      3     120
                                              2 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     174
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADTIInterruptHandler                         3     0      3     174
                                              2 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _ApplicationTask                                      0     0      0    3808
 _ADCC_HasErrorCrossedLowerThreshold
 _ADCC_HasErrorCrossedUpperThreshold
        _ADCC_Initialize_AverageMode
          _ADCC_Initialize_BasicMode
   _ADCC_Initialize_BurstAverageMode
  _ADCC_Initialize_LowPassFilterMode
                    _ADCC_SetChannel
                  _EUSART1_IsTxReady *
                      _EUSART1_Write
                        _TMR0_Reload *
                         _TMR0_Start *
                          _TMR0_Stop *
                _TMR4_PeriodCountSet *
                         _TMR4_Start *
                          _TMR4_Stop *
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              11     3      8    3590
                                             34 COMRAM     9     1      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             7     2      5    3004
                                             27 COMRAM     7     2      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           14    10      4    2654
                                             13 COMRAM    14    10      4
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     850
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      68
                                              3 COMRAM     1     1      0
                  _EUSART1_IsTxReady
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Write                                        1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _EUSART1_IsTxReady                                    1     1      0      24
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              8 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _TMR4_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_PeriodCountSet                                  2     0      2      22
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Reload                                          2     0      2     128
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetChannel                                      1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize_LowPassFilterMode                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize_BurstAverageMode                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize_BasicMode                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize_AverageMode                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_HasErrorCrossedUpperThreshold                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_HasErrorCrossedLowerThreshold                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManager                           2     2      0       0
                                              0 COMRAM     2     2      0
                  _ADCC_ThresholdISR
                    _PIN_MANAGER_IOC
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (9) _TMR4_ISR                                             0     0      0       0
                                NULL *
       _TMR0_DefaultOverflowCallback *
                  _TMR4UserInterrupt *
       _TMR4_DefaultOverflowCallback *
 ---------------------------------------------------------------------------------
 (10) _TMR4_DefaultOverflowCallback                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR4UserInterrupt                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR0_DefaultOverflowCallback                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _PIN_MANAGER_IOC                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _ADCC_ThresholdISR                                    0     0      0       0
                                NULL *
               _ADCC_DefaultADTI_ISR *
                   _ADCUserInterrupt *
 ---------------------------------------------------------------------------------
 (10) _ADCUserInterrupt                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _ADCC_DefaultADTI_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_SetADTIInterruptHandler
   _ApplicationTask
     _ADCC_HasErrorCrossedLowerThreshold
     _ADCC_HasErrorCrossedUpperThreshold
     _ADCC_Initialize_AverageMode
     _ADCC_Initialize_BasicMode
     _ADCC_Initialize_BurstAverageMode
     _ADCC_Initialize_LowPassFilterMode
     _ADCC_SetChannel
     _EUSART1_IsTxReady *
     _EUSART1_Write *
     _TMR0_Reload *
     _TMR0_Start *
     _TMR0_Stop *
     _TMR4_PeriodCountSet *
     _TMR4_Start *
     _TMR4_Stop *
     _printf *
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
               _EUSART1_IsTxReady
               _EUSART1_Write
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _CLOCK_Initialize
     _EUSART1_Initialize
       _EUSART1_FramingErrorCallbackRegister
       _EUSART1_OverrunErrorCallbackRegister
     _INTERRUPT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_OverflowCallbackRegister
     _TMR4_Initialize
       _TMR4_OverflowCallbackRegister
   _TMR0_OverflowCallbackRegister *
   _TMR4_OverflowCallbackRegister *

 _INTERRUPT_InterruptManager (ROOT)
   _ADCC_ThresholdISR
     NULL(Fake) *
     _ADCC_DefaultADTI_ISR *
     _ADCUserInterrupt *
   _PIN_MANAGER_IOC
   _TMR4_ISR
     NULL(Fake) *
     _TMR0_DefaultOverflowCallback *
     _TMR4UserInterrupt *
     _TMR4_DefaultOverflowCallback *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      54        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFR          100      0       0      53        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      20       5       20.0%
BITBIGSFR_1llll     88      0       0      51        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2B      54       1       89.4%
BITBIGSFR_1llll     27      0       0      40        0.0%
BITBANK14           1F      0       0      31        0.0%
BANK14              1F      0       0      32        0.0%
BIGRAM_1            1F      0       0      52        0.0%
BITBIGSFR_1llll     1E      0       0      42        0.0%
BITBIGSFR_1hhhh     1C      0       0      34        0.0%
BITBIGSFR_1hhhh     18      0       0      35        0.0%
BITBIGSFR_1hhhh     15      0       0      36        0.0%
BITBIGSFR_1hhhl     13      0       0      39        0.0%
BITBIGSFR_1hhhh      D      0       0      33        0.0%
BITBIGSFR_1llll      C      0       0      41        0.0%
BITBIGSFR_1llll      C      0       0      49        0.0%
BITBIGSFR_1hhhh      9      0       0      37        0.0%
BITBIGSFR_1llll      9      0       0      45        0.0%
BITBIGSFR_1llll      8      0       0      50        0.0%
BITBIGSFR_1llll      3      0       0      47        0.0%
BITBIGSFR_1hhhh      2      0       0      38        0.0%
BITBIGSFR_1llll      2      0       0      48        0.0%
BITBIGSFR_1llll      1      0       0      43        0.0%
BITBIGSFR_1llll      1      0       0      44        0.0%
BITBIGSFR_1llll      1      0       0      46        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      74      18        0.0%
DATA                 0      0      74       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Jan 24 11:35:39 2024

                                                 PL2 0348                                                   PL4 0904  
                                                 PL6 085C                                                   PL8 0862  
                                       ___awdiv@sign 0008                                 TMR0_Reload@periodVal 0003  
                                       _adcReadyFlag 003E                                                  PL10 0456  
                                                PL20 0482                                                  PL12 0356  
                                                PL22 0490                                                  PL14 046E  
                                                PL24 049E                                                  PL16 0478  
                                                PL26 0362                                                  PL18 0528  
                                                PL28 036C                                 ?_TMR4_PeriodCountSet 0003  
                                                l656 098E                                                  l860 0328  
                                                _PR4 0FB5                                                  u990 05F2  
                         ??_INT0_SetInterruptHandler 0006                                                  _abs 082A  
                                       ___awmod@sign 0008                                                  tosl 0FFD  
                                                wreg 0FE8                                         _BAUD1CONbits 0F9E  
                                               ?_abs 0009                                                 l2311 0616  
                                               l2315 0622                                                 l2307 060C  
                                               l2331 064A                                                 l2403 0434  
                                               l1612 0838                                                 l2413 044C  
                                               l2351 068A                                                 l2343 0674  
                                               l2335 0656                                                 l2327 063E  
                                               l2407 0440                                                 l2337 065E  
                                               l2361 04BA                                                 l2409 0448  
                                               l2433 077E                                                 l2601 00EE  
                                               l2283 05C6                                                 l2347 067E  
                                               l2267 0994                                                 l2435 0792  
                                               l2605 00FE                                                 l2295 05E6  
                                               l2297 05EE                                                 l2289 05D6  
                                               l2641 01B0                                                 l2633 0172  
                                               l2609 0110                                                 l2627 0160  
                                               l2571 0070                                                 l2555 0002  
                                               l2389 03D6                                                 l2637 0190  
                                               l2671 027E                                                 l2663 0228  
                                               l2577 008C                                                 l2683 02FE  
                                               l2675 02AA                                                 l2667 0252  
                                               l2659 0220                                                 l2595 00DC  
                                               l2679 02D4                                                 l2689 032E  
                                               STR_1 FFE6                                                 STR_2 FFCF  
                                               STR_3 FF96                                                 STR_4 FF5D  
                                               STR_5 FFC9                                                 STR_6 FF90  
                                               STR_7 FF57                                                 u1110 04EC  
                                               u1050 0662                                                 u1150 039A  
                                               u1090 04B4                                                 u1308 002E  
                                               u1309 0042                                                 _LATA 0F82  
                                               u1190 0422                                                 u1318 0058  
                                               _LATB 0F83                                                 u1319 006C  
                                               _LATC 0F84                                                 u1408 011C  
                                               _LATD 0F85                                                 u1409 0130  
                                               _LATE 0F86                                                 u1418 0146  
                                               u1419 015A                                                 u1508 022E  
                                               u1348 0098                                                 u1509 0248  
                                               u1349 00AC                                                 u1358 00C2  
                                               u1359 00D6                                                 u1608 0304  
                                               u1528 0258                                                 u1609 031E  
                                               u1529 0272                                                 u1298 000E  
                                               u1299 0022                                                 u1548 0284  
                                               u1468 01BC                                                 u1628 06C8  
                                               u1549 029E                                                 u1469 01D0  
                                               u1629 06E2                                                 u1478 01DC  
                                               u1479 01F0                                                 u1568 02B0  
                                               u1488 0206                                                 u1569 02CA  
                                               u1489 021A                                                 _T4PR 0FB5  
                                               u1588 02DA                                                 u1589 02F4  
                                               _WPUA 0F0B                                                 _WPUB 0F13  
                                               _WPUC 0F1B                                                 _WPUD 0F20  
                                               _WPUE 0F28                                        _EUSART1_Write 09E6  
                                               abs@a 0009                                                 _dbuf 0060  
                                               _main 0694                                                 fsr1h 0FE2  
                                               fsr2h 0FDA                                                 indf2 0FDF  
                                               fsr1l 0FE1                                                 fsr2l 0FD9  
                                               btemp 0055                            ?_INT2_SetInterruptHandler 0003  
                                               start 0046                                         ___param_bank 0000  
                             ADCC_SetChannel@channel 0003                                                ??_abs 000B  
                            __end_of_TMR0_Initialize 089C                              __end_of_ApplicationTask 0348  
                              ??_TMR4_PeriodCountSet 0005                                                _ADACQ 0F57  
                                              _ADCAP 0F58                                                _ADACT 0F51  
                                              ?_main 0001                                                _ADCLK 0F52  
                                              _ADCNT 0F62                                                _ADPCH 0F5A  
                                              _ADREF 0F53                                      __end_of___awdiv 062C  
                                              _ADLTH 0F65                                                _ADRES 0F5E  
                                              _ADPRE 0F59                                      __end_of___awmod 0694  
                                              _ADRPT 0F61                                                _ADUTH 0F67  
                                    ___awdiv@divisor 0005                                                _T4CON 0FB6  
                                              _IOCAF 0F05                                                _IOCBF 0F0D  
                                              _IOCCF 0F15                                                _IOCAN 0F06  
                                              _IOCEF 0F22                                                _IOCAP 0F07  
                                              _IOCBN 0F0E                                                _IOCBP 0F0F  
                                              _IOCCN 0F16                                                _IOCCP 0F17  
                                              _T4HLT 0FB7                                                _IOCEN 0F23  
                                              _IOCEP 0F24                           _ADCC_ADTI_InterruptHandler 0052  
                                              _T4TMR 0FB4                                                _T4RST 0FB9  
                                              i2l352 003A                                                i2l345 0020  
                                              i2l348 0030                                      ___awdiv@counter 0007  
                                              _OSCEN 0ED7                                                _UART1 FEFD  
                                       vfpfcnvrt@fmt 0010                                                _TMR0H 0FD3  
                                              _TMR0L 0FD2                                                _TRISA 0F87  
                                              _TRISB 0F88                                                _TRISC 0F89  
                                              _TRISD 0F8A                                                _TRISE 0F8B  
                                    _TMR4_Initialize 0800         __end_of_EUSART1_FramingErrorCallbackRegister 0944  
             ??_EUSART1_FramingErrorCallbackRegister 0006                ?_EUSART1_FramingErrorCallbackRegister 0003  
               _EUSART1_FramingErrorCallbackRegister 092C                                     __end_of_TMR4_ISR 08BC  
                                        ?_TMR0_Start 0001                              __end_of_PIN_MANAGER_IOC 0A36  
                                              _count 003F                                                _fputc 04A8  
                                        ?_TMR4_Start 0001                                                _putch 0992  
                     ??_TMR4_DefaultOverflowCallback 0001                             _INT1_SetInterruptHandler 0A2C  
                                     ?_EUSART1_Write 0001                                                pclath 0FFA  
                                              pclatu 0FFB                                                tablat 0FF5  
                             ??_ADCC_DefaultADTI_ISR 0001                                _EUSART1_AutoBaudQuery 0000  
                                              ttemp5 0056                                                ttemp6 0059  
                                              ttemp7 005D                                                status 0FD8  
                                              wtemp8 0056                         ?_ADCC_Initialize_AverageMode 0001  
                                    __initialization 0732                           __end_of_EUSART1_Initialize 0800  
                                       __end_of_main 06E8                          ?_INTERRUPT_InterruptManager 0001  
                                             ??_main 002C                                        __activetblptr 0003  
EUSART1_OverrunErrorCallbackRegister@callbackHandler 0003  EUSART1_FramingErrorCallbackRegister@callbackHandler 0003  
                                             _ADACCH 0F6C                                               _ADACCL 0F6B  
                                             _ADCON0 0F5B                                               _ADCON1 0F54  
                                             _ADCON2 0F55                                               _ADCON3 0F56  
                                             _ADFLTR 0F6D                                               _ADERRH 0F6A  
                                             _ADERRL 0F69                                               ?_fputc 0005  
                                             _ADLTHH 0F66                                               _ADLTHL 0F65  
                                             _ADRESH 0F5F                                               _ADRESL 0F5E  
                                             _ADSTAT 0F60                                               _ADUTHH 0F68  
                                   ___awdiv@dividend 0003                                               _ADUTHL 0F67  
                                             _ADSTPT 0F63                                               _ANSELA 0F0C  
                                             ?_putch 0001                                               _ANSELB 0F14  
                                             _ANSELC 0F1C                                               _ANSELD 0F21  
                                             _ANSELE 0F29                                               _T0CON0 0FD4  
                                             _T0CON1 0FD5                                               _RC1REG 0F98  
                                             _RC1STA 0F9C                                               _ODCONA 0F0A  
                                             _ODCONB 0F12                                               _RC6PPS 0EF8  
                                             _ODCONC 0F1A                                               _ODCOND 0F1F  
                                             _ODCONE 0F27                                               _INLVLA 0F08  
                                             _INLVLB 0F10                                               _INLVLC 0F18  
                                             _INLVLD 0F1D                                               _INLVLE 0F25  
                                             _OSCFRQ 0ED9                                        vfpfcnvrt@done 0014  
                                             _RX1PPS 0EB0                                               _TX1REG 0F99  
                                             _TX1STA 0F9D                                               _Timer0 0040  
                                             _Timer4 FF45                                         vfprintf@cfmt 0021  
                                       ?_TMR0_Reload 0003                                    _ADCC_ThresholdISR 08BC  
                                  __end_of_TMR0_Stop 0A1E                                            ??___awdiv 0007  
                                          ??___awmod 0007                                    __end_of_TMR4_Stop 0A22  
                                   ?_TMR0_Initialize 0001                                   ?_ADCC_ThresholdISR 0001  
                            __end_of_TMR4_Initialize 082A                                               clear_0 0758  
                                             clear_1 0764                                     ___awdiv@quotient 0009  
                                    ___awmod@divisor 0005                                               isa$std 0001  
                                    ___awmod@counter 0007                                               _printf 0944  
                                   ?_ApplicationTask 0001                                    ?_CLOCK_Initialize 0001  
              __end_of_TMR4_OverflowCallbackRegister 09CE                        _TMR4_OverflowCallbackRegister 09C0  
                                    _ADCC_Initialize 06E8                                    ?_ADCUserInterrupt 0001  
                                             fputc@c 0005                         _INT2_DefaultInterruptHandler 0000  
                                       __pdataCOMRAM 0040                                   ??_CLOCK_Initialize 0003  
                                ??_ADCC_ThresholdISR 0001                                         __mediumconst FEFC  
                                 ??_ADCUserInterrupt 0001                                               tblptrh 0FF7  
                                             tblptrl 0FF6                                               tblptru 0FF8  
       __end_of_EUSART1_OverrunErrorCallbackRegister 092C               ??_EUSART1_OverrunErrorCallbackRegister 0006  
              ?_EUSART1_OverrunErrorCallbackRegister 0003                 _EUSART1_OverrunErrorCallbackRegister 0914  
                                   __end_of_vfprintf 07A6                                      ??_EUSART1_Write 0003  
           INT2_SetInterruptHandler@InterruptHandler 0003             INT1_SetInterruptHandler@InterruptHandler 0003  
           INT0_SetInterruptHandler@InterruptHandler 0003         ADCC_SetADTIInterruptHandler@InterruptHandler 0003  
                                   ?_PIN_MANAGER_IOC 0001                                      _ADCC_SetChannel 09EE  
                                  _SYSTEM_Initialize 08DC                                           __accesstop 0060  
                            __end_of__initialization 076A                                   ?_SYSTEM_Initialize 0001  
                                      ___rparam_used 0001                                        __end_of_UART1 FF45  
                          __end_of_ADCC_ThresholdISR 08DC                                       __pcstackCOMRAM 0001  
                                ??_SYSTEM_Initialize 0006                                            ?_TMR4_ISR 0001  
                                      __end_of_fputc 0528                                        __end_of_putch 09A2  
                                         __end_ofPL2 0356                                           __end_ofPL4 0914  
                                         __end_ofPL6 0862                                           __end_ofPL8 087A  
                   __end_of_INT2_SetInterruptHandler 0A2C                                              ??_fputc 0009  
                          __end_of_SYSTEM_Initialize 08F8                                              ??_putch 0004  
                                         __pbssBANK0 0060                                           __pnvCOMRAM 0052  
                              _TMR0_OverflowCallback 0032           __end_of_ADCC_HasErrorCrossedLowerThreshold 0A0E  
               ??_ADCC_HasErrorCrossedLowerThreshold 0003                  ?_ADCC_HasErrorCrossedLowerThreshold 0001  
                 _ADCC_HasErrorCrossedLowerThreshold 0A08                                           ??_TMR4_ISR 0001  
                            __end_of_ADCC_Initialize 0732                                              _ADFLTRH 0F6E  
                                            _ADFLTRL 0F6D                                              _ADPREVH 0F5D  
                                            _ADPREVL 0F5C                 __end_of_ADCC_SetADTIInterruptHandler 09DC  
                       _ADCC_SetADTIInterruptHandler 09CE                                     _EUSART1_IsTxDone 0000  
                                   ?_TMR4_Initialize 0001                               _EUSART1_IsTxReady$1490 0003  
                                            _ADSTPTH 0F64                                              _ADSTPTL 0F63  
                                            ?_printf 0023                                     _EUSART1_ErrorGet 0000  
                                            _T4INPPS 0EA7                           ??_INT1_SetInterruptHandler 0006  
                            __end_of_ADCC_SetChannel 09F6                                              _SP1BRGH 0F9B  
                                            _SP1BRGL 0F9A                                              _OSCCON1 0ED3  
                                            _OSCCON3 0ED5                                              _OSCTUNE 0ED8  
                                       ??_TMR0_Start 0003                                              _SLRCONA 0F09  
                                            _SLRCONB 0F11                                              _SLRCONC 0F19  
                                            _SLRCOND 0F1E                                              _SLRCONE 0F26  
                     ?_TMR4_OverflowCallbackRegister 0003                                         ??_TMR4_Start 0003  
         __end_of_ADCC_HasErrorCrossedUpperThreshold 0A08                 ??_ADCC_HasErrorCrossedUpperThreshold 0003  
                ?_ADCC_HasErrorCrossedUpperThreshold 0001                   _ADCC_HasErrorCrossedUpperThreshold 0A02  
                          ?_INT0_SetInterruptHandler 0003                                 _EUSART1_Deinitialize 0000  
                             _EUSART1_TransmitEnable 0000                                              __Hparam 0000  
                                            __Lparam 0000                          __end_of_TMR4_PeriodCountSet 0A02  
                                            ___awdiv 05B4                                              ___awmod 062C  
                                          ?_vfprintf 001C                                   __end_of_TMR0_Start 0A26  
                                            __pcinit 0732                                   __end_of_TMR4_Start 0A2A  
                                            __ramtop 0F00                                              __ptext0 0694  
                                            __ptext1 08DC                                              __ptext2 0800  
                                            __ptext3 09B2                                              __ptext4 09C0  
                                            __ptext5 087A                                              __ptext6 0532  
                                            __ptext7 07A6                                              __ptext8 0A2A  
                                            __ptext9 0A2C                        ?_ADCC_SetADTIInterruptHandler 0003  
                                      _basicModeInit 003D                                     ___awmod@dividend 0003  
                                          _T4CONbits 0FB6                                   _EUSART1_Initialize 07D4  
                           ??_PIN_MANAGER_Initialize 0003        TMR4_OverflowCallbackRegister@InterruptHandler 0003  
                               end_of_initialization 076A                             _INT2_SetInterruptHandler 0A2A  
                                ?_EUSART1_Initialize 0001                                              fputc@fp 0007  
                        _EUSART1_OverrunErrorHandler 002C             __end_of_ADCC_Initialize_BurstAverageMode 085C  
                 ??_ADCC_Initialize_BurstAverageMode 0003                    ?_ADCC_Initialize_BurstAverageMode 0001  
                   _ADCC_Initialize_BurstAverageMode 0852                                    __end_of_vfpfcnvrt 0456  
                                            postdec1 0FE5                                              postdec2 0FDD  
                                            postinc0 0FEE                                              postinc1 0FE6  
                                            postinc2 0FDE                                     vfpfcnvrt@convarg 0017  
                                   ?_ADCC_Initialize 0001                                           ??_vfprintf 0021  
                               ??_EUSART1_Initialize 0006                                            _TMR0_Stop 0A1A  
                                          _PORTCbits 0F8E                                            _TMR4_Stop 0A1E  
              __end_of_TMR0_OverflowCallbackRegister 09C0                        _TMR0_OverflowCallbackRegister 09B2  
                                   ?_ADCC_SetChannel 0001         TMR0_OverflowCallbackRegister@CallbackHandler 0003  
                                EUSART1_Write@txData 0003                                         _EUSART1_Read 0000  
               __end_of_TMR0_DefaultOverflowCallback 0A32                         _TMR0_DefaultOverflowCallback 0A30  
                                     __end_of_Timer4 FF57                         __end_of_INTERRUPT_Initialize 07D4  
                       _INT0_DefaultInterruptHandler 0000                                          vfpfcnvrt@ap 0011  
                                        vfpfcnvrt@cp 0015                                          vfpfcnvrt@fp 000E  
                                      __pidataCOMRAM 095C                                           ?_TMR0_Stop 0001  
                                         ?_TMR4_Stop 0001                                       __end_of_printf 095C  
                                        __end_ofPL10 046E                                          __end_ofPL20 0490  
                                        __end_ofPL12 0362                                          __end_ofPL22 049E  
                                        __end_ofPL14 0478                                          __end_ofPL24 04A8  
                                        __end_ofPL16 0482                                          __end_ofPL26 036C  
                                        __end_ofPL18 0532                                          __end_ofPL28 0374  
                                start_initialization 0732                                          __end_of_abs 0852  
                                        putch@txData 0004                                __end_of_EUSART1_Write 09EE  
                __end_of_ADCC_Initialize_AverageMode 0904                          _ADCC_Initialize_AverageMode 08F8  
                      ?_TMR0_DefaultOverflowCallback 0001                                          vfprintf@fmt 001E  
                         ?_ADCC_Initialize_BasicMode 0001                        ??_ADCC_Initialize_AverageMode 0003  
                                           ??_printf 002B                                          __pbssCOMRAM 002C  
                   __end_of_INT0_SetInterruptHandler 0A30                       ?_TMR0_OverflowCallbackRegister 0003  
                             _PIN_MANAGER_Initialize 0532                      ??_TMR4_OverflowCallbackRegister 0006  
                                          __pintcode 0008                                        __pmediumconst FEFC  
                  __end_of_ADCC_Initialize_BasicMode 09E6                                             ?___awdiv 0003  
                                           ?___awmod 0003                                          _avgModeInit 003C  
                       ??_INTERRUPT_InterruptManager 0001                                          ??_TMR0_Stop 0003  
                                        ??_TMR4_Stop 0003                                             _BAUD1CON 0F9E  
                         ??_INT2_SetInterruptHandler 0006                                    _EUSART1_IsRxReady 0000  
                                  _EUSART1_IsTxReady 0980                                   ?_EUSART1_IsTxReady 0001  
                                           _T4CLKCON 0FB8                                 _INTERRUPT_Initialize 07A6  
                                   _CLOCK_Initialize 096E                                    ??_TMR0_Initialize 0006  
                                           _LATAbits 0F82                                     _ADCUserInterrupt 0A14  
                                  ??_ApplicationTask 002C                                  ??_EUSART1_IsTxReady 0003  
                          ?_INT1_SetInterruptHandler 0003                                             _PIE0bits 0EBD  
                                           _PIE1bits 0EBE                                             _PIE4bits 0EC1  
                                           _PIR0bits 0EC5                                             _PIR1bits 0EC6  
                                           _PIR3bits 0EC8                                             _PIR4bits 0EC9  
                                      ??_TMR0_Reload 0005                                             _TMR4_ISR 089C  
                                  ??_PIN_MANAGER_IOC 0001                       ??_TMR0_DefaultOverflowCallback 0001  
                                          _vfpfcnvrt 0374                         __end_of_ADCC_DefaultADTI_ISR 0A38  
                          __end_of_EUSART1_IsTxReady 0992                                     _burstAvgModeInit 003B  
                                         vfpfcnvrt@c 001B                                            copy_data0 0746  
                              ?_INTERRUPT_Initialize 0001                             _INT0_SetInterruptHandler 0A2E  
                                _EUSART1_AutoBaudSet 0000                              _EUSART1_TransmitDisable 0000  
                                         _ADSTATbits 0F60            __end_of_ADCC_Initialize_LowPassFilterMode 09B2  
                ??_ADCC_Initialize_LowPassFilterMode 0003                   ?_ADCC_Initialize_LowPassFilterMode 0001  
                  _ADCC_Initialize_LowPassFilterMode 09A2                                             __Hrparam 0000  
                                         vfprintf@ap 0020                                             __Lrparam 0000  
                                         vfprintf@fp 001C                                          _lpfModeInit 003A  
                                         ?_vfpfcnvrt 000E                                  __end_of_TMR0_Reload 09FC  
                _EUSART1_DefaultFramingErrorCallback 0000                                           _T0CON0bits 0FD4  
                                           __ptext10 0A2E                                             __ptext11 07D4  
                                           __ptext20 0374                                             __ptext12 0914  
                                           __ptext21 04A8                                             __ptext13 092C  
                                           __ptext30 0A22                                             __ptext22 0992  
                                           __ptext14 096E                                             __ptext31 0A26  
                                           __ptext23 09E6                                             __ptext15 06E8  
                                           __ptext40 0A08                                             __ptext32 09F6  
                                           __ptext24 0980                                             __ptext16 09CE  
                                           __ptext33 09FC                                             __ptext25 082A  
                                           __ptext17 0000                                             __ptext42 089C  
                                           __ptext34 09EE                                             __ptext26 062C  
                                           __ptext18 0944                                             __ptext43 0A0E  
                                           __ptext35 09A2                                             __ptext27 05B4  
                                           __ptext19 0774                                             __ptext44 0A30  
                                           __ptext36 0852                                             __ptext28 0A1A  
                                           __ptext45 0A32                                             __ptext37 09DC  
                                           __ptext29 0A1E                                             __ptext46 0A34  
                                           __ptext38 08F8                                             __ptext47 08BC  
                                           __ptext39 0A02                                             __ptext48 0A36  
                                           __ptext49 0A14                                    ??_TMR4_Initialize 0006  
                                         _RC1STAbits 0F9C                                             isa$xinst 0000  
                        ??_ADCC_Initialize_BasicMode 0003                                             int$flags 0055  
                                           _vfprintf 0774                   __end_of_INTERRUPT_InterruptManager 0046  
                         _INTERRUPT_InterruptManager 0008                                            printf@fmt 0023  
                        _EUSART1_FramingErrorHandler 002F                         _INT1_DefaultInterruptHandler 0000  
               __end_of_TMR4_DefaultOverflowCallback 0A34                         _TMR4_DefaultOverflowCallback 0A32  
                                         _INTCONbits 0FF2                               ??_INTERRUPT_Initialize 0006  
                                  _TMR4UserInterrupt 0A0E                                   ?_TMR4UserInterrupt 0001  
                                           intlevel2 0000                         TMR4_PeriodCountSet@periodVal 0003  
                            ?_PIN_MANAGER_Initialize 0001                                 _ADCC_DefaultADTI_ISR 0A36  
                                ??_TMR4UserInterrupt 0001                      ??_TMR0_OverflowCallbackRegister 0006  
                                        _TMR0_Reload 09F6                                             printf@ap 002B  
                                        ??_vfpfcnvrt 0012                                   _eusart1RxLastError 0038  
                           __end_of_CLOCK_Initialize 0980                             __end_of_ADCUserInterrupt 0A1A  
                                    _TMR0_Initialize 087A                            __end_of_TMR4UserInterrupt 0A14  
                      ?_TMR4_DefaultOverflowCallback 0001                     __end_of_INT1_SetInterruptHandler 0A2E  
                _EUSART1_DefaultOverrunErrorCallback 0000                                      _ApplicationTask 0000  
                          _ADCC_Initialize_BasicMode 09DC                                           _TMR0_Tasks 0000  
                                         _TMR0_Start 0A22                                           _TX1STAbits 0F9D  
                                         _TMR4_Start 0A26                       ??_ADCC_SetADTIInterruptHandler 0006  
                     __end_of_PIN_MANAGER_Initialize 05B4                                    ??_ADCC_Initialize 0006  
                              ?_ADCC_DefaultADTI_ISR 0001                                _TMR4_OverflowCallback 0035  
                                    _PIN_MANAGER_IOC 0A34                                  _TMR4_PeriodCountSet 09FC  
                                  ??_ADCC_SetChannel 0003  
