

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Dec 12 11:41:48 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F47Q10
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1
    60                           	psect	text48,global,reloc=2,class=CODE,delta=1
    61                           	psect	text49,global,reloc=2,class=CODE,delta=1
    62                           	psect	text50,global,reloc=2,class=CODE,delta=1
    63                           	psect	text51,global,reloc=2,class=CODE,delta=1
    64                           	psect	text52,global,reloc=2,class=CODE,delta=1
    65                           	psect	text53,global,reloc=2,class=CODE,delta=1
    66                           	psect	text54,global,reloc=2,class=CODE,delta=1
    67                           	psect	text55,global,reloc=2,class=CODE,delta=1
    68                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    71                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    72                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    73   000000                     
    74                           ; Generated 17/10/2023 GMT
    75                           ; 
    76                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    77                           ; All rights reserved.
    78                           ; 
    79                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    80                           ; 
    81                           ; Redistribution and use in source and binary forms, with or without modification, are
    82                           ; permitted provided that the following conditions are met:
    83                           ; 
    84                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    85                           ;        conditions and the following disclaimer.
    86                           ; 
    87                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    88                           ;        of conditions and the following disclaimer in the documentation and/or other
    89                           ;        materials provided with the distribution. Publication is not required when
    90                           ;        this file is used in an embedded application.
    91                           ; 
    92                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    93                           ;        software without specific prior written permission.
    94                           ; 
    95                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    96                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    97                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    98                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    99                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   100                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   101                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   102                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   103                           ; 
   104                           ; 
   105                           ; Code-generator required, PIC18F47Q10 Definitions
   106                           ; 
   107                           ; SFR Addresses
   108   000000                     
   109 ;; Function _INT0_DefaultInterruptHandler is unused but had its address taken
   110   000000                     
   111 ;; Function _INT1_DefaultInterruptHandler is unused but had its address taken
   112   000000                     
   113 ;; Function _INT2_DefaultInterruptHandler is unused but had its address taken
   114   000000                     
   115 ;; Function _TMR0_Tasks is unused but had its address taken
   116   000000                     
   117 ;; Function _EUSART1_Deinitialize is unused but had its address taken
   118   000000                     
   119 ;; Function _EUSART1_TransmitEnable is unused but had its address taken
   120   000000                     
   121 ;; Function _EUSART1_TransmitDisable is unused but had its address taken
   122   000000                     
   123 ;; Function _EUSART1_AutoBaudSet is unused but had its address taken
   124   000000                     
   125 ;; Function _EUSART1_AutoBaudQuery is unused but had its address taken
   126   000000                     
   127 ;; Function _EUSART1_IsRxReady is unused but had its address taken
   128   000000                     
   129 ;; Function _EUSART1_IsTxDone is unused but had its address taken
   130   000000                     
   131 ;; Function _EUSART1_ErrorGet is unused but had its address taken
   132   000000                     
   133 ;; Function _EUSART1_Read is unused but had its address taken
   134   000000                     
   135                           	psect	mediumconst
   136   00FEEA                     __pmediumconst:
   137                           	callstack 0
   138   00FEEA  00                 	db	0
   139   00FEEB                     _UART1:
   140                           	callstack 0
   141   00FEEB  32                 	db	low _EUSART1_Initialize
   142   00FEEC  0A                 	db	high _EUSART1_Initialize
   143   00FEED  01                 	db	low (_EUSART1_Initialize shr (0+16))
   144   00FEEE  00                 	db	0
   145   00FEEF  00                 	db	0
   146   00FEF0  00                 	db	0
   147   00FEF1  00                 	db	0
   148   00FEF2  00                 	db	0
   149   00FEF3  00                 	db	0
   150   00FEF4  C0                 	db	low _EUSART1_Write
   151   00FEF5  0B                 	db	high _EUSART1_Write
   152   00FEF6  01                 	db	low (_EUSART1_Write shr (0+16))
   153   00FEF7  00                 	db	0
   154   00FEF8  00                 	db	0
   155   00FEF9  00                 	db	0
   156   00FEFA  24                 	db	low _EUSART1_IsTxReady
   157   00FEFB  0F                 	db	high _EUSART1_IsTxReady
   158   00FEFC  01                 	db	low (_EUSART1_IsTxReady shr (0+16))
   159   00FEFD  00                 	db	0
   160   00FEFE  00                 	db	0
   161   00FEFF  00                 	db	0
   162   00FF00  00                 	db	0
   163   00FF01  00                 	db	0
   164   00FF02  00                 	db	0
   165   00FF03  00                 	db	0
   166   00FF04  00                 	db	0
   167   00FF05  00                 	db	0
   168   00FF06  00                 	db	0
   169   00FF07  00                 	db	0
   170   00FF08  00                 	db	0
   171   00FF09  00                 	db	0
   172   00FF0A  00                 	db	0
   173   00FF0B  00                 	db	0
   174   00FF0C  00                 	db	0
   175   00FF0D  00                 	db	0
   176   00FF0E  00                 	db	0
   177   00FF0F  00                 	db	0
   178   00FF10  00                 	db	0
   179   00FF11  00                 	db	0
   180   00FF12  00                 	db	0
   181   00FF13  00                 	db	0
   182   00FF14  00                 	db	0
   183   00FF15  00                 	db	0
   184   00FF16  00                 	db	0
   185   00FF17  00                 	db	0
   186   00FF18  00                 	db	0
   187   00FF19  00                 	db	0
   188   00FF1A  00                 	db	0
   189   00FF1B  00                 	db	0
   190   00FF1C  00                 	db	0
   191   00FF1D  00                 	db	0
   192   00FF1E  F6                 	db	low _EUSART1_TxCompleteCallbackRegister
   193   00FF1F  0D                 	db	high _EUSART1_TxCompleteCallbackRegister
   194   00FF20  01                 	db	low (_EUSART1_TxCompleteCallbackRegister shr (0+16))
   195   00FF21  18                 	db	low _EUSART1_RxCompleteCallbackRegister
   196   00FF22  0E                 	db	high _EUSART1_RxCompleteCallbackRegister
   197   00FF23  01                 	db	low (_EUSART1_RxCompleteCallbackRegister shr (0+16))
   198   00FF24  00                 	db	0
   199   00FF25  00                 	db	0
   200   00FF26  00                 	db	0
   201   00FF27  5C                 	db	low _EUSART1_FramingErrorCallbackRegister
   202   00FF28  0E                 	db	high _EUSART1_FramingErrorCallbackRegister
   203   00FF29  01                 	db	low (_EUSART1_FramingErrorCallbackRegister shr (0+16))
   204   00FF2A  3A                 	db	low _EUSART1_OverrunErrorCallbackRegister
   205   00FF2B  0E                 	db	high _EUSART1_OverrunErrorCallbackRegister
   206   00FF2C  01                 	db	low (_EUSART1_OverrunErrorCallbackRegister shr (0+16))
   207   00FF2D  00                 	db	0
   208   00FF2E  00                 	db	0
   209   00FF2F  00                 	db	0
   210   00FF30  00                 	db	0
   211   00FF31  00                 	db	0
   212   00FF32  00                 	db	0
   213   00FF33                     __end_of_UART1:
   214                           	callstack 0
   215   00FF33                     _Timer0:
   216                           	callstack 0
   217   00FF33  AE                 	db	low _TMR0_Initialize
   218   00FF34  0D                 	db	high _TMR0_Initialize
   219   00FF35  01                 	db	low (_TMR0_Initialize shr (0+16))
   220   00FF36  F0                 	db	low _TMR0_Start
   221   00FF37  0F                 	db	high _TMR0_Start
   222   00FF38  01                 	db	low (_TMR0_Start shr (0+16))
   223   00FF39  E8                 	db	low _TMR0_Stop
   224   00FF3A  0F                 	db	high _TMR0_Stop
   225   00FF3B  01                 	db	low (_TMR0_Stop shr (0+16))
   226   00FF3C  D0                 	db	low _TMR0_Reload
   227   00FF3D  0F                 	db	high _TMR0_Reload
   228   00FF3E  01                 	db	low (_TMR0_Reload shr (0+16))
   229   00FF3F  74                 	db	low _TMR0_OverflowCallbackRegister
   230   00FF40  0F                 	db	high _TMR0_OverflowCallbackRegister
   231   00FF41  01                 	db	low (_TMR0_OverflowCallbackRegister shr (0+16))
   232   00FF42  00                 	db	0
   233   00FF43  00                 	db	0
   234   00FF44  00                 	db	0
   235   00FF45                     __end_of_Timer0:
   236                           	callstack 0
   237   00FF45                     _Timer4:
   238                           	callstack 0
   239   00FF45  1E                 	db	low _TMR4_Initialize
   240   00FF46  0D                 	db	high _TMR4_Initialize
   241   00FF47  01                 	db	low (_TMR4_Initialize shr (0+16))
   242   00FF48  F4                 	db	low _TMR4_Start
   243   00FF49  0F                 	db	high _TMR4_Start
   244   00FF4A  01                 	db	low (_TMR4_Start shr (0+16))
   245   00FF4B  EC                 	db	low _TMR4_Stop
   246   00FF4C  0F                 	db	high _TMR4_Stop
   247   00FF4D  01                 	db	low (_TMR4_Stop shr (0+16))
   248   00FF4E  D6                 	db	low _TMR4_PeriodCountSet
   249   00FF4F  0F                 	db	high _TMR4_PeriodCountSet
   250   00FF50  01                 	db	low (_TMR4_PeriodCountSet shr (0+16))
   251   00FF51  82                 	db	low _TMR4_OverflowCallbackRegister
   252   00FF52  0F                 	db	high _TMR4_OverflowCallbackRegister
   253   00FF53  01                 	db	low (_TMR4_OverflowCallbackRegister shr (0+16))
   254   00FF54  00                 	db	0
   255   00FF55  00                 	db	0
   256   00FF56  00                 	db	0
   257   00FF57                     __end_of_Timer4:
   258                           	callstack 0
   259   000000                     _TX1REG	set	3993
   260   000000                     _SP1BRGH	set	3995
   261   000000                     _TX1STA	set	3997
   262   000000                     _T0CON0	set	4052
   263   000000                     _T0CON1	set	4053
   264   000000                     _T4CON	set	4022
   265   000000                     _OSCTUNE	set	3800
   266   000000                     _OSCFRQ	set	3801
   267   000000                     _IOCEF	set	3874
   268   000000                     _IOCEN	set	3875
   269   000000                     _IOCEP	set	3876
   270   000000                     _IOCCF	set	3861
   271   000000                     _IOCCN	set	3862
   272   000000                     _IOCCP	set	3863
   273   000000                     _IOCBF	set	3853
   274   000000                     _IOCBN	set	3854
   275   000000                     _IOCBP	set	3855
   276   000000                     _INLVLE	set	3877
   277   000000                     _INLVLD	set	3869
   278   000000                     _INLVLC	set	3864
   279   000000                     _INLVLB	set	3856
   280   000000                     _SLRCONE	set	3878
   281   000000                     _SLRCOND	set	3870
   282   000000                     _SLRCONC	set	3865
   283   000000                     _SLRCONB	set	3857
   284   000000                     _ODCONE	set	3879
   285   000000                     _ODCOND	set	3871
   286   000000                     _ODCONC	set	3866
   287   000000                     _ODCONB	set	3858
   288   000000                     _WPUE	set	3880
   289   000000                     _WPUD	set	3872
   290   000000                     _WPUC	set	3867
   291   000000                     _WPUB	set	3859
   292   000000                     _ANSELE	set	3881
   293   000000                     _ANSELD	set	3873
   294   000000                     _ANSELC	set	3868
   295   000000                     _ANSELB	set	3860
   296   000000                     _ADERRL	set	3945
   297   000000                     _ADERRH	set	3946
   298   000000                     _ADPREVL	set	3932
   299   000000                     _ADPREVH	set	3933
   300   000000                     _ADFLTRL	set	3949
   301   000000                     _ADFLTRH	set	3950
   302   000000                     _ADACCL	set	3947
   303   000000                     _ADACCH	set	3948
   304   000000                     _ADCNT	set	3938
   305   000000                     _ADRESL	set	3934
   306   000000                     _ADRESH	set	3935
   307   000000                     _ADACQ	set	3927
   308   000000                     _ADCON0	set	3931
   309   000000                     _ADCLK	set	3922
   310   000000                     _ADSTAT	set	3936
   311   000000                     _ADCON3	set	3926
   312   000000                     _ADCON2	set	3925
   313   000000                     _ADPRE	set	3929
   314   000000                     _ADSTPTH	set	3940
   315   000000                     _ADUTHH	set	3944
   316   000000                     _ADUTHL	set	3943
   317   000000                     _ADLTHH	set	3942
   318   00FF57                     STR_7:
   319   00FF57  42                 	db	66	;'B'
   320   00FF58  75                 	db	117	;'u'
   321   00FF59  72                 	db	114	;'r'
   322   00FF5A  73                 	db	115	;'s'
   323   00FF5B  74                 	db	116	;'t'
   324   00FF5C  20                 	db	32
   325   00FF5D  41                 	db	65	;'A'
   326   00FF5E  56                 	db	86	;'V'
   327   00FF5F  47                 	db	71	;'G'
   328   00FF60  20                 	db	32
   329   00FF61  4D                 	db	77	;'M'
   330   00FF62  6F                 	db	111	;'o'
   331   00FF63  64                 	db	100	;'d'
   332   00FF64  65                 	db	101	;'e'
   333   00FF65  20                 	db	32
   334   00FF66  2D                 	db	45
   335   00FF67  20                 	db	32
   336   00FF68  41                 	db	65	;'A'
   337   00FF69  44                 	db	68	;'D'
   338   00FF6A  46                 	db	70	;'F'
   339   00FF6B  4C                 	db	76	;'L'
   340   00FF6C  54                 	db	84	;'T'
   341   00FF6D  3D                 	db	61	;'='
   342   00FF6E  25                 	db	37
   343   00FF6F  64                 	db	100	;'d'
   344   00FF70  20                 	db	32
   345   00FF71  2D                 	db	45
   346   00FF72  20                 	db	32
   347   00FF73  53                 	db	83	;'S'
   348   00FF74  50                 	db	80	;'P'
   349   00FF75  3D                 	db	61	;'='
   350   00FF76  25                 	db	37
   351   00FF77  64                 	db	100	;'d'
   352   00FF78  20                 	db	32
   353   00FF79  2D                 	db	45
   354   00FF7A  20                 	db	32
   355   00FF7B  4C                 	db	76	;'L'
   356   00FF7C  54                 	db	84	;'T'
   357   00FF7D  3D                 	db	61	;'='
   358   00FF7E  25                 	db	37
   359   00FF7F  64                 	db	100	;'d'
   360   00FF80  20                 	db	32
   361   00FF81  2D                 	db	45
   362   00FF82  20                 	db	32
   363   00FF83  4C                 	db	76	;'L'
   364   00FF84  54                 	db	84	;'T'
   365   00FF85  20                 	db	32
   366   00FF86  43                 	db	67	;'C'
   367   00FF87  72                 	db	114	;'r'
   368   00FF88  6F                 	db	111	;'o'
   369   00FF89  73                 	db	115	;'s'
   370   00FF8A  73                 	db	115	;'s'
   371   00FF8B  65                 	db	101	;'e'
   372   00FF8C  64                 	db	100	;'d'
   373   00FF8D  0D                 	db	13
   374   00FF8E  0A                 	db	10
   375   00FF8F  00                 	db	0
   376   00FF90                     STR_6:
   377   00FF90  42                 	db	66	;'B'
   378   00FF91  75                 	db	117	;'u'
   379   00FF92  72                 	db	114	;'r'
   380   00FF93  73                 	db	115	;'s'
   381   00FF94  74                 	db	116	;'t'
   382   00FF95  20                 	db	32
   383   00FF96  41                 	db	65	;'A'
   384   00FF97  56                 	db	86	;'V'
   385   00FF98  47                 	db	71	;'G'
   386   00FF99  20                 	db	32
   387   00FF9A  4D                 	db	77	;'M'
   388   00FF9B  6F                 	db	111	;'o'
   389   00FF9C  64                 	db	100	;'d'
   390   00FF9D  65                 	db	101	;'e'
   391   00FF9E  20                 	db	32
   392   00FF9F  2D                 	db	45
   393   00FFA0  20                 	db	32
   394   00FFA1  41                 	db	65	;'A'
   395   00FFA2  44                 	db	68	;'D'
   396   00FFA3  46                 	db	70	;'F'
   397   00FFA4  4C                 	db	76	;'L'
   398   00FFA5  54                 	db	84	;'T'
   399   00FFA6  3D                 	db	61	;'='
   400   00FFA7  25                 	db	37
   401   00FFA8  64                 	db	100	;'d'
   402   00FFA9  20                 	db	32
   403   00FFAA  2D                 	db	45
   404   00FFAB  20                 	db	32
   405   00FFAC  53                 	db	83	;'S'
   406   00FFAD  50                 	db	80	;'P'
   407   00FFAE  3D                 	db	61	;'='
   408   00FFAF  25                 	db	37
   409   00FFB0  64                 	db	100	;'d'
   410   00FFB1  20                 	db	32
   411   00FFB2  2D                 	db	45
   412   00FFB3  20                 	db	32
   413   00FFB4  55                 	db	85	;'U'
   414   00FFB5  54                 	db	84	;'T'
   415   00FFB6  3D                 	db	61	;'='
   416   00FFB7  25                 	db	37
   417   00FFB8  64                 	db	100	;'d'
   418   00FFB9  20                 	db	32
   419   00FFBA  2D                 	db	45
   420   00FFBB  20                 	db	32
   421   00FFBC  55                 	db	85	;'U'
   422   00FFBD  54                 	db	84	;'T'
   423   00FFBE  20                 	db	32
   424   00FFBF  43                 	db	67	;'C'
   425   00FFC0  72                 	db	114	;'r'
   426   00FFC1  6F                 	db	111	;'o'
   427   00FFC2  73                 	db	115	;'s'
   428   00FFC3  73                 	db	115	;'s'
   429   00FFC4  65                 	db	101	;'e'
   430   00FFC5  64                 	db	100	;'d'
   431   00FFC6  0D                 	db	13
   432   00FFC7  0A                 	db	10
   433   00FFC8  00                 	db	0
   434   00FFC9                     STR_5:
   435   00FFC9  42                 	db	66	;'B'
   436   00FFCA  75                 	db	117	;'u'
   437   00FFCB  72                 	db	114	;'r'
   438   00FFCC  73                 	db	115	;'s'
   439   00FFCD  74                 	db	116	;'t'
   440   00FFCE  20                 	db	32
   441   00FFCF  41                 	db	65	;'A'
   442   00FFD0  56                 	db	86	;'V'
   443   00FFD1  47                 	db	71	;'G'
   444   00FFD2  20                 	db	32
   445   00FFD3  4D                 	db	77	;'M'
   446   00FFD4  6F                 	db	111	;'o'
   447   00FFD5  64                 	db	100	;'d'
   448   00FFD6  65                 	db	101	;'e'
   449   00FFD7  20                 	db	32
   450   00FFD8  2D                 	db	45
   451   00FFD9  20                 	db	32
   452   00FFDA  41                 	db	65	;'A'
   453   00FFDB  44                 	db	68	;'D'
   454   00FFDC  46                 	db	70	;'F'
   455   00FFDD  4C                 	db	76	;'L'
   456   00FFDE  54                 	db	84	;'T'
   457   00FFDF  3D                 	db	61	;'='
   458   00FFE0  25                 	db	37
   459   00FFE1  64                 	db	100	;'d'
   460   00FFE2  20                 	db	32
   461   00FFE3  0D                 	db	13
   462   00FFE4  0A                 	db	10
   463   00FFE5  00                 	db	0
   464   00FFE6                     STR_1:
   465   00FFE6  42                 	db	66	;'B'
   466   00FFE7  61                 	db	97	;'a'
   467   00FFE8  73                 	db	115	;'s'
   468   00FFE9  69                 	db	105	;'i'
   469   00FFEA  63                 	db	99	;'c'
   470   00FFEB  20                 	db	32
   471   00FFEC  4D                 	db	77	;'M'
   472   00FFED  6F                 	db	111	;'o'
   473   00FFEE  64                 	db	100	;'d'
   474   00FFEF  65                 	db	101	;'e'
   475   00FFF0  20                 	db	32
   476   00FFF1  2D                 	db	45
   477   00FFF2  20                 	db	32
   478   00FFF3  41                 	db	65	;'A'
   479   00FFF4  44                 	db	68	;'D'
   480   00FFF5  52                 	db	82	;'R'
   481   00FFF6  45                 	db	69	;'E'
   482   00FFF7  53                 	db	83	;'S'
   483   00FFF8  3D                 	db	61	;'='
   484   00FFF9  25                 	db	37
   485   00FFFA  64                 	db	100	;'d'
   486   00FFFB  20                 	db	32
   487   00FFFC  0D                 	db	13
   488   00FFFD  0A                 	db	10
   489   00FFFE  00                 	db	0
   490   00FFFF  00                 	db	0	; dummy byte at the end
   491   000000                     
   492                           	psect	nvBANK0
   493   0000AC                     __pnvBANK0:
   494                           	callstack 0
   495   0000AC                     _ADCC_ADTI_InterruptHandler:
   496                           	callstack 0
   497   0000AC                     	ds	3
   498   000000                     _ADRES	set	3934
   499   000000                     _ADCON1bits	set	3924
   500   000000                     _ADCON2bits	set	3925
   501   000000                     _ADCON3bits	set	3926
   502   000000                     _ADCON0bits	set	3931
   503   000000                     _ADLTH	set	3941
   504   000000                     _ADUTH	set	3943
   505   000000                     _ADSTPT	set	3939
   506   000000                     _ADFLTR	set	3949
   507   000000                     _LATAbits	set	3970
   508   000000                     _BAUD1CONbits	set	3998
   509   000000                     _TX1STAbits	set	3997
   510   000000                     _RC1STAbits	set	3996
   511   000000                     _T0CON0bits	set	4052
   512   000000                     _PR4	set	4021
   513   000000                     _TMR4	set	4020
   514   000000                     _T4CONbits	set	4022
   515   000000                     _T4RSTbits	set	4025
   516   000000                     _T4HLTbits	set	4023
   517   000000                     _ADSTATbits	set	3936
   518   000000                     _T4INPPS	set	3751
   519   000000                     _RX1PPS	set	3760
   520   000000                     _PIE1bits	set	3774
   521   000000                     _PIR1bits	set	3782
   522   000000                     _ADACT	set	3921
   523   000000                     _ADREF	set	3923
   524   000000                     _ADCON1	set	3924
   525   000000                     _ADCAP	set	3928
   526   000000                     _ADPCH	set	3930
   527   000000                     _ADRPT	set	3937
   528   000000                     _ADSTPTL	set	3939
   529   000000                     _ADLTHL	set	3941
   530   000000                     _PIR3bits	set	3784
   531   000000                     _OSCCON1	set	3795
   532   000000                     _RC6PPS	set	3832
   533   000000                     _INLVLA	set	3848
   534   000000                     _SLRCONA	set	3849
   535   000000                     _ODCONA	set	3850
   536   000000                     _WPUA	set	3851
   537   000000                     _ANSELA	set	3852
   538   000000                     _PIE3bits	set	3776
   539   000000                     _PIR0bits	set	3781
   540   000000                     _LATA	set	3970
   541   000000                     _PORTCbits	set	3982
   542   000000                     _RC1REG	set	3992
   543   000000                     _SP1BRGL	set	3994
   544   000000                     _RC1STA	set	3996
   545   000000                     _BAUD1CON	set	3998
   546   000000                     _T4TMR	set	4020
   547   000000                     _T4PR	set	4021
   548   000000                     _T4HLT	set	4023
   549   000000                     _T4CLKCON	set	4024
   550   000000                     _INTCONbits	set	4082
   551   000000                     _TRISE	set	3979
   552   000000                     _TRISD	set	3978
   553   000000                     _TRISC	set	3977
   554   000000                     _TRISB	set	3976
   555   000000                     _TRISA	set	3975
   556   000000                     _LATE	set	3974
   557   000000                     _LATD	set	3973
   558   000000                     _LATC	set	3972
   559   000000                     _LATB	set	3971
   560   000000                     _PIE0bits	set	3773
   561   000000                     _IOCAF	set	3845
   562   000000                     _IOCAN	set	3846
   563   000000                     _IOCAP	set	3847
   564   000000                     _OSCCON3	set	3797
   565   000000                     _OSCEN	set	3799
   566   000000                     _PIE4bits	set	3777
   567   000000                     _PIR4bits	set	3785
   568   000000                     _TMR0L	set	4050
   569   000000                     _TMR0H	set	4051
   570   000000                     _T4RST	set	4025
   571                           
   572                           ; #config settings
   573                           
   574                           	psect	cinit
   575   010DD4                     __pcinit:
   576                           	callstack 0
   577   010DD4                     start_initialization:
   578                           	callstack 0
   579   010DD4                     __initialization:
   580                           	callstack 0
   581                           
   582                           ; Clear objects allocated to BANK0 (68 bytes)
   583   010DD4  EE00  F060         	lfsr	0,__pbssBANK0
   584   010DD8  0E44               	movlw	68
   585   010DDA                     clear_0:
   586   010DDA  6AEE               	clrf	postinc0,c
   587   010DDC  06E8               	decf	wreg,f,c
   588   010DDE  E1FD               	bnz	clear_0
   589                           
   590                           ; Clear objects allocated to COMRAM (42 bytes)
   591   010DE0  EE00  F02D         	lfsr	0,__pbssCOMRAM
   592   010DE4  0E2A               	movlw	42
   593   010DE6                     clear_1:
   594   010DE6  6AEE               	clrf	postinc0,c
   595   010DE8  06E8               	decf	wreg,f,c
   596   010DEA  E1FD               	bnz	clear_1
   597   010DEC                     end_of_initialization:
   598                           	callstack 0
   599   010DEC                     __end_of__initialization:
   600                           	callstack 0
   601   010DEC  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   602   010DEE  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   603   010DF0  0100               	movlb	0
   604   010DF2  EF8F  F085         	goto	_main	;jump to C main() function
   605                           
   606                           	psect	bssCOMRAM
   607   00002D                     __pbssCOMRAM:
   608                           	callstack 0
   609   00002D                     _EUSART1_OverrunErrorHandler:
   610                           	callstack 0
   611   00002D                     	ds	3
   612   000030                     _EUSART1_FramingErrorHandler:
   613                           	callstack 0
   614   000030                     	ds	3
   615   000033                     _TMR0_OverflowCallback:
   616                           	callstack 0
   617   000033                     	ds	3
   618   000036                     _TMR4_OverflowCallback:
   619                           	callstack 0
   620   000036                     	ds	3
   621   000039                     _INT2_InterruptHandler:
   622                           	callstack 0
   623   000039                     	ds	3
   624   00003C                     _INT1_InterruptHandler:
   625                           	callstack 0
   626   00003C                     	ds	3
   627   00003F                     _INT0_InterruptHandler:
   628                           	callstack 0
   629   00003F                     	ds	3
   630   000042                     _EUSART1_RxInterruptHandler:
   631                           	callstack 0
   632   000042                     	ds	3
   633   000045                     _EUSART1_TxInterruptHandler:
   634                           	callstack 0
   635   000045                     	ds	3
   636   000048                     _eusart1RxLastError:
   637                           	callstack 0
   638   000048                     	ds	2
   639   00004A                     _flags:
   640                           	callstack 0
   641   00004A                     	ds	1
   642   00004B                     _lpfModeInit:
   643                           	callstack 0
   644   00004B                     	ds	1
   645   00004C                     _burstAvgModeInit:
   646                           	callstack 0
   647   00004C                     	ds	1
   648   00004D                     _avgModeInit:
   649                           	callstack 0
   650   00004D                     	ds	1
   651   00004E                     _basicModeInit:
   652                           	callstack 0
   653   00004E                     	ds	1
   654   00004F                     _adcReadyFlag:
   655                           	callstack 0
   656   00004F                     	ds	1
   657   000050                     _count:
   658                           	callstack 0
   659   000050                     	ds	1
   660   000051                     _eusart1RxCount:
   661                           	callstack 0
   662   000051                     	ds	1
   663   000052                     _eusart1RxTail:
   664                           	callstack 0
   665   000052                     	ds	1
   666   000053                     _eusart1RxHead:
   667                           	callstack 0
   668   000053                     	ds	1
   669   000054                     _eusart1TxBufferRemaining:
   670                           	callstack 0
   671   000054                     	ds	1
   672   000055                     _eusart1TxTail:
   673                           	callstack 0
   674   000055                     	ds	1
   675   000056                     _eusart1TxHead:
   676                           	callstack 0
   677   000056                     	ds	1
   678                           
   679                           	psect	bssBANK0
   680   000060                     __pbssBANK0:
   681                           	callstack 0
   682   000060                     _dbuf:
   683                           	callstack 0
   684   000060                     	ds	32
   685   000080                     _eusart1RxStatusBuffer:
   686                           	callstack 0
   687   000080                     	ds	16
   688   000090                     _eusart1RxBuffer:
   689                           	callstack 0
   690   000090                     	ds	8
   691   000098                     _eusart1TxBuffer:
   692                           	callstack 0
   693   000098                     	ds	8
   694   0000A0                     _width:
   695                           	callstack 0
   696   0000A0                     	ds	2
   697   0000A2                     _prec:
   698                           	callstack 0
   699   0000A2                     	ds	2
   700                           
   701                           	psect	cstackBANK0
   702   0000A4                     __pcstackBANK0:
   703                           	callstack 0
   704   0000A4                     ?_printf:
   705                           	callstack 0
   706   0000A4                     printf@fmt:
   707                           	callstack 0
   708                           
   709                           ; 2 bytes @ 0x0
   710   0000A4                     	ds	8
   711                           
   712                           	psect	cstackCOMRAM
   713   000001                     __pcstackCOMRAM:
   714                           	callstack 0
   715   000001                     EUSART1_ReceiveISR@regValue:
   716                           	callstack 0
   717   000001                     EUSART1_TransmitISR@tempTxTail:
   718                           	callstack 0
   719                           
   720                           ; 1 bytes @ 0x0
   721   000001                     	ds	1
   722   000002                     EUSART1_ReceiveISR@tempRxHead:
   723                           	callstack 0
   724                           
   725                           ; 1 bytes @ 0x1
   726   000002                     	ds	1
   727   000003                     ??_INTERRUPT_InterruptManager:
   728                           
   729                           ; 1 bytes @ 0x2
   730   000003                     	ds	6
   731   000009                     ?___awdiv:
   732                           	callstack 0
   733   000009                     ?___awmod:
   734                           	callstack 0
   735   000009                     EUSART1_Write@tempTxHead:
   736                           	callstack 0
   737   000009                     ADCC_SetChannel@channel:
   738                           	callstack 0
   739   000009                     TMR4_PeriodCountSet@periodVal:
   740                           	callstack 0
   741   000009                     TMR0_Reload@periodVal:
   742                           	callstack 0
   743   000009                     ___awdiv@dividend:
   744                           	callstack 0
   745   000009                     ___awmod@dividend:
   746                           	callstack 0
   747   000009                     ADCC_SetADTIInterruptHandler@InterruptHandler:
   748                           	callstack 0
   749   000009                     INT0_SetInterruptHandler@InterruptHandler:
   750                           	callstack 0
   751   000009                     INT1_SetInterruptHandler@InterruptHandler:
   752                           	callstack 0
   753   000009                     INT2_SetInterruptHandler@InterruptHandler:
   754                           	callstack 0
   755   000009                     TMR4_OverflowCallbackRegister@InterruptHandler:
   756                           	callstack 0
   757   000009                     TMR0_OverflowCallbackRegister@CallbackHandler:
   758                           	callstack 0
   759   000009                     EUSART1_FramingErrorCallbackRegister@callbackHandler:
   760                           	callstack 0
   761   000009                     EUSART1_OverrunErrorCallbackRegister@callbackHandler:
   762                           	callstack 0
   763   000009                     EUSART1_RxCompleteCallbackRegister@callbackHandler:
   764                           	callstack 0
   765   000009                     EUSART1_TxCompleteCallbackRegister@callbackHandler:
   766                           	callstack 0
   767                           
   768                           ; 3 bytes @ 0x8
   769   000009                     	ds	1
   770   00000A                     EUSART1_Write@txData:
   771                           	callstack 0
   772                           
   773                           ; 1 bytes @ 0x9
   774   00000A                     	ds	1
   775   00000B                     putch@txData:
   776                           	callstack 0
   777   00000B                     ___awdiv@divisor:
   778                           	callstack 0
   779   00000B                     ___awmod@divisor:
   780                           	callstack 0
   781                           
   782                           ; 2 bytes @ 0xA
   783   00000B                     	ds	1
   784   00000C                     fputc@c:
   785                           	callstack 0
   786                           
   787                           ; 2 bytes @ 0xB
   788   00000C                     	ds	1
   789   00000D                     ___awdiv@counter:
   790                           	callstack 0
   791   00000D                     ___awmod@counter:
   792                           	callstack 0
   793                           
   794                           ; 1 bytes @ 0xC
   795   00000D                     	ds	1
   796   00000E                     ___awdiv@sign:
   797                           	callstack 0
   798   00000E                     ___awmod@sign:
   799                           	callstack 0
   800   00000E                     fputc@fp:
   801                           	callstack 0
   802                           
   803                           ; 2 bytes @ 0xD
   804   00000E                     	ds	1
   805   00000F                     ?_abs:
   806                           	callstack 0
   807   00000F                     ___awdiv@quotient:
   808                           	callstack 0
   809   00000F                     abs@a:
   810                           	callstack 0
   811                           
   812                           ; 2 bytes @ 0xE
   813   00000F                     	ds	1
   814   000010                     ??_fputc:
   815                           
   816                           ; 1 bytes @ 0xF
   817   000010                     	ds	1
   818   000011                     ??_abs:
   819                           
   820                           ; 1 bytes @ 0x10
   821   000011                     	ds	4
   822   000015                     vfpfcnvrt@fp:
   823                           	callstack 0
   824                           
   825                           ; 2 bytes @ 0x14
   826   000015                     	ds	2
   827   000017                     vfpfcnvrt@fmt:
   828                           	callstack 0
   829                           
   830                           ; 1 bytes @ 0x16
   831   000017                     	ds	1
   832   000018                     vfpfcnvrt@ap:
   833                           	callstack 0
   834                           
   835                           ; 1 bytes @ 0x17
   836   000018                     	ds	1
   837   000019                     ??_vfpfcnvrt:
   838                           
   839                           ; 1 bytes @ 0x18
   840   000019                     	ds	2
   841   00001B                     vfpfcnvrt@done:
   842                           	callstack 0
   843                           
   844                           ; 1 bytes @ 0x1A
   845   00001B                     	ds	1
   846   00001C                     vfpfcnvrt@cp:
   847                           	callstack 0
   848                           
   849                           ; 2 bytes @ 0x1B
   850   00001C                     	ds	2
   851   00001E                     vfpfcnvrt@convarg:
   852                           	callstack 0
   853                           
   854                           ; 4 bytes @ 0x1D
   855   00001E                     	ds	4
   856   000022                     vfpfcnvrt@c:
   857                           	callstack 0
   858                           
   859                           ; 1 bytes @ 0x21
   860   000022                     	ds	1
   861   000023                     ?_vfprintf:
   862                           	callstack 0
   863   000023                     vfprintf@fp:
   864                           	callstack 0
   865                           
   866                           ; 2 bytes @ 0x22
   867   000023                     	ds	2
   868   000025                     vfprintf@fmt:
   869                           	callstack 0
   870                           
   871                           ; 2 bytes @ 0x24
   872   000025                     	ds	2
   873   000027                     vfprintf@ap:
   874                           	callstack 0
   875                           
   876                           ; 1 bytes @ 0x26
   877   000027                     	ds	1
   878   000028                     vfprintf@cfmt:
   879                           	callstack 0
   880                           
   881                           ; 2 bytes @ 0x27
   882   000028                     	ds	2
   883   00002A                     printf@ap:
   884                           	callstack 0
   885                           
   886                           ; 1 bytes @ 0x29
   887   00002A                     	ds	1
   888   00002B                     ??_ApplicationTask:
   889                           
   890                           ; 1 bytes @ 0x2A
   891   00002B                     	ds	2
   892   00002D                     
   893                           ; 1 bytes @ 0x2C
   894 ;;
   895 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   896 ;;
   897 ;; *************** function _main *****************
   898 ;; Defined at:
   899 ;;		line 40 in file "main.c"
   900 ;; Parameters:    Size  Location     Type
   901 ;;		None
   902 ;; Auto vars:     Size  Location     Type
   903 ;;		None
   904 ;; Return value:  Size  Location     Type
   905 ;;                  2  802[None  ] int 
   906 ;; Registers used:
   907 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, cstack
   908 ;; Tracked objects:
   909 ;;		On entry : 0/0
   910 ;;		On exit  : 0/0
   911 ;;		Unchanged: 0/0
   912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
   913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   917 ;;Total ram usage:        0 bytes
   918 ;; Hardware stack levels required when called: 10
   919 ;; This function calls:
   920 ;;		_ADCC_SetADTIInterruptHandler
   921 ;;		_ApplicationTask
   922 ;;		_SYSTEM_Initialize
   923 ;;		_TMR0_OverflowCallbackRegister
   924 ;;		_TMR4_OverflowCallbackRegister
   925 ;; This function is called by:
   926 ;;		Startup code after reset
   927 ;; This function uses a non-reentrant model
   928 ;;
   929                           
   930                           	psect	text0
   931   010B1E                     __ptext0:
   932                           	callstack 0
   933   010B1E                     _main:
   934                           	callstack 21
   935   010B1E                     
   936                           ;main.c: 42:     SYSTEM_Initialize();
   937   010B1E  EC3F  F087         	call	_SYSTEM_Initialize	;wreg free
   938                           
   939                           ;main.c: 61:     ADCC_SetADTIInterruptHandler(ADCUserInterrupt);
   940   010B22  0EE2               	movlw	low _ADCUserInterrupt
   941   010B24  6E09               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler^0,c
   942   010B26  0E0F               	movlw	high _ADCUserInterrupt
   943   010B28  6E0A               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)^0,c
   944   010B2A  0E01               	movlw	low (_ADCUserInterrupt shr (0+16))
   945   010B2C  6E0B               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+2)^0,c
   946   010B2E  ECDD  F087         	call	_ADCC_SetADTIInterruptHandler	;wreg free
   947   010B32                     
   948                           ;main.c: 62:     Timer4.TimeoutCallbackRegister(TMR4UserInterrupt);
   949   010B32  0E62               	movlw	low _TMR4UserInterrupt
   950   010B34  6E09               	movwf	TMR0_OverflowCallbackRegister@CallbackHandler^0,c
   951   010B36  0E0F               	movlw	high _TMR4UserInterrupt
   952   010B38  6E0A               	movwf	(TMR0_OverflowCallbackRegister@CallbackHandler+1)^0,c
   953   010B3A  0E01               	movlw	low (_TMR4UserInterrupt shr (0+16))
   954   010B3C  6E0B               	movwf	(TMR0_OverflowCallbackRegister@CallbackHandler+2)^0,c
   955   010B3E  0E51               	movlw	low (_Timer4+12)
   956   010B40  6EF6               	movwf	tblptrl,c
   957   010B42  0EFF               	movlw	high (_Timer4+12)
   958   010B44  6EF7               	movwf	tblptrh,c
   959   010B46                     	if	0	;tblptru may be non-zero
   960   010B46                     	endif
   961   010B46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
   962   010B46  0E00               	movlw	low (__mediumconst shr (0+16))
   963   010B48  6EF8               	movwf	tblptru,c
   964   010B4A                     	endif
   965   010B4A  D802               	call	u2108
   966   010B4C  EFB5  F085         	goto	u2109
   967   010B50                     u2108:
   968   010B50  0005               	push	
   969   010B52  6EFA               	movwf	pclath,c
   970   010B54  0009               	tblrd		*+
   971   010B56  50F5               	movf	tablat,w,c
   972   010B58  6EFD               	movwf	tosl,c
   973   010B5A  0009               	tblrd		*+
   974   010B5C  50F5               	movf	tablat,w,c
   975   010B5E  6EFE               	movwf	tosh,c
   976   010B60  0009               	tblrd		*+
   977   010B62  50F5               	movf	tablat,w,c
   978   010B64  6EFF               	movwf	tosu,c
   979   010B66  50FA               	movf	pclath,w,c
   980   010B68  0012               	return		;indir
   981   010B6A                     u2109:
   982   010B6A                     l3246:
   983                           
   984                           ;main.c: 66:     {;main.c: 67:         ApplicationTask();
   985   010B6A  EC00  F080         	call	_ApplicationTask	;wreg free
   986   010B6E  EFB5  F085         	goto	l3246
   987   010B72  EF97  F000         	goto	start
   988   010B76                     __end_of_main:
   989                           	callstack 0
   990                           
   991 ;; *************** function _SYSTEM_Initialize *****************
   992 ;; Defined at:
   993 ;;		line 36 in file "mcc_generated_files/system/src/system.c"
   994 ;; Parameters:    Size  Location     Type
   995 ;;		None
   996 ;; Auto vars:     Size  Location     Type
   997 ;;		None
   998 ;; Return value:  Size  Location     Type
   999 ;;                  1    wreg      void 
  1000 ;; Registers used:
  1001 ;;		wreg, status,2, status,0, cstack
  1002 ;; Tracked objects:
  1003 ;;		On entry : 0/0
  1004 ;;		On exit  : 0/0
  1005 ;;		Unchanged: 0/0
  1006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1011 ;;Total ram usage:        0 bytes
  1012 ;; Hardware stack levels used: 1
  1013 ;; Hardware stack levels required when called: 5
  1014 ;; This function calls:
  1015 ;;		_ADCC_Initialize
  1016 ;;		_CLOCK_Initialize
  1017 ;;		_EUSART1_Initialize
  1018 ;;		_INTERRUPT_Initialize
  1019 ;;		_PIN_MANAGER_Initialize
  1020 ;;		_TMR0_Initialize
  1021 ;;		_TMR4_Initialize
  1022 ;; This function is called by:
  1023 ;;		_main
  1024 ;; This function uses a non-reentrant model
  1025 ;;
  1026                           
  1027                           	psect	text1
  1028   010E7E                     __ptext1:
  1029                           	callstack 0
  1030   010E7E                     _SYSTEM_Initialize:
  1031                           	callstack 25
  1032   010E7E                     
  1033                           ;mcc_generated_files/system/src/system.c: 38:     CLOCK_Initialize();
  1034   010E7E  EC7A  F087         	call	_CLOCK_Initialize	;wreg free
  1035                           
  1036                           ;mcc_generated_files/system/src/system.c: 39:     PIN_MANAGER_Initialize();
  1037   010E82  EC65  F084         	call	_PIN_MANAGER_Initialize	;wreg free
  1038   010E86                     
  1039                           ;mcc_generated_files/system/src/system.c: 40:     ADCC_Initialize();
  1040   010E86  EC5A  F085         	call	_ADCC_Initialize	;wreg free
  1041   010E8A                     
  1042                           ;mcc_generated_files/system/src/system.c: 41:     EUSART1_Initialize();
  1043   010E8A  EC19  F085         	call	_EUSART1_Initialize	;wreg free
  1044   010E8E                     
  1045                           ;mcc_generated_files/system/src/system.c: 42:     TMR0_Initialize();
  1046   010E8E  ECD7  F086         	call	_TMR0_Initialize	;wreg free
  1047   010E92                     
  1048                           ;mcc_generated_files/system/src/system.c: 43:     TMR4_Initialize();
  1049   010E92  EC8F  F086         	call	_TMR4_Initialize	;wreg free
  1050   010E96                     
  1051                           ;mcc_generated_files/system/src/system.c: 44:     INTERRUPT_Initialize();
  1052   010E96  EC04  F086         	call	_INTERRUPT_Initialize	;wreg free
  1053   010E9A  0012               	return		;funcret
  1054   010E9C                     __end_of_SYSTEM_Initialize:
  1055                           	callstack 0
  1056                           
  1057 ;; *************** function _TMR4_Initialize *****************
  1058 ;; Defined at:
  1059 ;;		line 57 in file "mcc_generated_files/timer/src/tmr4.c"
  1060 ;; Parameters:    Size  Location     Type
  1061 ;;		None
  1062 ;; Auto vars:     Size  Location     Type
  1063 ;;		None
  1064 ;; Return value:  Size  Location     Type
  1065 ;;                  1    wreg      void 
  1066 ;; Registers used:
  1067 ;;		wreg, status,2, status,0, cstack
  1068 ;; Tracked objects:
  1069 ;;		On entry : 0/0
  1070 ;;		On exit  : 0/0
  1071 ;;		Unchanged: 0/0
  1072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1077 ;;Total ram usage:        0 bytes
  1078 ;; Hardware stack levels used: 1
  1079 ;; Hardware stack levels required when called: 4
  1080 ;; This function calls:
  1081 ;;		_TMR4_OverflowCallbackRegister
  1082 ;; This function is called by:
  1083 ;;		_SYSTEM_Initialize
  1084 ;; This function uses a non-reentrant model
  1085 ;;
  1086                           
  1087                           	psect	text2
  1088   010D1E                     __ptext2:
  1089                           	callstack 0
  1090   010D1E                     _TMR4_Initialize:
  1091                           	callstack 25
  1092   010D1E                     
  1093                           ;mcc_generated_files/timer/src/tmr4.c: 61:     T4CLKCON = 0x4;
  1094   010D1E  0E04               	movlw	4
  1095   010D20  6EB8               	movwf	184,c	;volatile
  1096                           
  1097                           ;mcc_generated_files/timer/src/tmr4.c: 63:     T4HLT = 0x11;
  1098   010D22  0E11               	movlw	17
  1099   010D24  6EB7               	movwf	183,c	;volatile
  1100                           
  1101                           ;mcc_generated_files/timer/src/tmr4.c: 65:     T4RST = 0x0;
  1102   010D26  0E00               	movlw	0
  1103   010D28  6EB9               	movwf	185,c	;volatile
  1104                           
  1105                           ;mcc_generated_files/timer/src/tmr4.c: 67:     T4PR = 0x9A;
  1106   010D2A  0E9A               	movlw	154
  1107   010D2C  6EB5               	movwf	181,c	;volatile
  1108                           
  1109                           ;mcc_generated_files/timer/src/tmr4.c: 69:     T4TMR = 0x0;
  1110   010D2E  0E00               	movlw	0
  1111   010D30  6EB4               	movwf	180,c	;volatile
  1112   010D32                     
  1113                           ;mcc_generated_files/timer/src/tmr4.c: 72:     TMR4_OverflowCallbackRegister(TMR4_Defaul
      +                          tOverflowCallback);
  1114   010D32  0EFA               	movlw	low _TMR4_DefaultOverflowCallback
  1115   010D34  6E09               	movwf	TMR4_OverflowCallbackRegister@InterruptHandler^0,c
  1116   010D36  0E0F               	movlw	high _TMR4_DefaultOverflowCallback
  1117   010D38  6E0A               	movwf	(TMR4_OverflowCallbackRegister@InterruptHandler+1)^0,c
  1118   010D3A  0E01               	movlw	low (_TMR4_DefaultOverflowCallback shr (0+16))
  1119   010D3C  6E0B               	movwf	(TMR4_OverflowCallbackRegister@InterruptHandler+2)^0,c
  1120   010D3E  ECC1  F087         	call	_TMR4_OverflowCallbackRegister	;wreg free
  1121   010D42                     
  1122                           ;mcc_generated_files/timer/src/tmr4.c: 75:     PIR4bits.TMR4IF = 0;
  1123   010D42  010E               	movlb	14	; () banked
  1124   010D44  97C9               	bcf	201,3,b	;volatile
  1125   010D46                     
  1126                           ; BSR set to: 14
  1127                           ;mcc_generated_files/timer/src/tmr4.c: 77:     PIE4bits.TMR4IE = 1;
  1128   010D46  87C1               	bsf	193,3,b	;volatile
  1129   010D48                     
  1130                           ; BSR set to: 14
  1131                           ;mcc_generated_files/timer/src/tmr4.c: 79:     T4CON = 0x90;
  1132   010D48  0E90               	movlw	144
  1133   010D4A  6EB6               	movwf	182,c	;volatile
  1134   010D4C                     
  1135                           ; BSR set to: 14
  1136   010D4C  0012               	return		;funcret
  1137   010D4E                     __end_of_TMR4_Initialize:
  1138                           	callstack 0
  1139                           
  1140 ;; *************** function _TMR0_OverflowCallbackRegister *****************
  1141 ;; Defined at:
  1142 ;;		line 108 in file "mcc_generated_files/timer/src/tmr0.c"
  1143 ;; Parameters:    Size  Location     Type
  1144 ;;  CallbackHand    3    8[COMRAM] PTR FTN()void 
  1145 ;;		 -> TMR4UserInterrupt(1), TMR0_DefaultOverflowCallback(1), TMR4_DefaultOverflowCallback(1), 
  1146 ;; Auto vars:     Size  Location     Type
  1147 ;;		None
  1148 ;; Return value:  Size  Location     Type
  1149 ;;                  1    wreg      void 
  1150 ;; Registers used:
  1151 ;;		wreg, status,2, status,0
  1152 ;; Tracked objects:
  1153 ;;		On entry : 0/0
  1154 ;;		On exit  : 0/0
  1155 ;;		Unchanged: 0/0
  1156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1157 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1160 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1161 ;;Total ram usage:        3 bytes
  1162 ;; Hardware stack levels used: 1
  1163 ;; Hardware stack levels required when called: 3
  1164 ;; This function calls:
  1165 ;;		Nothing
  1166 ;; This function is called by:
  1167 ;;		_TMR0_Initialize
  1168 ;;		_main
  1169 ;; This function uses a non-reentrant model
  1170 ;;
  1171                           
  1172                           	psect	text3
  1173   010F74                     __ptext3:
  1174                           	callstack 0
  1175   010F74                     _TMR0_OverflowCallbackRegister:
  1176                           	callstack 27
  1177   010F74                     
  1178                           ;mcc_generated_files/timer/src/tmr0.c: 108: void TMR0_OverflowCallbackRegister(void (* C
      +                          allbackHandler)(void));mcc_generated_files/timer/src/tmr0.c: 109: {;mcc_generated_files/
      +                          timer/src/tmr0.c: 110:     TMR0_OverflowCallback = CallbackHandler;
  1179   010F74  C009  F033         	movff	TMR0_OverflowCallbackRegister@CallbackHandler,_TMR0_OverflowCallback
  1180   010F78  C00A  F034         	movff	TMR0_OverflowCallbackRegister@CallbackHandler+1,_TMR0_OverflowCallback+1
  1181   010F7C  C00B  F035         	movff	TMR0_OverflowCallbackRegister@CallbackHandler+2,_TMR0_OverflowCallback+2
  1182   010F80  0012               	return		;funcret
  1183   010F82                     __end_of_TMR0_OverflowCallbackRegister:
  1184                           	callstack 0
  1185                           
  1186 ;; *************** function _TMR4_OverflowCallbackRegister *****************
  1187 ;; Defined at:
  1188 ;;		line 135 in file "mcc_generated_files/timer/src/tmr4.c"
  1189 ;; Parameters:    Size  Location     Type
  1190 ;;  InterruptHan    3    8[COMRAM] PTR FTN()void 
  1191 ;;		 -> TMR4UserInterrupt(1), TMR0_DefaultOverflowCallback(1), TMR4_DefaultOverflowCallback(1), 
  1192 ;; Auto vars:     Size  Location     Type
  1193 ;;		None
  1194 ;; Return value:  Size  Location     Type
  1195 ;;                  1    wreg      void 
  1196 ;; Registers used:
  1197 ;;		wreg, status,2, status,0
  1198 ;; Tracked objects:
  1199 ;;		On entry : 0/0
  1200 ;;		On exit  : 0/0
  1201 ;;		Unchanged: 0/0
  1202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1203 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1206 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1207 ;;Total ram usage:        3 bytes
  1208 ;; Hardware stack levels used: 1
  1209 ;; Hardware stack levels required when called: 3
  1210 ;; This function calls:
  1211 ;;		Nothing
  1212 ;; This function is called by:
  1213 ;;		_TMR4_Initialize
  1214 ;;		_main
  1215 ;; This function uses a non-reentrant model
  1216 ;;
  1217                           
  1218                           	psect	text4
  1219   010F82                     __ptext4:
  1220                           	callstack 0
  1221   010F82                     _TMR4_OverflowCallbackRegister:
  1222                           	callstack 27
  1223   010F82                     
  1224                           ;mcc_generated_files/timer/src/tmr4.c: 135: void TMR4_OverflowCallbackRegister(void (* I
      +                          nterruptHandler)(void));mcc_generated_files/timer/src/tmr4.c: 136: {;mcc_generated_files
      +                          /timer/src/tmr4.c: 137:    TMR4_OverflowCallback = InterruptHandler;
  1225   010F82  C009  F036         	movff	TMR4_OverflowCallbackRegister@InterruptHandler,_TMR4_OverflowCallback
  1226   010F86  C00A  F037         	movff	TMR4_OverflowCallbackRegister@InterruptHandler+1,_TMR4_OverflowCallback+1
  1227   010F8A  C00B  F038         	movff	TMR4_OverflowCallbackRegister@InterruptHandler+2,_TMR4_OverflowCallback+2
  1228   010F8E  0012               	return		;funcret
  1229   010F90                     __end_of_TMR4_OverflowCallbackRegister:
  1230                           	callstack 0
  1231                           
  1232 ;; *************** function _TMR0_Initialize *****************
  1233 ;; Defined at:
  1234 ;;		line 53 in file "mcc_generated_files/timer/src/tmr0.c"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;		None
  1237 ;; Auto vars:     Size  Location     Type
  1238 ;;		None
  1239 ;; Return value:  Size  Location     Type
  1240 ;;                  1    wreg      void 
  1241 ;; Registers used:
  1242 ;;		wreg, status,2, status,0, cstack
  1243 ;; Tracked objects:
  1244 ;;		On entry : 0/0
  1245 ;;		On exit  : 0/0
  1246 ;;		Unchanged: 0/0
  1247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1252 ;;Total ram usage:        0 bytes
  1253 ;; Hardware stack levels used: 1
  1254 ;; Hardware stack levels required when called: 4
  1255 ;; This function calls:
  1256 ;;		_TMR0_OverflowCallbackRegister
  1257 ;; This function is called by:
  1258 ;;		_SYSTEM_Initialize
  1259 ;; This function uses a non-reentrant model
  1260 ;;
  1261                           
  1262                           	psect	text5
  1263   010DAE                     __ptext5:
  1264                           	callstack 0
  1265   010DAE                     _TMR0_Initialize:
  1266                           	callstack 25
  1267   010DAE                     
  1268                           ;mcc_generated_files/timer/src/tmr0.c: 56:     TMR0H = 0x12;
  1269   010DAE  0E12               	movlw	18
  1270   010DB0  6ED3               	movwf	211,c	;volatile
  1271                           
  1272                           ;mcc_generated_files/timer/src/tmr0.c: 59:     TMR0L = 0x0;
  1273   010DB2  0E00               	movlw	0
  1274   010DB4  6ED2               	movwf	210,c	;volatile
  1275                           
  1276                           ;mcc_generated_files/timer/src/tmr0.c: 62:     T0CON1 = 0x4D;
  1277   010DB6  0E4D               	movlw	77
  1278   010DB8  6ED5               	movwf	213,c	;volatile
  1279   010DBA                     
  1280                           ;mcc_generated_files/timer/src/tmr0.c: 66:     TMR0_OverflowCallbackRegister(TMR0_Defaul
      +                          tOverflowCallback);
  1281   010DBA  0EF8               	movlw	low _TMR0_DefaultOverflowCallback
  1282   010DBC  6E09               	movwf	TMR0_OverflowCallbackRegister@CallbackHandler^0,c
  1283   010DBE  0E0F               	movlw	high _TMR0_DefaultOverflowCallback
  1284   010DC0  6E0A               	movwf	(TMR0_OverflowCallbackRegister@CallbackHandler+1)^0,c
  1285   010DC2  0E01               	movlw	low (_TMR0_DefaultOverflowCallback shr (0+16))
  1286   010DC4  6E0B               	movwf	(TMR0_OverflowCallbackRegister@CallbackHandler+2)^0,c
  1287   010DC6  ECBA  F087         	call	_TMR0_OverflowCallbackRegister	;wreg free
  1288   010DCA                     
  1289                           ;mcc_generated_files/timer/src/tmr0.c: 69:     PIR0bits.TMR0IF = 0;
  1290   010DCA  010E               	movlb	14	; () banked
  1291   010DCC  9BC5               	bcf	197,5,b	;volatile
  1292   010DCE                     
  1293                           ; BSR set to: 14
  1294                           ;mcc_generated_files/timer/src/tmr0.c: 72:     T0CON0 = 0x80;
  1295   010DCE  0E80               	movlw	128
  1296   010DD0  6ED4               	movwf	212,c	;volatile
  1297   010DD2                     
  1298                           ; BSR set to: 14
  1299   010DD2  0012               	return		;funcret
  1300   010DD4                     __end_of_TMR0_Initialize:
  1301                           	callstack 0
  1302                           
  1303 ;; *************** function _PIN_MANAGER_Initialize *****************
  1304 ;; Defined at:
  1305 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
  1306 ;; Parameters:    Size  Location     Type
  1307 ;;		None
  1308 ;; Auto vars:     Size  Location     Type
  1309 ;;		None
  1310 ;; Return value:  Size  Location     Type
  1311 ;;                  1    wreg      void 
  1312 ;; Registers used:
  1313 ;;		wreg, status,2
  1314 ;; Tracked objects:
  1315 ;;		On entry : 0/0
  1316 ;;		On exit  : 0/0
  1317 ;;		Unchanged: 0/0
  1318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1323 ;;Total ram usage:        0 bytes
  1324 ;; Hardware stack levels used: 1
  1325 ;; Hardware stack levels required when called: 3
  1326 ;; This function calls:
  1327 ;;		Nothing
  1328 ;; This function is called by:
  1329 ;;		_SYSTEM_Initialize
  1330 ;; This function uses a non-reentrant model
  1331 ;;
  1332                           
  1333                           	psect	text6
  1334   0108CA                     __ptext6:
  1335                           	callstack 0
  1336   0108CA                     _PIN_MANAGER_Initialize:
  1337                           	callstack 26
  1338   0108CA                     
  1339                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
  1340   0108CA  0E00               	movlw	0
  1341   0108CC  6E82               	movwf	130,c	;volatile
  1342                           
  1343                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x0;
  1344   0108CE  0E00               	movlw	0
  1345   0108D0  6E83               	movwf	131,c	;volatile
  1346                           
  1347                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x0;
  1348   0108D2  0E00               	movlw	0
  1349   0108D4  6E84               	movwf	132,c	;volatile
  1350                           
  1351                           ;mcc_generated_files/system/src/pins.c: 46:     LATD = 0x0;
  1352   0108D6  0E00               	movlw	0
  1353   0108D8  6E85               	movwf	133,c	;volatile
  1354                           
  1355                           ;mcc_generated_files/system/src/pins.c: 47:     LATE = 0x0;
  1356   0108DA  0E00               	movlw	0
  1357   0108DC  6E86               	movwf	134,c	;volatile
  1358                           
  1359                           ;mcc_generated_files/system/src/pins.c: 52:     TRISA = 0xCF;
  1360   0108DE  0ECF               	movlw	207
  1361   0108E0  6E87               	movwf	135,c	;volatile
  1362   0108E2                     
  1363                           ;mcc_generated_files/system/src/pins.c: 53:     TRISB = 0xFF;
  1364   0108E2  6888               	setf	136,c	;volatile
  1365                           
  1366                           ;mcc_generated_files/system/src/pins.c: 54:     TRISC = 0xBF;
  1367   0108E4  0EBF               	movlw	191
  1368   0108E6  6E89               	movwf	137,c	;volatile
  1369   0108E8                     
  1370                           ;mcc_generated_files/system/src/pins.c: 55:     TRISD = 0xFF;
  1371   0108E8  688A               	setf	138,c	;volatile
  1372                           
  1373                           ;mcc_generated_files/system/src/pins.c: 56:     TRISE = 0x7;
  1374   0108EA  0E07               	movlw	7
  1375   0108EC  6E8B               	movwf	139,c	;volatile
  1376                           
  1377                           ;mcc_generated_files/system/src/pins.c: 61:     ANSELA = 0xCF;
  1378   0108EE  0ECF               	movlw	207
  1379   0108F0  010F               	movlb	15	; () banked
  1380   0108F2  6F0C               	movwf	12,b	;volatile
  1381   0108F4                     
  1382                           ; BSR set to: 15
  1383                           ;mcc_generated_files/system/src/pins.c: 62:     ANSELB = 0xFF;
  1384   0108F4  6914               	setf	20,b	;volatile
  1385                           
  1386                           ;mcc_generated_files/system/src/pins.c: 63:     ANSELC = 0x1F;
  1387   0108F6  0E1F               	movlw	31
  1388   0108F8  6F1C               	movwf	28,b	;volatile
  1389   0108FA                     
  1390                           ; BSR set to: 15
  1391                           ;mcc_generated_files/system/src/pins.c: 64:     ANSELD = 0xFF;
  1392   0108FA  6921               	setf	33,b	;volatile
  1393                           
  1394                           ;mcc_generated_files/system/src/pins.c: 65:     ANSELE = 0x7;
  1395   0108FC  0E07               	movlw	7
  1396   0108FE  6F29               	movwf	41,b	;volatile
  1397                           
  1398                           ;mcc_generated_files/system/src/pins.c: 70:     WPUA = 0x0;
  1399   010900  0E00               	movlw	0
  1400   010902  6F0B               	movwf	11,b	;volatile
  1401                           
  1402                           ;mcc_generated_files/system/src/pins.c: 71:     WPUB = 0x0;
  1403   010904  0E00               	movlw	0
  1404   010906  6F13               	movwf	19,b	;volatile
  1405                           
  1406                           ;mcc_generated_files/system/src/pins.c: 72:     WPUC = 0x0;
  1407   010908  0E00               	movlw	0
  1408   01090A  6F1B               	movwf	27,b	;volatile
  1409                           
  1410                           ;mcc_generated_files/system/src/pins.c: 73:     WPUD = 0x0;
  1411   01090C  0E00               	movlw	0
  1412   01090E  6F20               	movwf	32,b	;volatile
  1413                           
  1414                           ;mcc_generated_files/system/src/pins.c: 74:     WPUE = 0x0;
  1415   010910  0E00               	movlw	0
  1416   010912  6F28               	movwf	40,b	;volatile
  1417                           
  1418                           ;mcc_generated_files/system/src/pins.c: 79:     ODCONA = 0x0;
  1419   010914  0E00               	movlw	0
  1420   010916  6F0A               	movwf	10,b	;volatile
  1421                           
  1422                           ;mcc_generated_files/system/src/pins.c: 80:     ODCONB = 0x0;
  1423   010918  0E00               	movlw	0
  1424   01091A  6F12               	movwf	18,b	;volatile
  1425                           
  1426                           ;mcc_generated_files/system/src/pins.c: 81:     ODCONC = 0x0;
  1427   01091C  0E00               	movlw	0
  1428   01091E  6F1A               	movwf	26,b	;volatile
  1429                           
  1430                           ;mcc_generated_files/system/src/pins.c: 82:     ODCOND = 0x0;
  1431   010920  0E00               	movlw	0
  1432   010922  6F1F               	movwf	31,b	;volatile
  1433                           
  1434                           ;mcc_generated_files/system/src/pins.c: 83:     ODCONE = 0x0;
  1435   010924  0E00               	movlw	0
  1436   010926  6F27               	movwf	39,b	;volatile
  1437   010928                     
  1438                           ; BSR set to: 15
  1439                           ;mcc_generated_files/system/src/pins.c: 88:     SLRCONA = 0xFF;
  1440   010928  6909               	setf	9,b	;volatile
  1441   01092A                     
  1442                           ; BSR set to: 15
  1443                           ;mcc_generated_files/system/src/pins.c: 89:     SLRCONB = 0xFF;
  1444   01092A  6911               	setf	17,b	;volatile
  1445   01092C                     
  1446                           ; BSR set to: 15
  1447                           ;mcc_generated_files/system/src/pins.c: 90:     SLRCONC = 0xFF;
  1448   01092C  6919               	setf	25,b	;volatile
  1449   01092E                     
  1450                           ; BSR set to: 15
  1451                           ;mcc_generated_files/system/src/pins.c: 91:     SLRCOND = 0xFF;
  1452   01092E  691E               	setf	30,b	;volatile
  1453                           
  1454                           ;mcc_generated_files/system/src/pins.c: 92:     SLRCONE = 0x7;
  1455   010930  0E07               	movlw	7
  1456   010932  6F26               	movwf	38,b	;volatile
  1457   010934                     
  1458                           ; BSR set to: 15
  1459                           ;mcc_generated_files/system/src/pins.c: 97:     INLVLA = 0xFF;
  1460   010934  6908               	setf	8,b	;volatile
  1461   010936                     
  1462                           ; BSR set to: 15
  1463                           ;mcc_generated_files/system/src/pins.c: 98:     INLVLB = 0xFF;
  1464   010936  6910               	setf	16,b	;volatile
  1465   010938                     
  1466                           ; BSR set to: 15
  1467                           ;mcc_generated_files/system/src/pins.c: 99:     INLVLC = 0xFF;
  1468   010938  6918               	setf	24,b	;volatile
  1469   01093A                     
  1470                           ; BSR set to: 15
  1471                           ;mcc_generated_files/system/src/pins.c: 100:     INLVLD = 0xFF;
  1472   01093A  691D               	setf	29,b	;volatile
  1473                           
  1474                           ;mcc_generated_files/system/src/pins.c: 101:     INLVLE = 0xF;
  1475   01093C  0E0F               	movlw	15
  1476   01093E  6F25               	movwf	37,b	;volatile
  1477                           
  1478                           ;mcc_generated_files/system/src/pins.c: 109:     RX1PPS = 0x17;
  1479   010940  0E17               	movlw	23
  1480   010942  010E               	movlb	14	; () banked
  1481   010944  6FB0               	movwf	176,b	;volatile
  1482                           
  1483                           ;mcc_generated_files/system/src/pins.c: 110:     T4INPPS = 0x15;
  1484   010946  0E15               	movlw	21
  1485   010948  6FA7               	movwf	167,b	;volatile
  1486                           
  1487                           ;mcc_generated_files/system/src/pins.c: 111:     RC6PPS = 0x09;
  1488   01094A  0E09               	movlw	9
  1489   01094C  6FF8               	movwf	248,b	;volatile
  1490                           
  1491                           ;mcc_generated_files/system/src/pins.c: 116:     IOCAP = 0x0;
  1492   01094E  0E00               	movlw	0
  1493   010950  010F               	movlb	15	; () banked
  1494   010952  6F07               	movwf	7,b	;volatile
  1495                           
  1496                           ;mcc_generated_files/system/src/pins.c: 117:     IOCAN = 0x0;
  1497   010954  0E00               	movlw	0
  1498   010956  6F06               	movwf	6,b	;volatile
  1499                           
  1500                           ;mcc_generated_files/system/src/pins.c: 118:     IOCAF = 0x0;
  1501   010958  0E00               	movlw	0
  1502   01095A  6F05               	movwf	5,b	;volatile
  1503                           
  1504                           ;mcc_generated_files/system/src/pins.c: 119:     IOCBP = 0x0;
  1505   01095C  0E00               	movlw	0
  1506   01095E  6F0F               	movwf	15,b	;volatile
  1507                           
  1508                           ;mcc_generated_files/system/src/pins.c: 120:     IOCBN = 0x0;
  1509   010960  0E00               	movlw	0
  1510   010962  6F0E               	movwf	14,b	;volatile
  1511                           
  1512                           ;mcc_generated_files/system/src/pins.c: 121:     IOCBF = 0x0;
  1513   010964  0E00               	movlw	0
  1514   010966  6F0D               	movwf	13,b	;volatile
  1515                           
  1516                           ;mcc_generated_files/system/src/pins.c: 122:     IOCCP = 0x0;
  1517   010968  0E00               	movlw	0
  1518   01096A  6F17               	movwf	23,b	;volatile
  1519                           
  1520                           ;mcc_generated_files/system/src/pins.c: 123:     IOCCN = 0x0;
  1521   01096C  0E00               	movlw	0
  1522   01096E  6F16               	movwf	22,b	;volatile
  1523                           
  1524                           ;mcc_generated_files/system/src/pins.c: 124:     IOCCF = 0x0;
  1525   010970  0E00               	movlw	0
  1526   010972  6F15               	movwf	21,b	;volatile
  1527                           
  1528                           ;mcc_generated_files/system/src/pins.c: 125:     IOCEP = 0x0;
  1529   010974  0E00               	movlw	0
  1530   010976  6F24               	movwf	36,b	;volatile
  1531                           
  1532                           ;mcc_generated_files/system/src/pins.c: 126:     IOCEN = 0x0;
  1533   010978  0E00               	movlw	0
  1534   01097A  6F23               	movwf	35,b	;volatile
  1535                           
  1536                           ;mcc_generated_files/system/src/pins.c: 127:     IOCEF = 0x0;
  1537   01097C  0E00               	movlw	0
  1538   01097E  6F22               	movwf	34,b	;volatile
  1539   010980                     
  1540                           ; BSR set to: 15
  1541   010980  0012               	return		;funcret
  1542   010982                     __end_of_PIN_MANAGER_Initialize:
  1543                           	callstack 0
  1544                           
  1545 ;; *************** function _INTERRUPT_Initialize *****************
  1546 ;; Defined at:
  1547 ;;		line 42 in file "mcc_generated_files/system/src/interrupt.c"
  1548 ;; Parameters:    Size  Location     Type
  1549 ;;		None
  1550 ;; Auto vars:     Size  Location     Type
  1551 ;;		None
  1552 ;; Return value:  Size  Location     Type
  1553 ;;                  1    wreg      void 
  1554 ;; Registers used:
  1555 ;;		wreg, status,2, status,0, cstack
  1556 ;; Tracked objects:
  1557 ;;		On entry : 0/0
  1558 ;;		On exit  : 0/0
  1559 ;;		Unchanged: 0/0
  1560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1565 ;;Total ram usage:        0 bytes
  1566 ;; Hardware stack levels used: 1
  1567 ;; Hardware stack levels required when called: 4
  1568 ;; This function calls:
  1569 ;;		_INT0_SetInterruptHandler
  1570 ;;		_INT1_SetInterruptHandler
  1571 ;;		_INT2_SetInterruptHandler
  1572 ;; This function is called by:
  1573 ;;		_SYSTEM_Initialize
  1574 ;; This function uses a non-reentrant model
  1575 ;;
  1576                           
  1577                           	psect	text7
  1578   010C08                     __ptext7:
  1579                           	callstack 0
  1580   010C08                     _INTERRUPT_Initialize:
  1581                           	callstack 25
  1582   010C08                     
  1583                           ;mcc_generated_files/system/src/interrupt.c: 45:     INTCONbits.IPEN = 0;
  1584   010C08  9AF2               	bcf	242,5,c	;volatile
  1585                           
  1586                           ;mcc_generated_files/system/src/interrupt.c: 49:     (PIR0bits.INT0IF = 0);
  1587   010C0A  010E               	movlb	14	; () banked
  1588   010C0C  91C5               	bcf	197,0,b	;volatile
  1589                           
  1590                           ;mcc_generated_files/system/src/interrupt.c: 50:     (INTCONbits.INT0EDG = 1);
  1591   010C0E  80F2               	bsf	242,0,c	;volatile
  1592   010C10                     
  1593                           ; BSR set to: 14
  1594                           ;mcc_generated_files/system/src/interrupt.c: 52:     INT0_SetInterruptHandler(INT0_Defau
      +                          ltInterruptHandler);
  1595   010C10  0E00               	movlw	0
  1596   010C12  6E09               	movwf	INT0_SetInterruptHandler@InterruptHandler^0,c
  1597   010C14  0E00               	movlw	0
  1598   010C16  6E0A               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^0,c
  1599   010C18  0E00               	movlw	0
  1600   010C1A  6E0B               	movwf	(INT0_SetInterruptHandler@InterruptHandler+2)^0,c
  1601   010C1C  ECD6  F087         	call	_INT0_SetInterruptHandler	;wreg free
  1602   010C20                     
  1603                           ;mcc_generated_files/system/src/interrupt.c: 57:     (PIR0bits.INT1IF = 0);
  1604   010C20  010E               	movlb	14	; () banked
  1605   010C22  93C5               	bcf	197,1,b	;volatile
  1606   010C24                     
  1607                           ; BSR set to: 14
  1608                           ;mcc_generated_files/system/src/interrupt.c: 58:     (INTCONbits.INT1EDG = 1);
  1609   010C24  82F2               	bsf	242,1,c	;volatile
  1610                           
  1611                           ;mcc_generated_files/system/src/interrupt.c: 60:     INT1_SetInterruptHandler(INT1_Defau
      +                          ltInterruptHandler);
  1612   010C26  0E00               	movlw	0
  1613   010C28  6E09               	movwf	INT1_SetInterruptHandler@InterruptHandler^0,c
  1614   010C2A  0E00               	movlw	0
  1615   010C2C  6E0A               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)^0,c
  1616   010C2E  0E00               	movlw	0
  1617   010C30  6E0B               	movwf	(INT1_SetInterruptHandler@InterruptHandler+2)^0,c
  1618   010C32  ECCF  F087         	call	_INT1_SetInterruptHandler	;wreg free
  1619   010C36                     
  1620                           ;mcc_generated_files/system/src/interrupt.c: 65:     (PIR0bits.INT2IF = 0);
  1621   010C36  010E               	movlb	14	; () banked
  1622   010C38  95C5               	bcf	197,2,b	;volatile
  1623   010C3A                     
  1624                           ; BSR set to: 14
  1625                           ;mcc_generated_files/system/src/interrupt.c: 66:     (INTCONbits.INT2EDG = 1);
  1626   010C3A  84F2               	bsf	242,2,c	;volatile
  1627                           
  1628                           ;mcc_generated_files/system/src/interrupt.c: 68:     INT2_SetInterruptHandler(INT2_Defau
      +                          ltInterruptHandler);
  1629   010C3C  0E00               	movlw	0
  1630   010C3E  6E09               	movwf	INT2_SetInterruptHandler@InterruptHandler^0,c
  1631   010C40  0E00               	movlw	0
  1632   010C42  6E0A               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)^0,c
  1633   010C44  0E00               	movlw	0
  1634   010C46  6E0B               	movwf	(INT2_SetInterruptHandler@InterruptHandler+2)^0,c
  1635   010C48  ECC8  F087         	call	_INT2_SetInterruptHandler	;wreg free
  1636   010C4C  0012               	return		;funcret
  1637   010C4E                     __end_of_INTERRUPT_Initialize:
  1638                           	callstack 0
  1639                           
  1640 ;; *************** function _INT2_SetInterruptHandler *****************
  1641 ;; Defined at:
  1642 ;;		line 186 in file "mcc_generated_files/system/src/interrupt.c"
  1643 ;; Parameters:    Size  Location     Type
  1644 ;;  InterruptHan    3    8[COMRAM] PTR FTN()void 
  1645 ;;		 -> INT2_DefaultInterruptHandler(1), 
  1646 ;; Auto vars:     Size  Location     Type
  1647 ;;		None
  1648 ;; Return value:  Size  Location     Type
  1649 ;;                  1    wreg      void 
  1650 ;; Registers used:
  1651 ;;		wreg, status,2, status,0
  1652 ;; Tracked objects:
  1653 ;;		On entry : 0/0
  1654 ;;		On exit  : 0/0
  1655 ;;		Unchanged: 0/0
  1656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1657 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1660 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1661 ;;Total ram usage:        3 bytes
  1662 ;; Hardware stack levels used: 1
  1663 ;; Hardware stack levels required when called: 3
  1664 ;; This function calls:
  1665 ;;		Nothing
  1666 ;; This function is called by:
  1667 ;;		_INTERRUPT_Initialize
  1668 ;; This function uses a non-reentrant model
  1669 ;;
  1670                           
  1671                           	psect	text8
  1672   010F90                     __ptext8:
  1673                           	callstack 0
  1674   010F90                     _INT2_SetInterruptHandler:
  1675                           	callstack 25
  1676   010F90                     
  1677                           ;mcc_generated_files/system/src/interrupt.c: 187:     INT2_InterruptHandler = InterruptH
      +                          andler;
  1678   010F90  C009  F039         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  1679   010F94  C00A  F03A         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  1680   010F98  C00B  F03B         	movff	INT2_SetInterruptHandler@InterruptHandler+2,_INT2_InterruptHandler+2
  1681   010F9C  0012               	return		;funcret
  1682   010F9E                     __end_of_INT2_SetInterruptHandler:
  1683                           	callstack 0
  1684                           
  1685 ;; *************** function _INT1_SetInterruptHandler *****************
  1686 ;; Defined at:
  1687 ;;		line 160 in file "mcc_generated_files/system/src/interrupt.c"
  1688 ;; Parameters:    Size  Location     Type
  1689 ;;  InterruptHan    3    8[COMRAM] PTR FTN()void 
  1690 ;;		 -> INT1_DefaultInterruptHandler(1), 
  1691 ;; Auto vars:     Size  Location     Type
  1692 ;;		None
  1693 ;; Return value:  Size  Location     Type
  1694 ;;                  1    wreg      void 
  1695 ;; Registers used:
  1696 ;;		wreg, status,2, status,0
  1697 ;; Tracked objects:
  1698 ;;		On entry : 0/0
  1699 ;;		On exit  : 0/0
  1700 ;;		Unchanged: 0/0
  1701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1702 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1705 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1706 ;;Total ram usage:        3 bytes
  1707 ;; Hardware stack levels used: 1
  1708 ;; Hardware stack levels required when called: 3
  1709 ;; This function calls:
  1710 ;;		Nothing
  1711 ;; This function is called by:
  1712 ;;		_INTERRUPT_Initialize
  1713 ;; This function uses a non-reentrant model
  1714 ;;
  1715                           
  1716                           	psect	text9
  1717   010F9E                     __ptext9:
  1718                           	callstack 0
  1719   010F9E                     _INT1_SetInterruptHandler:
  1720                           	callstack 25
  1721   010F9E                     
  1722                           ;mcc_generated_files/system/src/interrupt.c: 161:     INT1_InterruptHandler = InterruptH
      +                          andler;
  1723   010F9E  C009  F03C         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  1724   010FA2  C00A  F03D         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  1725   010FA6  C00B  F03E         	movff	INT1_SetInterruptHandler@InterruptHandler+2,_INT1_InterruptHandler+2
  1726   010FAA  0012               	return		;funcret
  1727   010FAC                     __end_of_INT1_SetInterruptHandler:
  1728                           	callstack 0
  1729                           
  1730 ;; *************** function _INT0_SetInterruptHandler *****************
  1731 ;; Defined at:
  1732 ;;		line 134 in file "mcc_generated_files/system/src/interrupt.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;  InterruptHan    3    8[COMRAM] PTR FTN()void 
  1735 ;;		 -> INT0_DefaultInterruptHandler(1), 
  1736 ;; Auto vars:     Size  Location     Type
  1737 ;;		None
  1738 ;; Return value:  Size  Location     Type
  1739 ;;                  1    wreg      void 
  1740 ;; Registers used:
  1741 ;;		wreg, status,2, status,0
  1742 ;; Tracked objects:
  1743 ;;		On entry : 0/0
  1744 ;;		On exit  : 0/0
  1745 ;;		Unchanged: 0/0
  1746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1747 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1750 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1751 ;;Total ram usage:        3 bytes
  1752 ;; Hardware stack levels used: 1
  1753 ;; Hardware stack levels required when called: 3
  1754 ;; This function calls:
  1755 ;;		Nothing
  1756 ;; This function is called by:
  1757 ;;		_INTERRUPT_Initialize
  1758 ;; This function uses a non-reentrant model
  1759 ;;
  1760                           
  1761                           	psect	text10
  1762   010FAC                     __ptext10:
  1763                           	callstack 0
  1764   010FAC                     _INT0_SetInterruptHandler:
  1765                           	callstack 25
  1766   010FAC                     
  1767                           ;mcc_generated_files/system/src/interrupt.c: 135:     INT0_InterruptHandler = InterruptH
      +                          andler;
  1768   010FAC  C009  F03F         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  1769   010FB0  C00A  F040         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  1770   010FB4  C00B  F041         	movff	INT0_SetInterruptHandler@InterruptHandler+2,_INT0_InterruptHandler+2
  1771   010FB8  0012               	return		;funcret
  1772   010FBA                     __end_of_INT0_SetInterruptHandler:
  1773                           	callstack 0
  1774                           
  1775 ;; *************** function _EUSART1_Initialize *****************
  1776 ;; Defined at:
  1777 ;;		line 116 in file "mcc_generated_files/uart/src/eusart1.c"
  1778 ;; Parameters:    Size  Location     Type
  1779 ;;		None
  1780 ;; Auto vars:     Size  Location     Type
  1781 ;;		None
  1782 ;; Return value:  Size  Location     Type
  1783 ;;                  1    wreg      void 
  1784 ;; Registers used:
  1785 ;;		wreg, status,2, status,0, cstack
  1786 ;; Tracked objects:
  1787 ;;		On entry : 0/0
  1788 ;;		On exit  : 0/0
  1789 ;;		Unchanged: 0/0
  1790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1795 ;;Total ram usage:        0 bytes
  1796 ;; Hardware stack levels used: 1
  1797 ;; Hardware stack levels required when called: 4
  1798 ;; This function calls:
  1799 ;;		_EUSART1_FramingErrorCallbackRegister
  1800 ;;		_EUSART1_OverrunErrorCallbackRegister
  1801 ;;		_EUSART1_RxCompleteCallbackRegister
  1802 ;;		_EUSART1_TxCompleteCallbackRegister
  1803 ;; This function is called by:
  1804 ;;		_SYSTEM_Initialize
  1805 ;; This function uses a non-reentrant model
  1806 ;;
  1807                           
  1808                           	psect	text11
  1809   010A32                     __ptext11:
  1810                           	callstack 0
  1811   010A32                     _EUSART1_Initialize:
  1812                           	callstack 25
  1813   010A32                     
  1814                           ;mcc_generated_files/uart/src/eusart1.c: 118:     PIE3bits.RC1IE = 0;
  1815   010A32  010E               	movlb	14	; () banked
  1816   010A34  9BC0               	bcf	192,5,b	;volatile
  1817   010A36                     
  1818                           ; BSR set to: 14
  1819                           ;mcc_generated_files/uart/src/eusart1.c: 119:     EUSART1_RxCompleteCallbackRegister(EUS
      +                          ART1_ReceiveISR);
  1820   010A36  0E60               	movlw	low _EUSART1_ReceiveISR
  1821   010A38  6E09               	movwf	EUSART1_RxCompleteCallbackRegister@callbackHandler^0,c
  1822   010A3A  0E06               	movlw	high _EUSART1_ReceiveISR
  1823   010A3C  6E0A               	movwf	(EUSART1_RxCompleteCallbackRegister@callbackHandler+1)^0,c
  1824   010A3E  0E01               	movlw	low (_EUSART1_ReceiveISR shr (0+16))
  1825   010A40  6E0B               	movwf	(EUSART1_RxCompleteCallbackRegister@callbackHandler+2)^0,c
  1826   010A42  EC0C  F087         	call	_EUSART1_RxCompleteCallbackRegister	;wreg free
  1827   010A46                     
  1828                           ;mcc_generated_files/uart/src/eusart1.c: 121:     PIE3bits.TX1IE = 0;
  1829   010A46  010E               	movlb	14	; () banked
  1830   010A48  99C0               	bcf	192,4,b	;volatile
  1831                           
  1832                           ;mcc_generated_files/uart/src/eusart1.c: 122:     EUSART1_TxCompleteCallbackRegister(EUS
      +                          ART1_TransmitISR);
  1833   010A4A  0EEC               	movlw	low _EUSART1_TransmitISR
  1834   010A4C  6E09               	movwf	EUSART1_TxCompleteCallbackRegister@callbackHandler^0,c
  1835   010A4E  0E0C               	movlw	high _EUSART1_TransmitISR
  1836   010A50  6E0A               	movwf	(EUSART1_TxCompleteCallbackRegister@callbackHandler+1)^0,c
  1837   010A52  0E01               	movlw	low (_EUSART1_TransmitISR shr (0+16))
  1838   010A54  6E0B               	movwf	(EUSART1_TxCompleteCallbackRegister@callbackHandler+2)^0,c
  1839   010A56  ECFB  F086         	call	_EUSART1_TxCompleteCallbackRegister	;wreg free
  1840   010A5A                     
  1841                           ;mcc_generated_files/uart/src/eusart1.c: 127:     BAUD1CON = 0x48;
  1842   010A5A  0E48               	movlw	72
  1843   010A5C  6E9E               	movwf	158,c	;volatile
  1844   010A5E                     
  1845                           ;mcc_generated_files/uart/src/eusart1.c: 129:     RC1STA = 0x90;
  1846   010A5E  0E90               	movlw	144
  1847   010A60  6E9C               	movwf	156,c	;volatile
  1848   010A62                     
  1849                           ;mcc_generated_files/uart/src/eusart1.c: 131:     TX1STA = 0x26;
  1850   010A62  0E26               	movlw	38
  1851   010A64  6E9D               	movwf	157,c	;volatile
  1852   010A66                     
  1853                           ;mcc_generated_files/uart/src/eusart1.c: 133:     SP1BRGL = 0x8A;
  1854   010A66  0E8A               	movlw	138
  1855   010A68  6E9A               	movwf	154,c	;volatile
  1856   010A6A                     
  1857                           ;mcc_generated_files/uart/src/eusart1.c: 135:     SP1BRGH = 0x0;
  1858   010A6A  0E00               	movlw	0
  1859   010A6C  6E9B               	movwf	155,c	;volatile
  1860   010A6E                     
  1861                           ;mcc_generated_files/uart/src/eusart1.c: 137:     EUSART1_FramingErrorCallbackRegister(E
      +                          USART1_DefaultFramingErrorCallback);
  1862   010A6E  0EFE               	movlw	low _EUSART1_DefaultFramingErrorCallback
  1863   010A70  6E09               	movwf	EUSART1_FramingErrorCallbackRegister@callbackHandler^0,c
  1864   010A72  0E0F               	movlw	high _EUSART1_DefaultFramingErrorCallback
  1865   010A74  6E0A               	movwf	(EUSART1_FramingErrorCallbackRegister@callbackHandler+1)^0,c
  1866   010A76  0E01               	movlw	low (_EUSART1_DefaultFramingErrorCallback shr (0+16))
  1867   010A78  6E0B               	movwf	(EUSART1_FramingErrorCallbackRegister@callbackHandler+2)^0,c
  1868   010A7A  EC2E  F087         	call	_EUSART1_FramingErrorCallbackRegister	;wreg free
  1869   010A7E                     
  1870                           ;mcc_generated_files/uart/src/eusart1.c: 138:     EUSART1_OverrunErrorCallbackRegister(E
      +                          USART1_DefaultOverrunErrorCallback);
  1871   010A7E  0EDC               	movlw	low _EUSART1_DefaultOverrunErrorCallback
  1872   010A80  6E09               	movwf	EUSART1_OverrunErrorCallbackRegister@callbackHandler^0,c
  1873   010A82  0E0F               	movlw	high _EUSART1_DefaultOverrunErrorCallback
  1874   010A84  6E0A               	movwf	(EUSART1_OverrunErrorCallbackRegister@callbackHandler+1)^0,c
  1875   010A86  0E01               	movlw	low (_EUSART1_DefaultOverrunErrorCallback shr (0+16))
  1876   010A88  6E0B               	movwf	(EUSART1_OverrunErrorCallbackRegister@callbackHandler+2)^0,c
  1877   010A8A  EC1D  F087         	call	_EUSART1_OverrunErrorCallbackRegister	;wreg free
  1878   010A8E                     
  1879                           ;mcc_generated_files/uart/src/eusart1.c: 139:     eusart1RxLastError.status = 0;
  1880   010A8E  0E00               	movlw	0
  1881   010A90  6E49               	movwf	(_eusart1RxLastError+1)^0,c	;volatile
  1882   010A92  0E00               	movlw	0
  1883   010A94  6E48               	movwf	_eusart1RxLastError^0,c	;volatile
  1884   010A96                     
  1885                           ;mcc_generated_files/uart/src/eusart1.c: 141:     eusart1TxHead = 0;
  1886   010A96  0E00               	movlw	0
  1887   010A98  6E56               	movwf	_eusart1TxHead^0,c	;volatile
  1888   010A9A                     
  1889                           ;mcc_generated_files/uart/src/eusart1.c: 142:     eusart1TxTail = 0;
  1890   010A9A  0E00               	movlw	0
  1891   010A9C  6E55               	movwf	_eusart1TxTail^0,c	;volatile
  1892   010A9E                     
  1893                           ;mcc_generated_files/uart/src/eusart1.c: 143:     eusart1TxBufferRemaining = sizeof(eusa
      +                          rt1TxBuffer);
  1894   010A9E  0E08               	movlw	8
  1895   010AA0  6E54               	movwf	_eusart1TxBufferRemaining^0,c	;volatile
  1896   010AA2                     
  1897                           ;mcc_generated_files/uart/src/eusart1.c: 145:     eusart1RxHead = 0;
  1898   010AA2  0E00               	movlw	0
  1899   010AA4  6E53               	movwf	_eusart1RxHead^0,c	;volatile
  1900   010AA6                     
  1901                           ;mcc_generated_files/uart/src/eusart1.c: 146:     eusart1RxTail = 0;
  1902   010AA6  0E00               	movlw	0
  1903   010AA8  6E52               	movwf	_eusart1RxTail^0,c	;volatile
  1904   010AAA                     
  1905                           ;mcc_generated_files/uart/src/eusart1.c: 147:     eusart1RxCount = 0;
  1906   010AAA  0E00               	movlw	0
  1907   010AAC  6E51               	movwf	_eusart1RxCount^0,c	;volatile
  1908   010AAE                     
  1909                           ;mcc_generated_files/uart/src/eusart1.c: 149:     PIE3bits.RC1IE = 1;
  1910   010AAE  010E               	movlb	14	; () banked
  1911   010AB0  8BC0               	bsf	192,5,b	;volatile
  1912   010AB2                     
  1913                           ; BSR set to: 14
  1914   010AB2  0012               	return		;funcret
  1915   010AB4                     __end_of_EUSART1_Initialize:
  1916                           	callstack 0
  1917                           
  1918 ;; *************** function _EUSART1_TxCompleteCallbackRegister *****************
  1919 ;; Defined at:
  1920 ;;		line 426 in file "mcc_generated_files/uart/src/eusart1.c"
  1921 ;; Parameters:    Size  Location     Type
  1922 ;;  callbackHand    3    8[COMRAM] PTR FTN()void 
  1923 ;;		 -> EUSART1_TransmitISR(1), 
  1924 ;; Auto vars:     Size  Location     Type
  1925 ;;		None
  1926 ;; Return value:  Size  Location     Type
  1927 ;;                  1    wreg      void 
  1928 ;; Registers used:
  1929 ;;		wreg, status,2, status,0
  1930 ;; Tracked objects:
  1931 ;;		On entry : 0/0
  1932 ;;		On exit  : 0/0
  1933 ;;		Unchanged: 0/0
  1934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1935 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1938 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1939 ;;Total ram usage:        3 bytes
  1940 ;; Hardware stack levels used: 1
  1941 ;; Hardware stack levels required when called: 3
  1942 ;; This function calls:
  1943 ;;		Nothing
  1944 ;; This function is called by:
  1945 ;;		_EUSART1_Initialize
  1946 ;; This function uses a non-reentrant model
  1947 ;;
  1948                           
  1949                           	psect	text12
  1950   010DF6                     __ptext12:
  1951                           	callstack 0
  1952   010DF6                     _EUSART1_TxCompleteCallbackRegister:
  1953                           	callstack 25
  1954   010DF6                     
  1955                           ;mcc_generated_files/uart/src/eusart1.c: 426: void EUSART1_TxCompleteCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart1.c: 427: {;mcc_generat
      +                          ed_files/uart/src/eusart1.c: 428:     if(((void*)0) != callbackHandler)
  1956   010DF6  5009               	movf	EUSART1_TxCompleteCallbackRegister@callbackHandler^0,w,c
  1957   010DF8  100A               	iorwf	(EUSART1_TxCompleteCallbackRegister@callbackHandler+1)^0,w,c
  1958   010DFA  100B               	iorwf	(EUSART1_TxCompleteCallbackRegister@callbackHandler+2)^0,w,c
  1959   010DFC  B4D8               	btfsc	status,2,c
  1960   010DFE  EF03  F087         	goto	u1361
  1961   010E02  EF05  F087         	goto	u1360
  1962   010E06                     u1361:
  1963   010E06  EF0B  F087         	goto	l782
  1964   010E0A                     u1360:
  1965   010E0A                     
  1966                           ;mcc_generated_files/uart/src/eusart1.c: 429:     {;mcc_generated_files/uart/src/eusart1
      +                          .c: 430:        EUSART1_TxInterruptHandler = callbackHandler;
  1967   010E0A  C009  F045         	movff	EUSART1_TxCompleteCallbackRegister@callbackHandler,_EUSART1_TxInterruptHandler
  1968   010E0E  C00A  F046         	movff	EUSART1_TxCompleteCallbackRegister@callbackHandler+1,_EUSART1_TxInterruptHandler+
      +                          1
  1969   010E12  C00B  F047         	movff	EUSART1_TxCompleteCallbackRegister@callbackHandler+2,_EUSART1_TxInterruptHandler+
      +                          2
  1970   010E16                     l782:
  1971   010E16  0012               	return		;funcret
  1972   010E18                     __end_of_EUSART1_TxCompleteCallbackRegister:
  1973                           	callstack 0
  1974                           
  1975 ;; *************** function _EUSART1_RxCompleteCallbackRegister *****************
  1976 ;; Defined at:
  1977 ;;		line 418 in file "mcc_generated_files/uart/src/eusart1.c"
  1978 ;; Parameters:    Size  Location     Type
  1979 ;;  callbackHand    3    8[COMRAM] PTR FTN()void 
  1980 ;;		 -> EUSART1_ReceiveISR(1), 
  1981 ;; Auto vars:     Size  Location     Type
  1982 ;;		None
  1983 ;; Return value:  Size  Location     Type
  1984 ;;                  1    wreg      void 
  1985 ;; Registers used:
  1986 ;;		wreg, status,2, status,0
  1987 ;; Tracked objects:
  1988 ;;		On entry : 0/0
  1989 ;;		On exit  : 0/0
  1990 ;;		Unchanged: 0/0
  1991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1992 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1995 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1996 ;;Total ram usage:        3 bytes
  1997 ;; Hardware stack levels used: 1
  1998 ;; Hardware stack levels required when called: 3
  1999 ;; This function calls:
  2000 ;;		Nothing
  2001 ;; This function is called by:
  2002 ;;		_EUSART1_Initialize
  2003 ;; This function uses a non-reentrant model
  2004 ;;
  2005                           
  2006                           	psect	text13
  2007   010E18                     __ptext13:
  2008                           	callstack 0
  2009   010E18                     _EUSART1_RxCompleteCallbackRegister:
  2010                           	callstack 25
  2011   010E18                     
  2012                           ;mcc_generated_files/uart/src/eusart1.c: 418: void EUSART1_RxCompleteCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart1.c: 419: {;mcc_generat
      +                          ed_files/uart/src/eusart1.c: 420:     if(((void*)0) != callbackHandler)
  2013   010E18  5009               	movf	EUSART1_RxCompleteCallbackRegister@callbackHandler^0,w,c
  2014   010E1A  100A               	iorwf	(EUSART1_RxCompleteCallbackRegister@callbackHandler+1)^0,w,c
  2015   010E1C  100B               	iorwf	(EUSART1_RxCompleteCallbackRegister@callbackHandler+2)^0,w,c
  2016   010E1E  B4D8               	btfsc	status,2,c
  2017   010E20  EF14  F087         	goto	u1351
  2018   010E24  EF16  F087         	goto	u1350
  2019   010E28                     u1351:
  2020   010E28  EF1C  F087         	goto	l778
  2021   010E2C                     u1350:
  2022   010E2C                     
  2023                           ;mcc_generated_files/uart/src/eusart1.c: 421:     {;mcc_generated_files/uart/src/eusart1
      +                          .c: 422:        EUSART1_RxInterruptHandler = callbackHandler;
  2024   010E2C  C009  F042         	movff	EUSART1_RxCompleteCallbackRegister@callbackHandler,_EUSART1_RxInterruptHandler
  2025   010E30  C00A  F043         	movff	EUSART1_RxCompleteCallbackRegister@callbackHandler+1,_EUSART1_RxInterruptHandler+
      +                          1
  2026   010E34  C00B  F044         	movff	EUSART1_RxCompleteCallbackRegister@callbackHandler+2,_EUSART1_RxInterruptHandler+
      +                          2
  2027   010E38                     l778:
  2028   010E38  0012               	return		;funcret
  2029   010E3A                     __end_of_EUSART1_RxCompleteCallbackRegister:
  2030                           	callstack 0
  2031                           
  2032 ;; *************** function _EUSART1_OverrunErrorCallbackRegister *****************
  2033 ;; Defined at:
  2034 ;;		line 410 in file "mcc_generated_files/uart/src/eusart1.c"
  2035 ;; Parameters:    Size  Location     Type
  2036 ;;  callbackHand    3    8[COMRAM] PTR FTN()void 
  2037 ;;		 -> EUSART1_DefaultOverrunErrorCallback(1), 
  2038 ;; Auto vars:     Size  Location     Type
  2039 ;;		None
  2040 ;; Return value:  Size  Location     Type
  2041 ;;                  1    wreg      void 
  2042 ;; Registers used:
  2043 ;;		wreg, status,2, status,0
  2044 ;; Tracked objects:
  2045 ;;		On entry : 0/0
  2046 ;;		On exit  : 0/0
  2047 ;;		Unchanged: 0/0
  2048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2049 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2052 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2053 ;;Total ram usage:        3 bytes
  2054 ;; Hardware stack levels used: 1
  2055 ;; Hardware stack levels required when called: 3
  2056 ;; This function calls:
  2057 ;;		Nothing
  2058 ;; This function is called by:
  2059 ;;		_EUSART1_Initialize
  2060 ;; This function uses a non-reentrant model
  2061 ;;
  2062                           
  2063                           	psect	text14
  2064   010E3A                     __ptext14:
  2065                           	callstack 0
  2066   010E3A                     _EUSART1_OverrunErrorCallbackRegister:
  2067                           	callstack 25
  2068   010E3A                     
  2069                           ;mcc_generated_files/uart/src/eusart1.c: 410: void EUSART1_OverrunErrorCallbackRegister(
      +                          void (* callbackHandler)(void));mcc_generated_files/uart/src/eusart1.c: 411: {;mcc_gener
      +                          ated_files/uart/src/eusart1.c: 412:     if(((void*)0) != callbackHandler)
  2070   010E3A  5009               	movf	EUSART1_OverrunErrorCallbackRegister@callbackHandler^0,w,c
  2071   010E3C  100A               	iorwf	(EUSART1_OverrunErrorCallbackRegister@callbackHandler+1)^0,w,c
  2072   010E3E  100B               	iorwf	(EUSART1_OverrunErrorCallbackRegister@callbackHandler+2)^0,w,c
  2073   010E40  B4D8               	btfsc	status,2,c
  2074   010E42  EF25  F087         	goto	u1381
  2075   010E46  EF27  F087         	goto	u1380
  2076   010E4A                     u1381:
  2077   010E4A  EF2D  F087         	goto	l774
  2078   010E4E                     u1380:
  2079   010E4E                     
  2080                           ;mcc_generated_files/uart/src/eusart1.c: 413:     {;mcc_generated_files/uart/src/eusart1
      +                          .c: 414:         EUSART1_OverrunErrorHandler = callbackHandler;
  2081   010E4E  C009  F02D         	movff	EUSART1_OverrunErrorCallbackRegister@callbackHandler,_EUSART1_OverrunErrorHandler
  2082   010E52  C00A  F02E         	movff	EUSART1_OverrunErrorCallbackRegister@callbackHandler+1,_EUSART1_OverrunErrorHandl
      +                          er+1
  2083   010E56  C00B  F02F         	movff	EUSART1_OverrunErrorCallbackRegister@callbackHandler+2,_EUSART1_OverrunErrorHandl
      +                          er+2
  2084   010E5A                     l774:
  2085   010E5A  0012               	return		;funcret
  2086   010E5C                     __end_of_EUSART1_OverrunErrorCallbackRegister:
  2087                           	callstack 0
  2088                           
  2089 ;; *************** function _EUSART1_FramingErrorCallbackRegister *****************
  2090 ;; Defined at:
  2091 ;;		line 402 in file "mcc_generated_files/uart/src/eusart1.c"
  2092 ;; Parameters:    Size  Location     Type
  2093 ;;  callbackHand    3    8[COMRAM] PTR FTN()void 
  2094 ;;		 -> EUSART1_DefaultFramingErrorCallback(1), 
  2095 ;; Auto vars:     Size  Location     Type
  2096 ;;		None
  2097 ;; Return value:  Size  Location     Type
  2098 ;;                  1    wreg      void 
  2099 ;; Registers used:
  2100 ;;		wreg, status,2, status,0
  2101 ;; Tracked objects:
  2102 ;;		On entry : 0/0
  2103 ;;		On exit  : 0/0
  2104 ;;		Unchanged: 0/0
  2105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2106 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2109 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2110 ;;Total ram usage:        3 bytes
  2111 ;; Hardware stack levels used: 1
  2112 ;; Hardware stack levels required when called: 3
  2113 ;; This function calls:
  2114 ;;		Nothing
  2115 ;; This function is called by:
  2116 ;;		_EUSART1_Initialize
  2117 ;; This function uses a non-reentrant model
  2118 ;;
  2119                           
  2120                           	psect	text15
  2121   010E5C                     __ptext15:
  2122                           	callstack 0
  2123   010E5C                     _EUSART1_FramingErrorCallbackRegister:
  2124                           	callstack 25
  2125   010E5C                     
  2126                           ;mcc_generated_files/uart/src/eusart1.c: 402: void EUSART1_FramingErrorCallbackRegister(
      +                          void (* callbackHandler)(void));mcc_generated_files/uart/src/eusart1.c: 403: {;mcc_gener
      +                          ated_files/uart/src/eusart1.c: 404:     if(((void*)0) != callbackHandler)
  2127   010E5C  5009               	movf	EUSART1_FramingErrorCallbackRegister@callbackHandler^0,w,c
  2128   010E5E  100A               	iorwf	(EUSART1_FramingErrorCallbackRegister@callbackHandler+1)^0,w,c
  2129   010E60  100B               	iorwf	(EUSART1_FramingErrorCallbackRegister@callbackHandler+2)^0,w,c
  2130   010E62  B4D8               	btfsc	status,2,c
  2131   010E64  EF36  F087         	goto	u1371
  2132   010E68  EF38  F087         	goto	u1370
  2133   010E6C                     u1371:
  2134   010E6C  EF3E  F087         	goto	l770
  2135   010E70                     u1370:
  2136   010E70                     
  2137                           ;mcc_generated_files/uart/src/eusart1.c: 405:     {;mcc_generated_files/uart/src/eusart1
      +                          .c: 406:         EUSART1_FramingErrorHandler = callbackHandler;
  2138   010E70  C009  F030         	movff	EUSART1_FramingErrorCallbackRegister@callbackHandler,_EUSART1_FramingErrorHandler
  2139   010E74  C00A  F031         	movff	EUSART1_FramingErrorCallbackRegister@callbackHandler+1,_EUSART1_FramingErrorHandl
      +                          er+1
  2140   010E78  C00B  F032         	movff	EUSART1_FramingErrorCallbackRegister@callbackHandler+2,_EUSART1_FramingErrorHandl
      +                          er+2
  2141   010E7C                     l770:
  2142   010E7C  0012               	return		;funcret
  2143   010E7E                     __end_of_EUSART1_FramingErrorCallbackRegister:
  2144                           	callstack 0
  2145                           
  2146 ;; *************** function _CLOCK_Initialize *****************
  2147 ;; Defined at:
  2148 ;;		line 37 in file "mcc_generated_files/system/src/clock.c"
  2149 ;; Parameters:    Size  Location     Type
  2150 ;;		None
  2151 ;; Auto vars:     Size  Location     Type
  2152 ;;		None
  2153 ;; Return value:  Size  Location     Type
  2154 ;;                  1    wreg      void 
  2155 ;; Registers used:
  2156 ;;		wreg, status,2
  2157 ;; Tracked objects:
  2158 ;;		On entry : 0/0
  2159 ;;		On exit  : 0/0
  2160 ;;		Unchanged: 0/0
  2161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2166 ;;Total ram usage:        0 bytes
  2167 ;; Hardware stack levels used: 1
  2168 ;; Hardware stack levels required when called: 3
  2169 ;; This function calls:
  2170 ;;		Nothing
  2171 ;; This function is called by:
  2172 ;;		_SYSTEM_Initialize
  2173 ;; This function uses a non-reentrant model
  2174 ;;
  2175                           
  2176                           	psect	text16
  2177   010EF4                     __ptext16:
  2178                           	callstack 0
  2179   010EF4                     _CLOCK_Initialize:
  2180                           	callstack 26
  2181   010EF4                     
  2182                           ;mcc_generated_files/system/src/clock.c: 41:     OSCCON1 = 0x60;
  2183   010EF4  0E60               	movlw	96
  2184   010EF6  010E               	movlb	14	; () banked
  2185   010EF8  6FD3               	movwf	211,b	;volatile
  2186                           
  2187                           ;mcc_generated_files/system/src/clock.c: 43:     OSCCON3 = 0x0;
  2188   010EFA  0E00               	movlw	0
  2189   010EFC  6FD5               	movwf	213,b	;volatile
  2190                           
  2191                           ;mcc_generated_files/system/src/clock.c: 45:     OSCEN = 0x0;
  2192   010EFE  0E00               	movlw	0
  2193   010F00  6FD7               	movwf	215,b	;volatile
  2194                           
  2195                           ;mcc_generated_files/system/src/clock.c: 47:     OSCFRQ = 0x8;
  2196   010F02  0E08               	movlw	8
  2197   010F04  6FD9               	movwf	217,b	;volatile
  2198                           
  2199                           ;mcc_generated_files/system/src/clock.c: 49:     OSCTUNE = 0x0;
  2200   010F06  0E00               	movlw	0
  2201   010F08  6FD8               	movwf	216,b	;volatile
  2202   010F0A                     
  2203                           ; BSR set to: 14
  2204   010F0A  0012               	return		;funcret
  2205   010F0C                     __end_of_CLOCK_Initialize:
  2206                           	callstack 0
  2207                           
  2208 ;; *************** function _ADCC_Initialize *****************
  2209 ;; Defined at:
  2210 ;;		line 47 in file "mcc_generated_files/adc/src/adcc.c"
  2211 ;; Parameters:    Size  Location     Type
  2212 ;;		None
  2213 ;; Auto vars:     Size  Location     Type
  2214 ;;		None
  2215 ;; Return value:  Size  Location     Type
  2216 ;;                  1    wreg      void 
  2217 ;; Registers used:
  2218 ;;		wreg, status,2, status,0, cstack
  2219 ;; Tracked objects:
  2220 ;;		On entry : 0/0
  2221 ;;		On exit  : 0/0
  2222 ;;		Unchanged: 0/0
  2223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2228 ;;Total ram usage:        0 bytes
  2229 ;; Hardware stack levels used: 1
  2230 ;; Hardware stack levels required when called: 4
  2231 ;; This function calls:
  2232 ;;		_ADCC_SetADTIInterruptHandler
  2233 ;; This function is called by:
  2234 ;;		_SYSTEM_Initialize
  2235 ;; This function uses a non-reentrant model
  2236 ;;
  2237                           
  2238                           	psect	text17
  2239   010AB4                     __ptext17:
  2240                           	callstack 0
  2241   010AB4                     _ADCC_Initialize:
  2242                           	callstack 25
  2243   010AB4                     
  2244                           ;mcc_generated_files/adc/src/adcc.c: 51:     ADLTHL = 0x0;
  2245   010AB4  0E00               	movlw	0
  2246   010AB6  6E65               	movwf	101,c	;volatile
  2247                           
  2248                           ;mcc_generated_files/adc/src/adcc.c: 53:     ADLTHH = 0x0;
  2249   010AB8  0E00               	movlw	0
  2250   010ABA  6E66               	movwf	102,c	;volatile
  2251                           
  2252                           ;mcc_generated_files/adc/src/adcc.c: 55:     ADUTHL = 0x0;
  2253   010ABC  0E00               	movlw	0
  2254   010ABE  6E67               	movwf	103,c	;volatile
  2255                           
  2256                           ;mcc_generated_files/adc/src/adcc.c: 57:     ADUTHH = 0x0;
  2257   010AC0  0E00               	movlw	0
  2258   010AC2  6E68               	movwf	104,c	;volatile
  2259                           
  2260                           ;mcc_generated_files/adc/src/adcc.c: 59:     ADSTPTL = 0x0;
  2261   010AC4  0E00               	movlw	0
  2262   010AC6  6E63               	movwf	99,c	;volatile
  2263                           
  2264                           ;mcc_generated_files/adc/src/adcc.c: 61:     ADSTPTH = 0x0;
  2265   010AC8  0E00               	movlw	0
  2266   010ACA  6E64               	movwf	100,c	;volatile
  2267                           
  2268                           ;mcc_generated_files/adc/src/adcc.c: 63:     ADRPT = 0x0;
  2269   010ACC  0E00               	movlw	0
  2270   010ACE  6E61               	movwf	97,c	;volatile
  2271                           
  2272                           ;mcc_generated_files/adc/src/adcc.c: 65:     ADPCH = 0x0;
  2273   010AD0  0E00               	movlw	0
  2274   010AD2  010F               	movlb	15	; () banked
  2275   010AD4  6F5A               	movwf	90,b	;volatile
  2276                           
  2277                           ;mcc_generated_files/adc/src/adcc.c: 67:     ADCAP = 0x0;
  2278   010AD6  0E00               	movlw	0
  2279   010AD8  6F58               	movwf	88,b	;volatile
  2280                           
  2281                           ;mcc_generated_files/adc/src/adcc.c: 69:     ADPRE = 0x0;
  2282   010ADA  0E00               	movlw	0
  2283   010ADC  6F59               	movwf	89,b	;volatile
  2284                           
  2285                           ;mcc_generated_files/adc/src/adcc.c: 71:     ADCON1 = 0x0;
  2286   010ADE  0E00               	movlw	0
  2287   010AE0  6F54               	movwf	84,b	;volatile
  2288                           
  2289                           ;mcc_generated_files/adc/src/adcc.c: 73:     ADCON2 = 0x0;
  2290   010AE2  0E00               	movlw	0
  2291   010AE4  6F55               	movwf	85,b	;volatile
  2292                           
  2293                           ;mcc_generated_files/adc/src/adcc.c: 75:     ADCON3 = 0x0;
  2294   010AE6  0E00               	movlw	0
  2295   010AE8  6F56               	movwf	86,b	;volatile
  2296                           
  2297                           ;mcc_generated_files/adc/src/adcc.c: 77:     ADSTAT = 0x0;
  2298   010AEA  0E00               	movlw	0
  2299   010AEC  6E60               	movwf	96,c	;volatile
  2300                           
  2301                           ;mcc_generated_files/adc/src/adcc.c: 79:     ADREF = 0x0;
  2302   010AEE  0E00               	movlw	0
  2303   010AF0  6F53               	movwf	83,b	;volatile
  2304                           
  2305                           ;mcc_generated_files/adc/src/adcc.c: 81:     ADACT = 0x2;
  2306   010AF2  0E02               	movlw	2
  2307   010AF4  6F51               	movwf	81,b	;volatile
  2308                           
  2309                           ;mcc_generated_files/adc/src/adcc.c: 83:     ADCLK = 0x1F;
  2310   010AF6  0E1F               	movlw	31
  2311   010AF8  6F52               	movwf	82,b	;volatile
  2312                           
  2313                           ;mcc_generated_files/adc/src/adcc.c: 85:     ADCON0 = 0x85;
  2314   010AFA  0E85               	movlw	133
  2315   010AFC  6F5B               	movwf	91,b	;volatile
  2316                           
  2317                           ;mcc_generated_files/adc/src/adcc.c: 87:     ADACQ = 0x0;
  2318   010AFE  0E00               	movlw	0
  2319   010B00  6F57               	movwf	87,b	;volatile
  2320   010B02                     
  2321                           ; BSR set to: 15
  2322                           ;mcc_generated_files/adc/src/adcc.c: 90:     PIR1bits.ADIF = 0;
  2323   010B02  010E               	movlb	14	; () banked
  2324   010B04  91C6               	bcf	198,0,b	;volatile
  2325   010B06                     
  2326                           ; BSR set to: 14
  2327                           ;mcc_generated_files/adc/src/adcc.c: 93:     PIR1bits.ADTIF = 0;
  2328   010B06  93C6               	bcf	198,1,b	;volatile
  2329   010B08                     
  2330                           ; BSR set to: 14
  2331                           ;mcc_generated_files/adc/src/adcc.c: 95:     ADCC_SetADTIInterruptHandler(ADCC_DefaultAD
      +                          TI_ISR);
  2332   010B08  0E00               	movlw	low _ADCC_DefaultADTI_ISR
  2333   010B0A  6E09               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler^0,c
  2334   010B0C  0E10               	movlw	high _ADCC_DefaultADTI_ISR
  2335   010B0E  6E0A               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)^0,c
  2336   010B10  0E01               	movlw	low (_ADCC_DefaultADTI_ISR shr (0+16))
  2337   010B12  6E0B               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+2)^0,c
  2338   010B14  ECDD  F087         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  2339   010B18                     
  2340                           ;mcc_generated_files/adc/src/adcc.c: 97:     PIE1bits.ADTIE = 1;
  2341   010B18  010E               	movlb	14	; () banked
  2342   010B1A  83BE               	bsf	190,1,b	;volatile
  2343   010B1C                     
  2344                           ; BSR set to: 14
  2345   010B1C  0012               	return		;funcret
  2346   010B1E                     __end_of_ADCC_Initialize:
  2347                           	callstack 0
  2348                           
  2349 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
  2350 ;; Defined at:
  2351 ;;		line 296 in file "mcc_generated_files/adc/src/adcc.c"
  2352 ;; Parameters:    Size  Location     Type
  2353 ;;  InterruptHan    3    8[COMRAM] PTR FTN()void 
  2354 ;;		 -> ADCUserInterrupt(1), ADCC_DefaultADTI_ISR(1), 
  2355 ;; Auto vars:     Size  Location     Type
  2356 ;;		None
  2357 ;; Return value:  Size  Location     Type
  2358 ;;                  1    wreg      void 
  2359 ;; Registers used:
  2360 ;;		wreg, status,2, status,0
  2361 ;; Tracked objects:
  2362 ;;		On entry : 0/0
  2363 ;;		On exit  : 0/0
  2364 ;;		Unchanged: 0/0
  2365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2366 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2369 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2370 ;;Total ram usage:        3 bytes
  2371 ;; Hardware stack levels used: 1
  2372 ;; Hardware stack levels required when called: 3
  2373 ;; This function calls:
  2374 ;;		Nothing
  2375 ;; This function is called by:
  2376 ;;		_ADCC_Initialize
  2377 ;;		_main
  2378 ;; This function uses a non-reentrant model
  2379 ;;
  2380                           
  2381                           	psect	text18
  2382   010FBA                     __ptext18:
  2383                           	callstack 0
  2384   010FBA                     _ADCC_SetADTIInterruptHandler:
  2385                           	callstack 25
  2386   010FBA                     
  2387                           ;mcc_generated_files/adc/src/adcc.c: 296: void ADCC_SetADTIInterruptHandler(void (* Inte
      +                          rruptHandler)(void));mcc_generated_files/adc/src/adcc.c: 297: {;mcc_generated_files/adc/
      +                          src/adcc.c: 298:     ADCC_ADTI_InterruptHandler = InterruptHandler;
  2388   010FBA  C009  F0AC         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler,_ADCC_ADTI_InterruptHandler
  2389   010FBE  C00A  F0AD         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+1,_ADCC_ADTI_InterruptHandler+1
  2390   010FC2  C00B  F0AE         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+2,_ADCC_ADTI_InterruptHandler+2
  2391   010FC6  0012               	return		;funcret
  2392   010FC8                     __end_of_ADCC_SetADTIInterruptHandler:
  2393                           	callstack 0
  2394                           
  2395 ;; *************** function _ApplicationTask *****************
  2396 ;; Defined at:
  2397 ;;		line 21 in file "application.c"
  2398 ;; Parameters:    Size  Location     Type
  2399 ;;		None
  2400 ;; Auto vars:     Size  Location     Type
  2401 ;;		None
  2402 ;; Return value:  Size  Location     Type
  2403 ;;                  1    wreg      void 
  2404 ;; Registers used:
  2405 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, cstack
  2406 ;; Tracked objects:
  2407 ;;		On entry : 0/0
  2408 ;;		On exit  : 0/0
  2409 ;;		Unchanged: 0/0
  2410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2413 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2414 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2415 ;;Total ram usage:        2 bytes
  2416 ;; Hardware stack levels used: 1
  2417 ;; Hardware stack levels required when called: 9
  2418 ;; This function calls:
  2419 ;;		_ADCC_HasErrorCrossedLowerThreshold
  2420 ;;		_ADCC_HasErrorCrossedUpperThreshold
  2421 ;;		_ADCC_Initialize_AverageMode
  2422 ;;		_ADCC_Initialize_BasicMode
  2423 ;;		_ADCC_Initialize_BurstAverageMode
  2424 ;;		_ADCC_Initialize_LowPassFilterMode
  2425 ;;		_ADCC_SetChannel
  2426 ;;		_EUSART1_Write
  2427 ;;		_TMR0_Reload
  2428 ;;		_TMR0_Start
  2429 ;;		_TMR0_Stop
  2430 ;;		_TMR4_PeriodCountSet
  2431 ;;		_TMR4_Start
  2432 ;;		_TMR4_Stop
  2433 ;;		_printf
  2434 ;; This function is called by:
  2435 ;;		_main
  2436 ;; This function uses a non-reentrant model
  2437 ;;
  2438                           
  2439                           	psect	text19
  2440   010000                     __ptext19:
  2441                           	callstack 0
  2442   010000                     _ApplicationTask:
  2443                           	callstack 21
  2444   010000                     
  2445                           ;application.c: 24:     switch (count)
  2446   010000  EF1B  F082         	goto	l3236
  2447   010004                     l3112:
  2448                           
  2449                           ;application.c: 27:             if (!basicModeInit)
  2450   010004  504E               	movf	_basicModeInit^0,w,c	;volatile
  2451   010006  A4D8               	btfss	status,2,c
  2452   010008  EF08  F080         	goto	u1881
  2453   01000C  EF0A  F080         	goto	u1880
  2454   010010                     u1881:
  2455   010010  EF5B  F080         	goto	l3128
  2456   010014                     u1880:
  2457   010014                     
  2458                           ;application.c: 28:             {;application.c: 30:                 Timer0.Stop();
  2459   010014  0E39               	movlw	low (_Timer0+6)
  2460   010016  6EF6               	movwf	tblptrl,c
  2461   010018  0EFF               	movlw	high (_Timer0+6)
  2462   01001A  6EF7               	movwf	tblptrh,c
  2463   01001C                     	if	0	;tblptru may be non-zero
  2464   01001C                     	endif
  2465   01001C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2466   01001C  0E00               	movlw	low (__mediumconst shr (0+16))
  2467   01001E  6EF8               	movwf	tblptru,c
  2468   010020                     	endif
  2469   010020  D802               	call	u1898
  2470   010022  EF20  F080         	goto	u1899
  2471   010026                     u1898:
  2472   010026  0005               	push	
  2473   010028  6EFA               	movwf	pclath,c
  2474   01002A  0009               	tblrd		*+
  2475   01002C  50F5               	movf	tablat,w,c
  2476   01002E  6EFD               	movwf	tosl,c
  2477   010030  0009               	tblrd		*+
  2478   010032  50F5               	movf	tablat,w,c
  2479   010034  6EFE               	movwf	tosh,c
  2480   010036  0009               	tblrd		*+
  2481   010038  50F5               	movf	tablat,w,c
  2482   01003A  6EFF               	movwf	tosu,c
  2483   01003C  50FA               	movf	pclath,w,c
  2484   01003E  0012               	return		;indir
  2485   010040                     u1899:
  2486                           
  2487                           ;application.c: 31:                 Timer0.PeriodCountSet(0x13);
  2488   010040  0E00               	movlw	0
  2489   010042  6E0A               	movwf	(TMR0_Reload@periodVal+1)^0,c
  2490   010044  0E13               	movlw	19
  2491   010046  6E09               	movwf	TMR0_Reload@periodVal^0,c
  2492   010048  0E3C               	movlw	low (_Timer0+9)
  2493   01004A  6EF6               	movwf	tblptrl,c
  2494   01004C  0EFF               	movlw	high (_Timer0+9)
  2495   01004E  6EF7               	movwf	tblptrh,c
  2496   010050                     	if	0	;tblptru may be non-zero
  2497   010050                     	endif
  2498   010050                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2499   010050  0E00               	movlw	low (__mediumconst shr (0+16))
  2500   010052  6EF8               	movwf	tblptru,c
  2501   010054                     	endif
  2502   010054  D802               	call	u1908
  2503   010056  EF3A  F080         	goto	u1909
  2504   01005A                     u1908:
  2505   01005A  0005               	push	
  2506   01005C  6EFA               	movwf	pclath,c
  2507   01005E  0009               	tblrd		*+
  2508   010060  50F5               	movf	tablat,w,c
  2509   010062  6EFD               	movwf	tosl,c
  2510   010064  0009               	tblrd		*+
  2511   010066  50F5               	movf	tablat,w,c
  2512   010068  6EFE               	movwf	tosh,c
  2513   01006A  0009               	tblrd		*+
  2514   01006C  50F5               	movf	tablat,w,c
  2515   01006E  6EFF               	movwf	tosu,c
  2516   010070  50FA               	movf	pclath,w,c
  2517   010072  0012               	return		;indir
  2518   010074                     u1909:
  2519   010074  9A82               	bcf	130,5,c	;volatile
  2520   010076  9882               	bcf	130,4,c	;volatile
  2521   010078                     
  2522                           ;application.c: 36:                 ADCC_Initialize_BasicMode();
  2523   010078  EC86  F087         	call	_ADCC_Initialize_BasicMode	;wreg free
  2524   01007C                     
  2525                           ;application.c: 37:                 ADCC_SetChannel(POT_DATA);
  2526   01007C  0E00               	movlw	0
  2527   01007E  ECE4  F087         	call	_ADCC_SetChannel
  2528   010082                     
  2529                           ;application.c: 39:                 Timer0.Start();
  2530   010082  0E36               	movlw	low (_Timer0+3)
  2531   010084  6EF6               	movwf	tblptrl,c
  2532   010086  0EFF               	movlw	high (_Timer0+3)
  2533   010088  6EF7               	movwf	tblptrh,c
  2534   01008A                     	if	0	;tblptru may be non-zero
  2535   01008A                     	endif
  2536   01008A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2537   01008A  0E00               	movlw	low (__mediumconst shr (0+16))
  2538   01008C  6EF8               	movwf	tblptru,c
  2539   01008E                     	endif
  2540   01008E  D802               	call	u1918
  2541   010090  EF57  F080         	goto	u1919
  2542   010094                     u1918:
  2543   010094  0005               	push	
  2544   010096  6EFA               	movwf	pclath,c
  2545   010098  0009               	tblrd		*+
  2546   01009A  50F5               	movf	tablat,w,c
  2547   01009C  6EFD               	movwf	tosl,c
  2548   01009E  0009               	tblrd		*+
  2549   0100A0  50F5               	movf	tablat,w,c
  2550   0100A2  6EFE               	movwf	tosh,c
  2551   0100A4  0009               	tblrd		*+
  2552   0100A6  50F5               	movf	tablat,w,c
  2553   0100A8  6EFF               	movwf	tosu,c
  2554   0100AA  50FA               	movf	pclath,w,c
  2555   0100AC  0012               	return		;indir
  2556   0100AE                     u1919:
  2557   0100AE                     
  2558                           ;application.c: 40:                 basicModeInit = 1;
  2559   0100AE  0E01               	movlw	1
  2560   0100B0  6E4E               	movwf	_basicModeInit^0,c	;volatile
  2561                           
  2562                           ;application.c: 41:             }
  2563   0100B2  EF38  F082         	goto	l934
  2564   0100B6                     l3128:
  2565                           
  2566                           ;application.c: 43:             {;application.c: 45:                 if (adcReadyFlag)
  2567   0100B6  504F               	movf	_adcReadyFlag^0,w,c	;volatile
  2568   0100B8  B4D8               	btfsc	status,2,c
  2569   0100BA  EF61  F080         	goto	u1921
  2570   0100BE  EF63  F080         	goto	u1920
  2571   0100C2                     u1921:
  2572   0100C2  EF38  F082         	goto	l934
  2573   0100C6                     u1920:
  2574   0100C6                     
  2575                           ;application.c: 46:                 {;application.c: 47:                     adcReadyFla
      +                          g = 0;
  2576   0100C6  0E00               	movlw	0
  2577   0100C8  6E4F               	movwf	_adcReadyFlag^0,c	;volatile
  2578   0100CA                     
  2579                           ;application.c: 48:                     printf("Basic Mode - ADRES=%d \r\n", ADRES);
  2580   0100CA  0EE6               	movlw	low STR_1
  2581   0100CC  0100               	movlb	0	; () banked
  2582   0100CE  6FA4               	movwf	printf@fmt& (0+255),b
  2583   0100D0  0EFF               	movlw	high STR_1
  2584   0100D2  6FA5               	movwf	(printf@fmt+1)& (0+255),b
  2585   0100D4  CF5E F0A6          	movff	3934,?_printf+2	;volatile
  2586   0100D8  CF5F F0A7          	movff	3935,?_printf+3	;volatile
  2587   0100DC  EC4E  F087         	call	_printf	;wreg free
  2588   0100E0  EF38  F082         	goto	l934
  2589   0100E4                     l3134:
  2590                           
  2591                           ;application.c: 53:             if (!avgModeInit)
  2592   0100E4  504D               	movf	_avgModeInit^0,w,c	;volatile
  2593   0100E6  A4D8               	btfss	status,2,c
  2594   0100E8  EF78  F080         	goto	u1931
  2595   0100EC  EF7A  F080         	goto	u1930
  2596   0100F0                     u1931:
  2597   0100F0  EFB3  F080         	goto	l3152
  2598   0100F4                     u1930:
  2599   0100F4                     
  2600                           ;application.c: 54:             {;application.c: 56:                 Timer0.Stop();
  2601   0100F4  0E39               	movlw	low (_Timer0+6)
  2602   0100F6  6EF6               	movwf	tblptrl,c
  2603   0100F8  0EFF               	movlw	high (_Timer0+6)
  2604   0100FA  6EF7               	movwf	tblptrh,c
  2605   0100FC                     	if	0	;tblptru may be non-zero
  2606   0100FC                     	endif
  2607   0100FC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2608   0100FC  0E00               	movlw	low (__mediumconst shr (0+16))
  2609   0100FE  6EF8               	movwf	tblptru,c
  2610   010100                     	endif
  2611   010100  D802               	call	u1948
  2612   010102  EF90  F080         	goto	u1949
  2613   010106                     u1948:
  2614   010106  0005               	push	
  2615   010108  6EFA               	movwf	pclath,c
  2616   01010A  0009               	tblrd		*+
  2617   01010C  50F5               	movf	tablat,w,c
  2618   01010E  6EFD               	movwf	tosl,c
  2619   010110  0009               	tblrd		*+
  2620   010112  50F5               	movf	tablat,w,c
  2621   010114  6EFE               	movwf	tosh,c
  2622   010116  0009               	tblrd		*+
  2623   010118  50F5               	movf	tablat,w,c
  2624   01011A  6EFF               	movwf	tosu,c
  2625   01011C  50FA               	movf	pclath,w,c
  2626   01011E  0012               	return		;indir
  2627   010120                     u1949:
  2628   010120  9A82               	bcf	130,5,c	;volatile
  2629   010122  8882               	bsf	130,4,c	;volatile
  2630   010124                     
  2631                           ;application.c: 61:                 ADCC_Initialize_AverageMode();
  2632   010124  ECBF  F086         	call	_ADCC_Initialize_AverageMode	;wreg free
  2633   010128                     
  2634                           ;application.c: 62:                 ADCC_SetChannel(POT_DATA);
  2635   010128  0E00               	movlw	0
  2636   01012A  ECE4  F087         	call	_ADCC_SetChannel
  2637   01012E                     
  2638                           ;application.c: 64:                Timer0.Start();
  2639   01012E  0E36               	movlw	low (_Timer0+3)
  2640   010130  6EF6               	movwf	tblptrl,c
  2641   010132  0EFF               	movlw	high (_Timer0+3)
  2642   010134  6EF7               	movwf	tblptrh,c
  2643   010136                     	if	0	;tblptru may be non-zero
  2644   010136                     	endif
  2645   010136                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2646   010136  0E00               	movlw	low (__mediumconst shr (0+16))
  2647   010138  6EF8               	movwf	tblptru,c
  2648   01013A                     	endif
  2649   01013A  D802               	call	u1958
  2650   01013C  EFAD  F080         	goto	u1959
  2651   010140                     u1958:
  2652   010140  0005               	push	
  2653   010142  6EFA               	movwf	pclath,c
  2654   010144  0009               	tblrd		*+
  2655   010146  50F5               	movf	tablat,w,c
  2656   010148  6EFD               	movwf	tosl,c
  2657   01014A  0009               	tblrd		*+
  2658   01014C  50F5               	movf	tablat,w,c
  2659   01014E  6EFE               	movwf	tosh,c
  2660   010150  0009               	tblrd		*+
  2661   010152  50F5               	movf	tablat,w,c
  2662   010154  6EFF               	movwf	tosu,c
  2663   010156  50FA               	movf	pclath,w,c
  2664   010158  0012               	return		;indir
  2665   01015A                     u1959:
  2666   01015A                     
  2667                           ;application.c: 65:                 avgModeInit = 1;
  2668   01015A  0E01               	movlw	1
  2669   01015C  6E4D               	movwf	_avgModeInit^0,c	;volatile
  2670   01015E                     
  2671                           ;application.c: 66:                 basicModeInit = 0;
  2672   01015E  0E00               	movlw	0
  2673   010160  6E4E               	movwf	_basicModeInit^0,c	;volatile
  2674                           
  2675                           ;application.c: 67:             }
  2676   010162  EF38  F082         	goto	l934
  2677   010166                     l3152:
  2678                           
  2679                           ;application.c: 69:             {;application.c: 71:                 if (adcReadyFlag)
  2680   010166  504F               	movf	_adcReadyFlag^0,w,c	;volatile
  2681   010168  B4D8               	btfsc	status,2,c
  2682   01016A  EFB9  F080         	goto	u1961
  2683   01016E  EFBB  F080         	goto	u1960
  2684   010172                     u1961:
  2685   010172  EFC8  F080         	goto	l3158
  2686   010176                     u1960:
  2687   010176                     
  2688                           ;application.c: 72:                 {;application.c: 73:                     adcReadyFla
      +                          g = 0;
  2689   010176  0E00               	movlw	0
  2690   010178  6E4F               	movwf	_adcReadyFlag^0,c	;volatile
  2691   01017A                     
  2692                           ;application.c: 74:                     printf("AVG Mode - ADFLT=%d \r\n", ADFLTR);
  2693   01017A  0ECF               	movlw	low (STR_5+6)
  2694   01017C  0100               	movlb	0	; () banked
  2695   01017E  6FA4               	movwf	printf@fmt& (0+255),b
  2696   010180  0EFF               	movlw	high (STR_5+6)
  2697   010182  6FA5               	movwf	(printf@fmt+1)& (0+255),b
  2698   010184  CF6D F0A6          	movff	3949,?_printf+2	;volatile
  2699   010188  CF6E F0A7          	movff	3950,?_printf+3	;volatile
  2700   01018C  EC4E  F087         	call	_printf	;wreg free
  2701   010190                     l3158:
  2702                           
  2703                           ;application.c: 77:                 if (ADCC_HasErrorCrossedUpperThreshold())
  2704   010190  EC9D  F087         	call	_ADCC_HasErrorCrossedUpperThreshold	;wreg free
  2705   010194  0900               	iorlw	0
  2706   010196  B4D8               	btfsc	status,2,c
  2707   010198  EFD0  F080         	goto	u1971
  2708   01019C  EFD2  F080         	goto	u1970
  2709   0101A0                     u1971:
  2710   0101A0  EFE7  F080         	goto	l3162
  2711   0101A4                     u1970:
  2712   0101A4                     
  2713                           ;application.c: 78:                 {;application.c: 79:                     printf("AVG
      +                           Mode - ADFLT=%d - SP=%d - UT=%d - UT Crossed\r\n", ADFLTR, ADSTPT, ADUTH);
  2714   0101A4  0E96               	movlw	low (STR_6+6)
  2715   0101A6  0100               	movlb	0	; () banked
  2716   0101A8  6FA4               	movwf	printf@fmt& (0+255),b
  2717   0101AA  0EFF               	movlw	high (STR_6+6)
  2718   0101AC  6FA5               	movwf	(printf@fmt+1)& (0+255),b
  2719   0101AE  CF6D F0A6          	movff	3949,?_printf+2	;volatile
  2720   0101B2  CF6E F0A7          	movff	3950,?_printf+3	;volatile
  2721   0101B6  CF63 F0A8          	movff	3939,?_printf+4	;volatile
  2722   0101BA  CF64 F0A9          	movff	3940,?_printf+5	;volatile
  2723   0101BE  CF67 F0AA          	movff	3943,?_printf+6	;volatile
  2724   0101C2  CF68 F0AB          	movff	3944,?_printf+7	;volatile
  2725   0101C6  EC4E  F087         	call	_printf	;wreg free
  2726                           
  2727                           ;application.c: 81:                 }
  2728   0101CA  EF38  F082         	goto	l934
  2729   0101CE                     l3162:
  2730   0101CE  ECA7  F087         	call	_ADCC_HasErrorCrossedLowerThreshold	;wreg free
  2731   0101D2  0900               	iorlw	0
  2732   0101D4  B4D8               	btfsc	status,2,c
  2733   0101D6  EFEF  F080         	goto	u1981
  2734   0101DA  EFF1  F080         	goto	u1980
  2735   0101DE                     u1981:
  2736   0101DE  EF38  F082         	goto	l934
  2737   0101E2                     u1980:
  2738   0101E2                     
  2739                           ;application.c: 83:                 {;application.c: 84:                     printf("AVG
      +                           Mode - ADFLT=%d - SP=%d - LT=%d - LT Crossed\r\n", ADFLTR, ADSTPT, ADLTH);
  2740   0101E2  0E5D               	movlw	low (STR_7+6)
  2741   0101E4  0100               	movlb	0	; () banked
  2742   0101E6  6FA4               	movwf	printf@fmt& (0+255),b
  2743   0101E8  0EFF               	movlw	high (STR_7+6)
  2744   0101EA  6FA5               	movwf	(printf@fmt+1)& (0+255),b
  2745   0101EC  CF6D F0A6          	movff	3949,?_printf+2	;volatile
  2746   0101F0  CF6E F0A7          	movff	3950,?_printf+3	;volatile
  2747   0101F4  CF63 F0A8          	movff	3939,?_printf+4	;volatile
  2748   0101F8  CF64 F0A9          	movff	3940,?_printf+5	;volatile
  2749   0101FC  CF65 F0AA          	movff	3941,?_printf+6	;volatile
  2750   010200  CF66 F0AB          	movff	3942,?_printf+7	;volatile
  2751   010204  EC4E  F087         	call	_printf	;wreg free
  2752   010208  EF38  F082         	goto	l934
  2753   01020C                     l3166:
  2754                           
  2755                           ;application.c: 89:             if (!burstAvgModeInit)
  2756   01020C  504C               	movf	_burstAvgModeInit^0,w,c	;volatile
  2757   01020E  A4D8               	btfss	status,2,c
  2758   010210  EF0C  F081         	goto	u1991
  2759   010214  EF0E  F081         	goto	u1990
  2760   010218                     u1991:
  2761   010218  EF47  F081         	goto	l3184
  2762   01021C                     u1990:
  2763   01021C                     
  2764                           ;application.c: 90:             {;application.c: 92:                 Timer0.Stop();
  2765   01021C  0E39               	movlw	low (_Timer0+6)
  2766   01021E  6EF6               	movwf	tblptrl,c
  2767   010220  0EFF               	movlw	high (_Timer0+6)
  2768   010222  6EF7               	movwf	tblptrh,c
  2769   010224                     	if	0	;tblptru may be non-zero
  2770   010224                     	endif
  2771   010224                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2772   010224  0E00               	movlw	low (__mediumconst shr (0+16))
  2773   010226  6EF8               	movwf	tblptru,c
  2774   010228                     	endif
  2775   010228  D802               	call	u2008
  2776   01022A  EF24  F081         	goto	u2009
  2777   01022E                     u2008:
  2778   01022E  0005               	push	
  2779   010230  6EFA               	movwf	pclath,c
  2780   010232  0009               	tblrd		*+
  2781   010234  50F5               	movf	tablat,w,c
  2782   010236  6EFD               	movwf	tosl,c
  2783   010238  0009               	tblrd		*+
  2784   01023A  50F5               	movf	tablat,w,c
  2785   01023C  6EFE               	movwf	tosh,c
  2786   01023E  0009               	tblrd		*+
  2787   010240  50F5               	movf	tablat,w,c
  2788   010242  6EFF               	movwf	tosu,c
  2789   010244  50FA               	movf	pclath,w,c
  2790   010246  0012               	return		;indir
  2791   010248                     u2009:
  2792   010248  8A82               	bsf	130,5,c	;volatile
  2793   01024A  9882               	bcf	130,4,c	;volatile
  2794   01024C                     
  2795                           ;application.c: 97:                 ADCC_Initialize_BurstAverageMode();
  2796   01024C  ECA7  F086         	call	_ADCC_Initialize_BurstAverageMode	;wreg free
  2797   010250                     
  2798                           ;application.c: 98:                 ADCC_SetChannel(POT_DATA);
  2799   010250  0E00               	movlw	0
  2800   010252  ECE4  F087         	call	_ADCC_SetChannel
  2801   010256                     
  2802                           ;application.c: 100:                 Timer0.Start();
  2803   010256  0E36               	movlw	low (_Timer0+3)
  2804   010258  6EF6               	movwf	tblptrl,c
  2805   01025A  0EFF               	movlw	high (_Timer0+3)
  2806   01025C  6EF7               	movwf	tblptrh,c
  2807   01025E                     	if	0	;tblptru may be non-zero
  2808   01025E                     	endif
  2809   01025E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2810   01025E  0E00               	movlw	low (__mediumconst shr (0+16))
  2811   010260  6EF8               	movwf	tblptru,c
  2812   010262                     	endif
  2813   010262  D802               	call	u2018
  2814   010264  EF41  F081         	goto	u2019
  2815   010268                     u2018:
  2816   010268  0005               	push	
  2817   01026A  6EFA               	movwf	pclath,c
  2818   01026C  0009               	tblrd		*+
  2819   01026E  50F5               	movf	tablat,w,c
  2820   010270  6EFD               	movwf	tosl,c
  2821   010272  0009               	tblrd		*+
  2822   010274  50F5               	movf	tablat,w,c
  2823   010276  6EFE               	movwf	tosh,c
  2824   010278  0009               	tblrd		*+
  2825   01027A  50F5               	movf	tablat,w,c
  2826   01027C  6EFF               	movwf	tosu,c
  2827   01027E  50FA               	movf	pclath,w,c
  2828   010280  0012               	return		;indir
  2829   010282                     u2019:
  2830   010282                     
  2831                           ;application.c: 101:                 burstAvgModeInit = 1;
  2832   010282  0E01               	movlw	1
  2833   010284  6E4C               	movwf	_burstAvgModeInit^0,c	;volatile
  2834   010286                     
  2835                           ;application.c: 102:                 avgModeInit = 0;
  2836   010286  0E00               	movlw	0
  2837   010288  6E4D               	movwf	_avgModeInit^0,c	;volatile
  2838                           
  2839                           ;application.c: 103:             }
  2840   01028A  EF38  F082         	goto	l934
  2841   01028E                     l3184:
  2842                           
  2843                           ;application.c: 105:             {;application.c: 107:                 if (adcReadyFlag)
  2844   01028E  504F               	movf	_adcReadyFlag^0,w,c	;volatile
  2845   010290  B4D8               	btfsc	status,2,c
  2846   010292  EF4D  F081         	goto	u2021
  2847   010296  EF4F  F081         	goto	u2020
  2848   01029A                     u2021:
  2849   01029A  EF5C  F081         	goto	l3190
  2850   01029E                     u2020:
  2851   01029E                     
  2852                           ;application.c: 108:                 {;application.c: 109:                     adcReadyF
      +                          lag = 0;
  2853   01029E  0E00               	movlw	0
  2854   0102A0  6E4F               	movwf	_adcReadyFlag^0,c	;volatile
  2855   0102A2                     
  2856                           ;application.c: 110:                     printf("Burst AVG Mode - ADFLT=%d \r\n", ADFLTR
      +                          );
  2857   0102A2  0EC9               	movlw	low STR_5
  2858   0102A4  0100               	movlb	0	; () banked
  2859   0102A6  6FA4               	movwf	printf@fmt& (0+255),b
  2860   0102A8  0EFF               	movlw	high STR_5
  2861   0102AA  6FA5               	movwf	(printf@fmt+1)& (0+255),b
  2862   0102AC  CF6D F0A6          	movff	3949,?_printf+2	;volatile
  2863   0102B0  CF6E F0A7          	movff	3950,?_printf+3	;volatile
  2864   0102B4  EC4E  F087         	call	_printf	;wreg free
  2865   0102B8                     l3190:
  2866                           
  2867                           ;application.c: 113:                 if (ADCC_HasErrorCrossedUpperThreshold())
  2868   0102B8  EC9D  F087         	call	_ADCC_HasErrorCrossedUpperThreshold	;wreg free
  2869   0102BC  0900               	iorlw	0
  2870   0102BE  B4D8               	btfsc	status,2,c
  2871   0102C0  EF64  F081         	goto	u2031
  2872   0102C4  EF66  F081         	goto	u2030
  2873   0102C8                     u2031:
  2874   0102C8  EF7B  F081         	goto	l3194
  2875   0102CC                     u2030:
  2876   0102CC                     
  2877                           ;application.c: 114:                 {;application.c: 115:                     printf("B
      +                          urst AVG Mode - ADFLT=%d - SP=%d - UT=%d - UT Crossed\r\n", ADFLTR, ADSTPT, ADUTH);
  2878   0102CC  0E90               	movlw	low STR_6
  2879   0102CE  0100               	movlb	0	; () banked
  2880   0102D0  6FA4               	movwf	printf@fmt& (0+255),b
  2881   0102D2  0EFF               	movlw	high STR_6
  2882   0102D4  6FA5               	movwf	(printf@fmt+1)& (0+255),b
  2883   0102D6  CF6D F0A6          	movff	3949,?_printf+2	;volatile
  2884   0102DA  CF6E F0A7          	movff	3950,?_printf+3	;volatile
  2885   0102DE  CF63 F0A8          	movff	3939,?_printf+4	;volatile
  2886   0102E2  CF64 F0A9          	movff	3940,?_printf+5	;volatile
  2887   0102E6  CF67 F0AA          	movff	3943,?_printf+6	;volatile
  2888   0102EA  CF68 F0AB          	movff	3944,?_printf+7	;volatile
  2889   0102EE  EC4E  F087         	call	_printf	;wreg free
  2890                           
  2891                           ;application.c: 117:                 }
  2892   0102F2  EF38  F082         	goto	l934
  2893   0102F6                     l3194:
  2894   0102F6  ECA7  F087         	call	_ADCC_HasErrorCrossedLowerThreshold	;wreg free
  2895   0102FA  0900               	iorlw	0
  2896   0102FC  B4D8               	btfsc	status,2,c
  2897   0102FE  EF83  F081         	goto	u2041
  2898   010302  EF85  F081         	goto	u2040
  2899   010306                     u2041:
  2900   010306  EF38  F082         	goto	l934
  2901   01030A                     u2040:
  2902   01030A                     
  2903                           ;application.c: 119:                 {;application.c: 120:                     printf("B
      +                          urst AVG Mode - ADFLT=%d - SP=%d - LT=%d - LT Crossed\r\n", ADFLTR, ADSTPT, ADLTH);
  2904   01030A  0E57               	movlw	low STR_7
  2905   01030C  0100               	movlb	0	; () banked
  2906   01030E  6FA4               	movwf	printf@fmt& (0+255),b
  2907   010310  0EFF               	movlw	high STR_7
  2908   010312  6FA5               	movwf	(printf@fmt+1)& (0+255),b
  2909   010314  CF6D F0A6          	movff	3949,?_printf+2	;volatile
  2910   010318  CF6E F0A7          	movff	3950,?_printf+3	;volatile
  2911   01031C  CF63 F0A8          	movff	3939,?_printf+4	;volatile
  2912   010320  CF64 F0A9          	movff	3940,?_printf+5	;volatile
  2913   010324  CF65 F0AA          	movff	3941,?_printf+6	;volatile
  2914   010328  CF66 F0AB          	movff	3942,?_printf+7	;volatile
  2915   01032C  EC4E  F087         	call	_printf	;wreg free
  2916   010330  EF38  F082         	goto	l934
  2917   010334                     l3198:
  2918                           
  2919                           ;application.c: 125:             if (!lpfModeInit)
  2920   010334  504B               	movf	_lpfModeInit^0,w,c	;volatile
  2921   010336  A4D8               	btfss	status,2,c
  2922   010338  EFA0  F081         	goto	u2051
  2923   01033C  EFA2  F081         	goto	u2050
  2924   010340                     u2051:
  2925   010340  EFF5  F081         	goto	l3216
  2926   010344                     u2050:
  2927   010344                     
  2928                           ;application.c: 126:             {;application.c: 128:                 Timer0.Stop();
  2929   010344  0E39               	movlw	low (_Timer0+6)
  2930   010346  6EF6               	movwf	tblptrl,c
  2931   010348  0EFF               	movlw	high (_Timer0+6)
  2932   01034A  6EF7               	movwf	tblptrh,c
  2933   01034C                     	if	0	;tblptru may be non-zero
  2934   01034C                     	endif
  2935   01034C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2936   01034C  0E00               	movlw	low (__mediumconst shr (0+16))
  2937   01034E  6EF8               	movwf	tblptru,c
  2938   010350                     	endif
  2939   010350  D802               	call	u2068
  2940   010352  EFB8  F081         	goto	u2069
  2941   010356                     u2068:
  2942   010356  0005               	push	
  2943   010358  6EFA               	movwf	pclath,c
  2944   01035A  0009               	tblrd		*+
  2945   01035C  50F5               	movf	tablat,w,c
  2946   01035E  6EFD               	movwf	tosl,c
  2947   010360  0009               	tblrd		*+
  2948   010362  50F5               	movf	tablat,w,c
  2949   010364  6EFE               	movwf	tosh,c
  2950   010366  0009               	tblrd		*+
  2951   010368  50F5               	movf	tablat,w,c
  2952   01036A  6EFF               	movwf	tosu,c
  2953   01036C  50FA               	movf	pclath,w,c
  2954   01036E  0012               	return		;indir
  2955   010370                     u2069:
  2956                           
  2957                           ;application.c: 129:                 Timer0.PeriodCountSet(0x01);
  2958   010370  0E00               	movlw	0
  2959   010372  6E0A               	movwf	(TMR0_Reload@periodVal+1)^0,c
  2960   010374  0E01               	movlw	1
  2961   010376  6E09               	movwf	TMR0_Reload@periodVal^0,c
  2962   010378  0E3C               	movlw	low (_Timer0+9)
  2963   01037A  6EF6               	movwf	tblptrl,c
  2964   01037C  0EFF               	movlw	high (_Timer0+9)
  2965   01037E  6EF7               	movwf	tblptrh,c
  2966   010380                     	if	0	;tblptru may be non-zero
  2967   010380                     	endif
  2968   010380                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2969   010380  0E00               	movlw	low (__mediumconst shr (0+16))
  2970   010382  6EF8               	movwf	tblptru,c
  2971   010384                     	endif
  2972   010384  D802               	call	u2078
  2973   010386  EFD2  F081         	goto	u2079
  2974   01038A                     u2078:
  2975   01038A  0005               	push	
  2976   01038C  6EFA               	movwf	pclath,c
  2977   01038E  0009               	tblrd		*+
  2978   010390  50F5               	movf	tablat,w,c
  2979   010392  6EFD               	movwf	tosl,c
  2980   010394  0009               	tblrd		*+
  2981   010396  50F5               	movf	tablat,w,c
  2982   010398  6EFE               	movwf	tosh,c
  2983   01039A  0009               	tblrd		*+
  2984   01039C  50F5               	movf	tablat,w,c
  2985   01039E  6EFF               	movwf	tosu,c
  2986   0103A0  50FA               	movf	pclath,w,c
  2987   0103A2  0012               	return		;indir
  2988   0103A4                     u2079:
  2989   0103A4  8A82               	bsf	130,5,c	;volatile
  2990   0103A6  8882               	bsf	130,4,c	;volatile
  2991   0103A8                     
  2992                           ;application.c: 134:                 ADCC_Initialize_LowPassFilterMode();
  2993   0103A8  EC6C  F087         	call	_ADCC_Initialize_LowPassFilterMode	;wreg free
  2994   0103AC                     
  2995                           ;application.c: 135:                 ADCC_SetChannel(FG_DATA);
  2996   0103AC  0E01               	movlw	1
  2997   0103AE  ECE4  F087         	call	_ADCC_SetChannel
  2998   0103B2                     
  2999                           ;application.c: 137:                 Timer0.Start();
  3000   0103B2  0E36               	movlw	low (_Timer0+3)
  3001   0103B4  6EF6               	movwf	tblptrl,c
  3002   0103B6  0EFF               	movlw	high (_Timer0+3)
  3003   0103B8  6EF7               	movwf	tblptrh,c
  3004   0103BA                     	if	0	;tblptru may be non-zero
  3005   0103BA                     	endif
  3006   0103BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3007   0103BA  0E00               	movlw	low (__mediumconst shr (0+16))
  3008   0103BC  6EF8               	movwf	tblptru,c
  3009   0103BE                     	endif
  3010   0103BE  D802               	call	u2088
  3011   0103C0  EFEF  F081         	goto	u2089
  3012   0103C4                     u2088:
  3013   0103C4  0005               	push	
  3014   0103C6  6EFA               	movwf	pclath,c
  3015   0103C8  0009               	tblrd		*+
  3016   0103CA  50F5               	movf	tablat,w,c
  3017   0103CC  6EFD               	movwf	tosl,c
  3018   0103CE  0009               	tblrd		*+
  3019   0103D0  50F5               	movf	tablat,w,c
  3020   0103D2  6EFE               	movwf	tosh,c
  3021   0103D4  0009               	tblrd		*+
  3022   0103D6  50F5               	movf	tablat,w,c
  3023   0103D8  6EFF               	movwf	tosu,c
  3024   0103DA  50FA               	movf	pclath,w,c
  3025   0103DC  0012               	return		;indir
  3026   0103DE                     u2089:
  3027   0103DE                     
  3028                           ;application.c: 138:                 lpfModeInit = 1;
  3029   0103DE  0E01               	movlw	1
  3030   0103E0  6E4B               	movwf	_lpfModeInit^0,c	;volatile
  3031   0103E2                     
  3032                           ;application.c: 139:                 burstAvgModeInit = 0;
  3033   0103E2  0E00               	movlw	0
  3034   0103E4  6E4C               	movwf	_burstAvgModeInit^0,c	;volatile
  3035                           
  3036                           ;application.c: 140:             }
  3037   0103E6  EF38  F082         	goto	l934
  3038   0103EA                     l3216:
  3039                           
  3040                           ;application.c: 142:             {;application.c: 144:                 if (adcReadyFlag)
  3041   0103EA  504F               	movf	_adcReadyFlag^0,w,c	;volatile
  3042   0103EC  B4D8               	btfsc	status,2,c
  3043   0103EE  EFFB  F081         	goto	u2091
  3044   0103F2  EFFD  F081         	goto	u2090
  3045   0103F6                     u2091:
  3046   0103F6  EF38  F082         	goto	l934
  3047   0103FA                     u2090:
  3048   0103FA                     
  3049                           ;application.c: 145:                 {;application.c: 146:                     adcReadyF
      +                          lag = 0;
  3050   0103FA  0E00               	movlw	0
  3051   0103FC  6E4F               	movwf	_adcReadyFlag^0,c	;volatile
  3052   0103FE                     
  3053                           ;application.c: 147:                     EUSART1_Write(0x03);
  3054   0103FE  0E03               	movlw	3
  3055   010400  ECE0  F085         	call	_EUSART1_Write
  3056   010404                     
  3057                           ;application.c: 148:                     EUSART1_Write(ADRESL);
  3058   010404  010F               	movlb	15	; () banked
  3059   010406  515E               	movf	94,w,b	;volatile
  3060   010408  ECE0  F085         	call	_EUSART1_Write
  3061   01040C                     
  3062                           ;application.c: 149:                     EUSART1_Write(ADRESH);
  3063   01040C  010F               	movlb	15	; () banked
  3064   01040E  515F               	movf	95,w,b	;volatile
  3065   010410  ECE0  F085         	call	_EUSART1_Write
  3066   010414                     
  3067                           ;application.c: 150:                     EUSART1_Write(ADFLTRL);
  3068   010414  506D               	movf	109,w,c	;volatile
  3069   010416  ECE0  F085         	call	_EUSART1_Write
  3070   01041A                     
  3071                           ;application.c: 151:                     EUSART1_Write(ADFLTRH);
  3072   01041A  506E               	movf	110,w,c	;volatile
  3073   01041C  ECE0  F085         	call	_EUSART1_Write
  3074   010420                     
  3075                           ;application.c: 152:                     EUSART1_Write(0xFC);
  3076   010420  0EFC               	movlw	252
  3077   010422  ECE0  F085         	call	_EUSART1_Write
  3078   010426  EF38  F082         	goto	l934
  3079   01042A                     l3232:
  3080                           
  3081                           ;application.c: 157:             count = 0;
  3082   01042A  0E00               	movlw	0
  3083   01042C  6E50               	movwf	_count^0,c	;volatile
  3084                           
  3085                           ;application.c: 158:             lpfModeInit = 0;
  3086   01042E  0E00               	movlw	0
  3087   010430  6E4B               	movwf	_lpfModeInit^0,c	;volatile
  3088                           
  3089                           ;application.c: 159:             break;
  3090   010432  EF38  F082         	goto	l934
  3091   010436                     l3236:
  3092   010436  5050               	movf	_count^0,w,c	;volatile
  3093   010438  6E2B               	movwf	??_ApplicationTask^0,c
  3094   01043A  6A2C               	clrf	(??_ApplicationTask+1)^0,c
  3095                           
  3096                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3097                           ; Switch size 1, requested type "simple"
  3098                           ; Number of cases is 1, Range of values is 0 to 0
  3099                           ; switch strategies available:
  3100                           ; Name         Instructions Cycles
  3101                           ; simple_byte            4     3 (average)
  3102                           ;	Chosen strategy is simple_byte
  3103   01043C  502C               	movf	(??_ApplicationTask+1)^0,w,c
  3104   01043E  0A00               	xorlw	0	; case 0
  3105   010440  B4D8               	btfsc	status,2,c
  3106   010442  EF25  F082         	goto	l3268
  3107   010446  EF15  F082         	goto	l3232
  3108   01044A                     l3268:
  3109                           
  3110                           ; Switch size 1, requested type "simple"
  3111                           ; Number of cases is 4, Range of values is 0 to 3
  3112                           ; switch strategies available:
  3113                           ; Name         Instructions Cycles
  3114                           ; simple_byte           13     7 (average)
  3115                           ;	Chosen strategy is simple_byte
  3116   01044A  502B               	movf	??_ApplicationTask^0,w,c
  3117   01044C  0A00               	xorlw	0	; case 0
  3118   01044E  B4D8               	btfsc	status,2,c
  3119   010450  EF02  F080         	goto	l3112
  3120   010454  0A01               	xorlw	1	; case 1
  3121   010456  B4D8               	btfsc	status,2,c
  3122   010458  EF72  F080         	goto	l3134
  3123   01045C  0A03               	xorlw	3	; case 2
  3124   01045E  B4D8               	btfsc	status,2,c
  3125   010460  EF06  F081         	goto	l3166
  3126   010464  0A01               	xorlw	1	; case 3
  3127   010466  B4D8               	btfsc	status,2,c
  3128   010468  EF9A  F081         	goto	l3198
  3129   01046C  EF15  F082         	goto	l3232
  3130   010470                     l934:
  3131   010470  0012               	return		;funcret
  3132   010472                     __end_of_ApplicationTask:
  3133                           	callstack 0
  3134                           
  3135 ;; *************** function _printf *****************
  3136 ;; Defined at:
  3137 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\printf.c"
  3138 ;; Parameters:    Size  Location     Type
  3139 ;;  fmt             2    0[BANK0 ] PTR const unsigned char 
  3140 ;;		 -> STR_7(57), STR_6(57), STR_5(29), STR_4(51), 
  3141 ;;		 -> STR_3(51), STR_2(23), STR_1(25), 
  3142 ;; Auto vars:     Size  Location     Type
  3143 ;;  ret             2    0        int 
  3144 ;;  ap              1   41[COMRAM] PTR void [1]
  3145 ;;		 -> ?_printf(2), 
  3146 ;; Return value:  Size  Location     Type
  3147 ;;                  2    0[BANK0 ] int 
  3148 ;; Registers used:
  3149 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3150 ;; Tracked objects:
  3151 ;;		On entry : 0/0
  3152 ;;		On exit  : 0/0
  3153 ;;		Unchanged: 0/0
  3154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3155 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3156 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3158 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3159 ;;Total ram usage:        9 bytes
  3160 ;; Hardware stack levels used: 1
  3161 ;; Hardware stack levels required when called: 8
  3162 ;; This function calls:
  3163 ;;		_vfprintf
  3164 ;; This function is called by:
  3165 ;;		_ApplicationTask
  3166 ;; This function uses a non-reentrant model
  3167 ;;
  3168                           
  3169                           	psect	text20
  3170   010E9C                     __ptext20:
  3171                           	callstack 0
  3172   010E9C                     _printf:
  3173                           	callstack 21
  3174   010E9C  0EA6               	movlw	low (?_printf+2)
  3175   010E9E  6E2A               	movwf	printf@ap^0,c
  3176   010EA0  0E00               	movlw	0
  3177   010EA2  6E23               	movwf	vfprintf@fp^0,c
  3178   010EA4  0E00               	movlw	0
  3179   010EA6  6E24               	movwf	(vfprintf@fp+1)^0,c
  3180   010EA8  C0A4  F025         	movff	printf@fmt,vfprintf@fmt
  3181   010EAC  C0A5  F026         	movff	printf@fmt+1,vfprintf@fmt+1
  3182   010EB0  0E2A               	movlw	low printf@ap
  3183   010EB2  6E27               	movwf	vfprintf@ap^0,c
  3184   010EB4  ECBB  F085         	call	_vfprintf	;wreg free
  3185   010EB8  0012               	return		;funcret
  3186   010EBA                     __end_of_printf:
  3187                           	callstack 0
  3188                           
  3189 ;; *************** function _vfprintf *****************
  3190 ;; Defined at:
  3191 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3192 ;; Parameters:    Size  Location     Type
  3193 ;;  fp              2   34[COMRAM] PTR struct _IO_FILE
  3194 ;;		 -> NULL(0), 
  3195 ;;  fmt             2   36[COMRAM] PTR const unsigned char 
  3196 ;;		 -> STR_7(57), STR_6(57), STR_5(29), STR_4(51), 
  3197 ;;		 -> STR_3(51), STR_2(23), STR_1(25), 
  3198 ;;  ap              1   38[COMRAM] PTR PTR void 
  3199 ;;		 -> printf@ap(1), 
  3200 ;; Auto vars:     Size  Location     Type
  3201 ;;  cfmt            2   39[COMRAM] PTR unsigned char 
  3202 ;;		 -> STR_7(57), STR_6(57), STR_5(29), STR_4(51), 
  3203 ;;		 -> STR_3(51), STR_2(23), STR_1(25), 
  3204 ;; Return value:  Size  Location     Type
  3205 ;;                  2   34[COMRAM] int 
  3206 ;; Registers used:
  3207 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3208 ;; Tracked objects:
  3209 ;;		On entry : 0/0
  3210 ;;		On exit  : 0/0
  3211 ;;		Unchanged: 0/0
  3212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3213 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3214 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3216 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3217 ;;Total ram usage:        7 bytes
  3218 ;; Hardware stack levels used: 1
  3219 ;; Hardware stack levels required when called: 7
  3220 ;; This function calls:
  3221 ;;		_vfpfcnvrt
  3222 ;; This function is called by:
  3223 ;;		_printf
  3224 ;; This function uses a non-reentrant model
  3225 ;;
  3226                           
  3227                           	psect	text21
  3228   010B76                     __ptext21:
  3229                           	callstack 0
  3230   010B76                     _vfprintf:
  3231                           	callstack 21
  3232   010B76                     
  3233                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  3234   010B76  C025  F028         	movff	vfprintf@fmt,vfprintf@cfmt
  3235   010B7A  C026  F029         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3236                           
  3237                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3238   010B7E  EFCB  F085         	goto	l2742
  3239   010B82                     l2740:
  3240                           
  3241                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3242   010B82  C023  F015         	movff	vfprintf@fp,vfpfcnvrt@fp
  3243   010B86  C024  F016         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3244   010B8A  0E28               	movlw	low vfprintf@cfmt
  3245   010B8C  6E17               	movwf	vfpfcnvrt@fmt^0,c
  3246   010B8E  C027  F018         	movff	vfprintf@ap,vfpfcnvrt@ap
  3247   010B92  EC39  F082         	call	_vfpfcnvrt	;wreg free
  3248   010B96                     l2742:
  3249                           
  3250                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3251   010B96  C028  FFF6         	movff	vfprintf@cfmt,tblptrl
  3252   010B9A  C029  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3253   010B9E                     	if	0	;tblptru may be non-zero
  3254   010B9E                     	endif
  3255   010B9E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3256   010B9E  0E00               	movlw	low (__mediumconst shr (0+16))
  3257   010BA0  6EF8               	movwf	tblptru,c
  3258   010BA2                     	endif
  3259   010BA2  0008               	tblrd		*
  3260   010BA4  50F5               	movf	tablat,w,c
  3261   010BA6  0900               	iorlw	0
  3262   010BA8  A4D8               	btfss	status,2,c
  3263   010BAA  EFD9  F085         	goto	u1391
  3264   010BAE  EFDB  F085         	goto	u1390
  3265   010BB2                     u1391:
  3266   010BB2  EFC1  F085         	goto	l2740
  3267   010BB6                     u1390:
  3268   010BB6                     
  3269                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  3270   010BB6  0E00               	movlw	0
  3271   010BB8  6E24               	movwf	(?_vfprintf+1)^0,c
  3272   010BBA  0E00               	movlw	0
  3273   010BBC  6E23               	movwf	?_vfprintf^0,c
  3274   010BBE  0012               	return		;funcret
  3275   010BC0                     __end_of_vfprintf:
  3276                           	callstack 0
  3277                           
  3278 ;; *************** function _vfpfcnvrt *****************
  3279 ;; Defined at:
  3280 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3281 ;; Parameters:    Size  Location     Type
  3282 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  3283 ;;		 -> NULL(0), 
  3284 ;;  fmt             1   22[COMRAM] PTR PTR unsigned char 
  3285 ;;		 -> vfprintf@cfmt(2), 
  3286 ;;  ap              1   23[COMRAM] PTR PTR void 
  3287 ;;		 -> printf@ap(1), 
  3288 ;; Auto vars:     Size  Location     Type
  3289 ;;  convarg         4   29[COMRAM] struct .
  3290 ;;  cp              2   27[COMRAM] PTR unsigned char 
  3291 ;;		 -> STR_7(57), STR_6(57), STR_5(29), STR_4(51), 
  3292 ;;		 -> STR_3(51), STR_2(23), STR_1(25), 
  3293 ;;  c               1   33[COMRAM] unsigned char 
  3294 ;;  done            1   26[COMRAM] _Bool 
  3295 ;; Return value:  Size  Location     Type
  3296 ;;                  1    wreg      void 
  3297 ;; Registers used:
  3298 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3299 ;; Tracked objects:
  3300 ;;		On entry : 0/0
  3301 ;;		On exit  : 0/0
  3302 ;;		Unchanged: 0/0
  3303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3304 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3305 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3306 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3307 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3308 ;;Total ram usage:       14 bytes
  3309 ;; Hardware stack levels used: 1
  3310 ;; Hardware stack levels required when called: 6
  3311 ;; This function calls:
  3312 ;;		___awdiv
  3313 ;;		___awmod
  3314 ;;		_abs
  3315 ;;		_fputc
  3316 ;; This function is called by:
  3317 ;;		_vfprintf
  3318 ;; This function uses a non-reentrant model
  3319 ;;
  3320                           
  3321                           	psect	text22
  3322   010472                     __ptext22:
  3323                           	callstack 0
  3324   010472                     _vfpfcnvrt:
  3325                           	callstack 21
  3326   010472                     
  3327                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  3328   010472  5017               	movf	vfpfcnvrt@fmt^0,w,c
  3329   010474  6ED9               	movwf	fsr2l,c
  3330   010476  6ADA               	clrf	fsr2h,c
  3331   010478  CFDE FFF6          	movff	postinc2,tblptrl
  3332   01047C  CFDD FFF7          	movff	postdec2,tblptrh
  3333   010480                     	if	0	;tblptru may be non-zero
  3334   010480                     	endif
  3335   010480                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3336   010480  0E00               	movlw	low (__mediumconst shr (0+16))
  3337   010482  6EF8               	movwf	tblptru,c
  3338   010484                     	endif
  3339   010484  0008               	tblrd		*
  3340   010486  50F5               	movf	tablat,w,c
  3341   010488  0A25               	xorlw	37
  3342   01048A  A4D8               	btfss	status,2,c
  3343   01048C  EF4A  F082         	goto	u1251
  3344   010490  EF4C  F082         	goto	u1250
  3345   010494                     u1251:
  3346   010494  EF1A  F083         	goto	l2706
  3347   010498                     u1250:
  3348   010498                     
  3349                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  3350   010498  5017               	movf	vfpfcnvrt@fmt^0,w,c
  3351   01049A  6ED9               	movwf	fsr2l,c
  3352   01049C  6ADA               	clrf	fsr2h,c
  3353   01049E  2ADE               	incf	postinc2,f,c
  3354   0104A0  0E00               	movlw	0
  3355   0104A2  22DD               	addwfc	postdec2,f,c
  3356   0104A4                     
  3357                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  3358   0104A4  0E00               	movlw	0
  3359   0104A6  0100               	movlb	0	; () banked
  3360   0104A8  6FA1               	movwf	(_width+1)& (0+255),b
  3361   0104AA  0E00               	movlw	0
  3362   0104AC  6FA0               	movwf	_width& (0+255),b
  3363   0104AE  C0A0  F04A         	movff	_width,_flags
  3364   0104B2                     
  3365                           ; BSR set to: 0
  3366                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  3367   0104B2  69A2               	setf	_prec& (0+255),b
  3368   0104B4  69A3               	setf	(_prec+1)& (0+255),b
  3369   0104B6                     
  3370                           ; BSR set to: 0
  3371                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  3372   0104B6  5017               	movf	vfpfcnvrt@fmt^0,w,c
  3373   0104B8  6ED9               	movwf	fsr2l,c
  3374   0104BA  6ADA               	clrf	fsr2h,c
  3375   0104BC  CFDE F01C          	movff	postinc2,vfpfcnvrt@cp
  3376   0104C0  CFDD F01D          	movff	postdec2,vfpfcnvrt@cp+1
  3377   0104C4                     
  3378                           ; BSR set to: 0
  3379                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  3380   0104C4  C01C  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3381   0104C8  C01D  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3382   0104CC                     	if	0	;tblptru may be non-zero
  3383   0104CC                     	endif
  3384   0104CC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3385   0104CC  0E00               	movlw	low (__mediumconst shr (0+16))
  3386   0104CE  6EF8               	movwf	tblptru,c
  3387   0104D0                     	endif
  3388   0104D0  0008               	tblrd		*
  3389   0104D2  50F5               	movf	tablat,w,c
  3390   0104D4  0A64               	xorlw	100
  3391   0104D6  B4D8               	btfsc	status,2,c
  3392   0104D8  EF70  F082         	goto	u1261
  3393   0104DC  EF72  F082         	goto	u1260
  3394   0104E0                     u1261:
  3395   0104E0  EF82  F082         	goto	l2676
  3396   0104E4                     u1260:
  3397   0104E4                     
  3398                           ; BSR set to: 0
  3399   0104E4  C01C  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3400   0104E8  C01D  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3401   0104EC                     	if	0	;tblptru may be non-zero
  3402   0104EC                     	endif
  3403   0104EC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3404   0104EC  0E00               	movlw	low (__mediumconst shr (0+16))
  3405   0104EE  6EF8               	movwf	tblptru,c
  3406   0104F0                     	endif
  3407   0104F0  0008               	tblrd		*
  3408   0104F2  50F5               	movf	tablat,w,c
  3409   0104F4  0A69               	xorlw	105
  3410   0104F6  A4D8               	btfss	status,2,c
  3411   0104F8  EF80  F082         	goto	u1271
  3412   0104FC  EF82  F082         	goto	u1270
  3413   010500                     u1271:
  3414   010500  EF12  F083         	goto	l2702
  3415   010504                     u1270:
  3416   010504                     l2676:
  3417                           
  3418                           ; BSR set to: 0
  3419                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3420   010504  5018               	movf	vfpfcnvrt@ap^0,w,c
  3421   010506  6ED9               	movwf	fsr2l,c
  3422   010508  6ADA               	clrf	fsr2h,c
  3423   01050A  0E02               	movlw	2
  3424   01050C  26DF               	addwf	indf2,f,c
  3425   01050E  5CDF               	subwf	indf2,w,c
  3426   010510  6ED9               	movwf	fsr2l,c
  3427   010512  6ADA               	clrf	fsr2h,c
  3428   010514  CFDE F01E          	movff	postinc2,vfpfcnvrt@convarg
  3429   010518  CFDE F01F          	movff	postinc2,vfpfcnvrt@convarg+1
  3430   01051C                     
  3431                           ; BSR set to: 0
  3432                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  3433   01051C  0E01               	movlw	1
  3434   01051E  241C               	addwf	vfpfcnvrt@cp^0,w,c
  3435   010520  6E19               	movwf	??_vfpfcnvrt^0,c
  3436   010522  0E00               	movlw	0
  3437   010524  201D               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  3438   010526  6E1A               	movwf	(??_vfpfcnvrt+1)^0,c
  3439   010528  5017               	movf	vfpfcnvrt@fmt^0,w,c
  3440   01052A  6ED9               	movwf	fsr2l,c
  3441   01052C  6ADA               	clrf	fsr2h,c
  3442   01052E  C019  FFDE         	movff	??_vfpfcnvrt,postinc2
  3443   010532  C01A  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  3444   010536                     
  3445                           ; BSR set to: 0
  3446                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  3447   010536  0E20               	movlw	32
  3448   010538  6E22               	movwf	vfpfcnvrt@c^0,c
  3449                           
  3450                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  3451   01053A  BE1F               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  3452   01053C  EFA2  F082         	goto	u1281
  3453   010540  EFA5  F082         	goto	u1280
  3454   010544                     u1281:
  3455   010544  0E01               	movlw	1
  3456   010546  EFA6  F082         	goto	u1290
  3457   01054A                     u1280:
  3458   01054A  0E00               	movlw	0
  3459   01054C                     u1290:
  3460   01054C  6E1B               	movwf	vfpfcnvrt@done^0,c
  3461   01054E                     l2682:
  3462                           
  3463                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  3464   01054E  0622               	decf	vfpfcnvrt@c^0,f,c
  3465   010550  5022               	movf	vfpfcnvrt@c^0,w,c
  3466   010552  0F60               	addlw	low _dbuf
  3467   010554  6ED9               	movwf	fsr2l,c
  3468   010556  6ADA               	clrf	fsr2h,c
  3469   010558  C01E  F009         	movff	vfpfcnvrt@convarg,___awmod@dividend
  3470   01055C  C01F  F00A         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  3471   010560  0E00               	movlw	0
  3472   010562  6E0C               	movwf	(___awmod@divisor+1)^0,c
  3473   010564  0E0A               	movlw	10
  3474   010566  6E0B               	movwf	___awmod@divisor^0,c
  3475   010568  ECC1  F084         	call	___awmod	;wreg free
  3476   01056C  C009  F00F         	movff	?___awmod,abs@a
  3477   010570  C00A  F010         	movff	?___awmod+1,abs@a+1
  3478   010574  EC42  F086         	call	_abs	;wreg free
  3479   010578  500F               	movf	?_abs^0,w,c
  3480   01057A  0F30               	addlw	48
  3481   01057C  6EDF               	movwf	indf2,c
  3482   01057E                     
  3483                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  3484   01057E  C01E  F009         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  3485   010582  C01F  F00A         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  3486   010586  0E00               	movlw	0
  3487   010588  6E0C               	movwf	(___awdiv@divisor+1)^0,c
  3488   01058A  0E0A               	movlw	10
  3489   01058C  6E0B               	movwf	___awdiv@divisor^0,c
  3490   01058E  EC03  F084         	call	___awdiv	;wreg free
  3491   010592  C009  F01E         	movff	?___awdiv,vfpfcnvrt@convarg
  3492   010596  C00A  F01F         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  3493   01059A                     
  3494                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  3495   01059A  501E               	movf	vfpfcnvrt@convarg^0,w,c
  3496   01059C  101F               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  3497   01059E  B4D8               	btfsc	status,2,c
  3498   0105A0  EFD4  F082         	goto	u1301
  3499   0105A4  EFD6  F082         	goto	u1300
  3500   0105A8                     u1301:
  3501   0105A8  EFDE  F082         	goto	l2690
  3502   0105AC                     u1300:
  3503   0105AC  5022               	movf	vfpfcnvrt@c^0,w,c
  3504   0105AE  A4D8               	btfss	status,2,c
  3505   0105B0  EFDC  F082         	goto	u1311
  3506   0105B4  EFDE  F082         	goto	u1310
  3507   0105B8                     u1311:
  3508   0105B8  EFA7  F082         	goto	l2682
  3509   0105BC                     u1310:
  3510   0105BC                     l2690:
  3511                           
  3512                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  3513   0105BC  5022               	movf	vfpfcnvrt@c^0,w,c
  3514   0105BE  B4D8               	btfsc	status,2,c
  3515   0105C0  EFE4  F082         	goto	u1321
  3516   0105C4  EFE6  F082         	goto	u1320
  3517   0105C8                     u1321:
  3518   0105C8  EF07  F083         	goto	l2700
  3519   0105CC                     u1320:
  3520   0105CC  501B               	movf	vfpfcnvrt@done^0,w,c
  3521   0105CE  B4D8               	btfsc	status,2,c
  3522   0105D0  EFEC  F082         	goto	u1331
  3523   0105D4  EFEE  F082         	goto	u1330
  3524   0105D8                     u1331:
  3525   0105D8  EF07  F083         	goto	l2700
  3526   0105DC                     u1330:
  3527   0105DC                     
  3528                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  3529   0105DC  0622               	decf	vfpfcnvrt@c^0,f,c
  3530   0105DE  5022               	movf	vfpfcnvrt@c^0,w,c
  3531   0105E0  0F60               	addlw	low _dbuf
  3532   0105E2  6ED9               	movwf	fsr2l,c
  3533   0105E4  6ADA               	clrf	fsr2h,c
  3534   0105E6  0E2D               	movlw	45
  3535   0105E8  6EDF               	movwf	indf2,c
  3536   0105EA  EF07  F083         	goto	l2700
  3537   0105EE                     l2696:
  3538                           
  3539                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  3540   0105EE  5022               	movf	vfpfcnvrt@c^0,w,c
  3541   0105F0  0F60               	addlw	low _dbuf
  3542   0105F2  6ED9               	movwf	fsr2l,c
  3543   0105F4  6ADA               	clrf	fsr2h,c
  3544   0105F6  50DF               	movf	indf2,w,c
  3545   0105F8  6E19               	movwf	??_vfpfcnvrt^0,c
  3546   0105FA  5019               	movf	??_vfpfcnvrt^0,w,c
  3547   0105FC  6E0C               	movwf	fputc@c^0,c
  3548   0105FE  6A0D               	clrf	(fputc@c+1)^0,c
  3549   010600  C015  F00E         	movff	vfpfcnvrt@fp,fputc@fp
  3550   010604  C016  F00F         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3551   010608  EC9E  F083         	call	_fputc	;wreg free
  3552   01060C  2A22               	incf	vfpfcnvrt@c^0,f,c
  3553   01060E                     l2700:
  3554                           
  3555                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  3556   01060E  0E20               	movlw	32
  3557   010610  1822               	xorwf	vfpfcnvrt@c^0,w,c
  3558   010612  A4D8               	btfss	status,2,c
  3559   010614  EF0E  F083         	goto	u1341
  3560   010618  EF10  F083         	goto	u1340
  3561   01061C                     u1341:
  3562   01061C  EFF7  F082         	goto	l2696
  3563   010620                     u1340:
  3564   010620  EF2F  F083         	goto	l1675
  3565   010624                     l2702:
  3566                           
  3567                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  3568   010624  5017               	movf	vfpfcnvrt@fmt^0,w,c
  3569   010626  6ED9               	movwf	fsr2l,c
  3570   010628  6ADA               	clrf	fsr2h,c
  3571   01062A  2ADE               	incf	postinc2,f,c
  3572   01062C  0E00               	movlw	0
  3573   01062E  22DD               	addwfc	postdec2,f,c
  3574   010630  EF2F  F083         	goto	l1675
  3575   010634                     l2706:
  3576                           
  3577                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  3578   010634  5017               	movf	vfpfcnvrt@fmt^0,w,c
  3579   010636  6ED9               	movwf	fsr2l,c
  3580   010638  6ADA               	clrf	fsr2h,c
  3581   01063A  CFDE FFF6          	movff	postinc2,tblptrl
  3582   01063E  CFDD FFF7          	movff	postdec2,tblptrh
  3583   010642                     	if	0	;tblptru may be non-zero
  3584   010642                     	endif
  3585   010642                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3586   010642  0E00               	movlw	low (__mediumconst shr (0+16))
  3587   010644  6EF8               	movwf	tblptru,c
  3588   010646                     	endif
  3589   010646  0008               	tblrd		*
  3590   010648  50F5               	movf	tablat,w,c
  3591   01064A  6E0C               	movwf	fputc@c^0,c
  3592   01064C  6A0D               	clrf	(fputc@c+1)^0,c
  3593   01064E  C015  F00E         	movff	vfpfcnvrt@fp,fputc@fp
  3594   010652  C016  F00F         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3595   010656  EC9E  F083         	call	_fputc	;wreg free
  3596   01065A  EF12  F083         	goto	l2702
  3597   01065E                     l1675:
  3598   01065E  0012               	return		;funcret
  3599   010660                     __end_of_vfpfcnvrt:
  3600                           	callstack 0
  3601                           
  3602 ;; *************** function _fputc *****************
  3603 ;; Defined at:
  3604 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  3605 ;; Parameters:    Size  Location     Type
  3606 ;;  c               2   11[COMRAM] int 
  3607 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  3608 ;;		 -> NULL(0), 
  3609 ;; Auto vars:     Size  Location     Type
  3610 ;;		None
  3611 ;; Return value:  Size  Location     Type
  3612 ;;                  2   11[COMRAM] int 
  3613 ;; Registers used:
  3614 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3615 ;; Tracked objects:
  3616 ;;		On entry : 0/0
  3617 ;;		On exit  : 0/0
  3618 ;;		Unchanged: 0/0
  3619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3620 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3622 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3623 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3624 ;;Total ram usage:        9 bytes
  3625 ;; Hardware stack levels used: 1
  3626 ;; Hardware stack levels required when called: 5
  3627 ;; This function calls:
  3628 ;;		_putch
  3629 ;; This function is called by:
  3630 ;;		_vfpfcnvrt
  3631 ;; This function uses a non-reentrant model
  3632 ;;
  3633                           
  3634                           	psect	text23
  3635   01073C                     __ptext23:
  3636                           	callstack 0
  3637   01073C                     _fputc:
  3638                           	callstack 21
  3639   01073C  500E               	movf	fputc@fp^0,w,c
  3640   01073E  100F               	iorwf	(fputc@fp+1)^0,w,c
  3641   010740  B4D8               	btfsc	status,2,c
  3642   010742  EFA5  F083         	goto	u1201
  3643   010746  EFA7  F083         	goto	u1200
  3644   01074A                     u1201:
  3645   01074A  EFB0  F083         	goto	l2648
  3646   01074E                     u1200:
  3647   01074E  500E               	movf	fputc@fp^0,w,c
  3648   010750  100F               	iorwf	(fputc@fp+1)^0,w,c
  3649   010752  A4D8               	btfss	status,2,c
  3650   010754  EFAE  F083         	goto	u1211
  3651   010758  EFB0  F083         	goto	u1210
  3652   01075C                     u1211:
  3653   01075C  EFB5  F083         	goto	l2650
  3654   010760                     u1210:
  3655   010760                     l2648:
  3656   010760  500C               	movf	fputc@c^0,w,c
  3657   010762  EC5D  F087         	call	_putch
  3658   010766  EF02  F084         	goto	l1700
  3659   01076A                     l2650:
  3660   01076A  EE20 F00A          	lfsr	2,10
  3661   01076E  500E               	movf	fputc@fp^0,w,c
  3662   010770  26D9               	addwf	fsr2l,f,c
  3663   010772  500F               	movf	(fputc@fp+1)^0,w,c
  3664   010774  22DA               	addwfc	fsr2h,f,c
  3665   010776  50DE               	movf	postinc2,w,c
  3666   010778  10DE               	iorwf	postinc2,w,c
  3667   01077A  B4D8               	btfsc	status,2,c
  3668   01077C  EFC2  F083         	goto	u1221
  3669   010780  EFC4  F083         	goto	u1220
  3670   010784                     u1221:
  3671   010784  EFDF  F083         	goto	l2654
  3672   010788                     u1220:
  3673   010788  EE20 F00A          	lfsr	2,10
  3674   01078C  500E               	movf	fputc@fp^0,w,c
  3675   01078E  26D9               	addwf	fsr2l,f,c
  3676   010790  500F               	movf	(fputc@fp+1)^0,w,c
  3677   010792  22DA               	addwfc	fsr2h,f,c
  3678   010794  EE10 F003          	lfsr	1,3
  3679   010798  500E               	movf	fputc@fp^0,w,c
  3680   01079A  26E1               	addwf	fsr1l,f,c
  3681   01079C  500F               	movf	(fputc@fp+1)^0,w,c
  3682   01079E  22E2               	addwfc	fsr1h,f,c
  3683   0107A0  50DE               	movf	postinc2,w,c
  3684   0107A2  5CE6               	subwf	postinc1,w,c
  3685   0107A4  50E6               	movf	postinc1,w,c
  3686   0107A6  0A80               	xorlw	128
  3687   0107A8  6E14               	movwf	(??_fputc+4)^0,c
  3688   0107AA  50DE               	movf	postinc2,w,c
  3689   0107AC  0A80               	xorlw	128
  3690   0107AE  5814               	subwfb	(??_fputc+4)^0,w,c
  3691   0107B0  B0D8               	btfsc	status,0,c
  3692   0107B2  EFDD  F083         	goto	u1231
  3693   0107B6  EFDF  F083         	goto	u1230
  3694   0107BA                     u1231:
  3695   0107BA  EF02  F084         	goto	l1700
  3696   0107BE                     u1230:
  3697   0107BE                     l2654:
  3698   0107BE  EE20 F003          	lfsr	2,3
  3699   0107C2  500E               	movf	fputc@fp^0,w,c
  3700   0107C4  26D9               	addwf	fsr2l,f,c
  3701   0107C6  500F               	movf	(fputc@fp+1)^0,w,c
  3702   0107C8  22DA               	addwfc	fsr2h,f,c
  3703   0107CA  CFDE F010          	movff	postinc2,??_fputc
  3704   0107CE  CFDD F011          	movff	postdec2,??_fputc+1
  3705   0107D2  C00E  FFD9         	movff	fputc@fp,fsr2l
  3706   0107D6  C00F  FFDA         	movff	fputc@fp+1,fsr2h
  3707   0107DA  CFDE F012          	movff	postinc2,??_fputc+2
  3708   0107DE  CFDD F013          	movff	postdec2,??_fputc+3
  3709   0107E2  5010               	movf	??_fputc^0,w,c
  3710   0107E4  2412               	addwf	(??_fputc+2)^0,w,c
  3711   0107E6  6ED9               	movwf	fsr2l,c
  3712   0107E8  5011               	movf	(??_fputc+1)^0,w,c
  3713   0107EA  2013               	addwfc	(??_fputc+3)^0,w,c
  3714   0107EC  6EDA               	movwf	fsr2h,c
  3715   0107EE  C00C  FFDF         	movff	fputc@c,indf2
  3716   0107F2  EE20 F003          	lfsr	2,3
  3717   0107F6  500E               	movf	fputc@fp^0,w,c
  3718   0107F8  26D9               	addwf	fsr2l,f,c
  3719   0107FA  500F               	movf	(fputc@fp+1)^0,w,c
  3720   0107FC  22DA               	addwfc	fsr2h,f,c
  3721   0107FE  2ADE               	incf	postinc2,f,c
  3722   010800  0E00               	movlw	0
  3723   010802  22DD               	addwfc	postdec2,f,c
  3724   010804                     l1700:
  3725   010804  0012               	return		;funcret
  3726   010806                     __end_of_fputc:
  3727                           	callstack 0
  3728                           
  3729 ;; *************** function _putch *****************
  3730 ;; Defined at:
  3731 ;;		line 384 in file "mcc_generated_files/uart/src/eusart1.c"
  3732 ;; Parameters:    Size  Location     Type
  3733 ;;  txData          1    wreg     unsigned char 
  3734 ;; Auto vars:     Size  Location     Type
  3735 ;;  txData          1   10[COMRAM] unsigned char 
  3736 ;; Return value:  Size  Location     Type
  3737 ;;                  1    wreg      void 
  3738 ;; Registers used:
  3739 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3740 ;; Tracked objects:
  3741 ;;		On entry : 0/0
  3742 ;;		On exit  : 0/0
  3743 ;;		Unchanged: 0/0
  3744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3746 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3748 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3749 ;;Total ram usage:        1 bytes
  3750 ;; Hardware stack levels used: 1
  3751 ;; Hardware stack levels required when called: 4
  3752 ;; This function calls:
  3753 ;;		_EUSART1_IsTxReady
  3754 ;;		_EUSART1_Write
  3755 ;; This function is called by:
  3756 ;;		_fputc
  3757 ;; This function uses a non-reentrant model
  3758 ;;
  3759                           
  3760                           	psect	text24
  3761   010EBA                     __ptext24:
  3762                           	callstack 0
  3763   010EBA                     _putch:
  3764                           	callstack 21
  3765                           
  3766                           ;incstack = 0
  3767                           ;putch@txData stored from wreg
  3768   010EBA  6E0B               	movwf	putch@txData^0,c
  3769   010EBC                     l2558:
  3770   010EBC  EC92  F087         	call	_EUSART1_IsTxReady	;wreg free
  3771   010EC0  0900               	iorlw	0
  3772   010EC2  B4D8               	btfsc	status,2,c
  3773   010EC4  EF66  F087         	goto	u1071
  3774   010EC8  EF68  F087         	goto	u1070
  3775   010ECC                     u1071:
  3776   010ECC  EF5E  F087         	goto	l2558
  3777   010ED0                     u1070:
  3778   010ED0                     
  3779                           ;mcc_generated_files/uart/src/eusart1.c: 387:     return EUSART1_Write(txData);;	Return 
      +                          value of _putch is never used
  3780   010ED0  500B               	movf	putch@txData^0,w,c
  3781   010ED2  ECE0  F085         	call	_EUSART1_Write
  3782   010ED6  0012               	return		;funcret
  3783   010ED8                     __end_of_putch:
  3784                           	callstack 0
  3785                           
  3786 ;; *************** function _EUSART1_Write *****************
  3787 ;; Defined at:
  3788 ;;		line 336 in file "mcc_generated_files/uart/src/eusart1.c"
  3789 ;; Parameters:    Size  Location     Type
  3790 ;;  txData          1    wreg     unsigned char 
  3791 ;; Auto vars:     Size  Location     Type
  3792 ;;  txData          1    9[COMRAM] unsigned char 
  3793 ;;  tempTxHead      1    8[COMRAM] unsigned char 
  3794 ;; Return value:  Size  Location     Type
  3795 ;;                  1    wreg      void 
  3796 ;; Registers used:
  3797 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3798 ;; Tracked objects:
  3799 ;;		On entry : 0/0
  3800 ;;		On exit  : 0/0
  3801 ;;		Unchanged: 0/0
  3802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3804 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3806 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3807 ;;Total ram usage:        2 bytes
  3808 ;; Hardware stack levels used: 1
  3809 ;; Hardware stack levels required when called: 3
  3810 ;; This function calls:
  3811 ;;		Nothing
  3812 ;; This function is called by:
  3813 ;;		_putch
  3814 ;;		_ApplicationTask
  3815 ;; This function uses a non-reentrant model
  3816 ;;
  3817                           
  3818                           	psect	text25
  3819   010BC0                     __ptext25:
  3820                           	callstack 0
  3821   010BC0                     _EUSART1_Write:
  3822                           	callstack 21
  3823                           
  3824                           ;incstack = 0
  3825                           ;EUSART1_Write@txData stored from wreg
  3826   010BC0  6E0A               	movwf	EUSART1_Write@txData^0,c
  3827   010BC2                     
  3828                           ;mcc_generated_files/uart/src/eusart1.c: 336: void EUSART1_Write(uint8_t txData);mcc_gen
      +                          erated_files/uart/src/eusart1.c: 337: {;mcc_generated_files/uart/src/eusart1.c: 338:    
      +                           uint8_t tempTxHead;;mcc_generated_files/uart/src/eusart1.c: 340:     if(0 == PIE3bits.T
      +                          X1IE)
  3829   010BC2  010E               	movlb	14	; () banked
  3830   010BC4  B9C0               	btfsc	192,4,b	;volatile
  3831   010BC6  EFE7  F085         	goto	u1051
  3832   010BCA  EFE9  F085         	goto	u1050
  3833   010BCE                     u1051:
  3834   010BCE  EFED  F085         	goto	l2544
  3835   010BD2                     u1050:
  3836   010BD2                     
  3837                           ; BSR set to: 14
  3838                           ;mcc_generated_files/uart/src/eusart1.c: 341:     {;mcc_generated_files/uart/src/eusart1
      +                          .c: 342:         TX1REG = txData;
  3839   010BD2  C00A  FF99         	movff	EUSART1_Write@txData,3993	;volatile
  3840                           
  3841                           ;mcc_generated_files/uart/src/eusart1.c: 343:     }
  3842   010BD6  EF02  F086         	goto	l740
  3843   010BDA                     l2544:
  3844                           
  3845                           ; BSR set to: 14
  3846   010BDA  5054               	movf	_eusart1TxBufferRemaining^0,w,c	;volatile
  3847   010BDC  B4D8               	btfsc	status,2,c
  3848   010BDE  EFF3  F085         	goto	u1061
  3849   010BE2  EFF5  F085         	goto	u1060
  3850   010BE6                     u1061:
  3851   010BE6  EF02  F086         	goto	l740
  3852   010BEA                     u1060:
  3853   010BEA                     
  3854                           ; BSR set to: 14
  3855                           ;mcc_generated_files/uart/src/eusart1.c: 345:     {;mcc_generated_files/uart/src/eusart1
      +                          .c: 346:        eusart1TxBuffer[eusart1TxHead] = txData;
  3856   010BEA  5056               	movf	_eusart1TxHead^0,w,c
  3857   010BEC  0F98               	addlw	low _eusart1TxBuffer
  3858   010BEE  6ED9               	movwf	fsr2l,c
  3859   010BF0  6ADA               	clrf	fsr2h,c
  3860   010BF2  C00A  FFDF         	movff	EUSART1_Write@txData,indf2
  3861   010BF6                     
  3862                           ; BSR set to: 14
  3863                           ;mcc_generated_files/uart/src/eusart1.c: 347:        tempTxHead = (eusart1TxHead + 1) & 
      +                          ((8) - 1);
  3864   010BF6  2856               	incf	_eusart1TxHead^0,w,c	;volatile
  3865   010BF8  0B07               	andlw	7
  3866   010BFA  6E09               	movwf	EUSART1_Write@tempTxHead^0,c
  3867   010BFC                     
  3868                           ; BSR set to: 14
  3869                           ;mcc_generated_files/uart/src/eusart1.c: 349:        eusart1TxHead = tempTxHead;
  3870   010BFC  C009  F056         	movff	EUSART1_Write@tempTxHead,_eusart1TxHead	;volatile
  3871   010C00                     
  3872                           ; BSR set to: 14
  3873                           ;mcc_generated_files/uart/src/eusart1.c: 350:        PIE3bits.TX1IE = 0;
  3874   010C00  99C0               	bcf	192,4,b	;volatile
  3875   010C02                     
  3876                           ; BSR set to: 14
  3877                           ;mcc_generated_files/uart/src/eusart1.c: 351:        eusart1TxBufferRemaining--;
  3878   010C02  0654               	decf	_eusart1TxBufferRemaining^0,f,c	;volatile
  3879   010C04                     l740:
  3880                           
  3881                           ; BSR set to: 14
  3882                           ;mcc_generated_files/uart/src/eusart1.c: 357:     PIE3bits.TX1IE = 1;
  3883   010C04  89C0               	bsf	192,4,b	;volatile
  3884   010C06                     
  3885                           ; BSR set to: 14
  3886   010C06  0012               	return		;funcret
  3887   010C08                     __end_of_EUSART1_Write:
  3888                           	callstack 0
  3889                           
  3890 ;; *************** function _EUSART1_IsTxReady *****************
  3891 ;; Defined at:
  3892 ;;		line 257 in file "mcc_generated_files/uart/src/eusart1.c"
  3893 ;; Parameters:    Size  Location     Type
  3894 ;;		None
  3895 ;; Auto vars:     Size  Location     Type
  3896 ;;		None
  3897 ;; Return value:  Size  Location     Type
  3898 ;;                  1    wreg      _Bool 
  3899 ;; Registers used:
  3900 ;;		wreg, status,2
  3901 ;; Tracked objects:
  3902 ;;		On entry : 0/0
  3903 ;;		On exit  : 0/0
  3904 ;;		Unchanged: 0/0
  3905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3910 ;;Total ram usage:        0 bytes
  3911 ;; Hardware stack levels used: 1
  3912 ;; Hardware stack levels required when called: 3
  3913 ;; This function calls:
  3914 ;;		Nothing
  3915 ;; This function is called by:
  3916 ;;		_putch
  3917 ;; This function uses a non-reentrant model
  3918 ;;
  3919                           
  3920                           	psect	text26
  3921   010F24                     __ptext26:
  3922                           	callstack 0
  3923   010F24                     _EUSART1_IsTxReady:
  3924                           	callstack 21
  3925   010F24                     
  3926                           ;mcc_generated_files/uart/src/eusart1.c: 259:     return (eusart1TxBufferRemaining ? 1 :
      +                           0);
  3927   010F24  5054               	movf	_eusart1TxBufferRemaining^0,w,c	;volatile
  3928   010F26  A4D8               	btfss	status,2,c
  3929   010F28  EF98  F087         	goto	u1031
  3930   010F2C  EF9B  F087         	goto	u1030
  3931   010F30                     u1031:
  3932   010F30  0E01               	movlw	1
  3933   010F32  EF9C  F087         	goto	u1040
  3934   010F36                     u1030:
  3935   010F36  0E00               	movlw	0
  3936   010F38                     u1040:
  3937   010F38  0012               	return		;funcret
  3938   010F3A                     __end_of_EUSART1_IsTxReady:
  3939                           	callstack 0
  3940                           
  3941 ;; *************** function _abs *****************
  3942 ;; Defined at:
  3943 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  3944 ;; Parameters:    Size  Location     Type
  3945 ;;  a               2   14[COMRAM] int 
  3946 ;; Auto vars:     Size  Location     Type
  3947 ;;		None
  3948 ;; Return value:  Size  Location     Type
  3949 ;;                  2   14[COMRAM] int 
  3950 ;; Registers used:
  3951 ;;		wreg, status,2, status,0
  3952 ;; Tracked objects:
  3953 ;;		On entry : 0/0
  3954 ;;		On exit  : 0/0
  3955 ;;		Unchanged: 0/0
  3956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3957 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3959 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3960 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3961 ;;Total ram usage:        4 bytes
  3962 ;; Hardware stack levels used: 1
  3963 ;; Hardware stack levels required when called: 3
  3964 ;; This function calls:
  3965 ;;		Nothing
  3966 ;; This function is called by:
  3967 ;;		_vfpfcnvrt
  3968 ;; This function uses a non-reentrant model
  3969 ;;
  3970                           
  3971                           	psect	text27
  3972   010C84                     __ptext27:
  3973                           	callstack 0
  3974   010C84                     _abs:
  3975                           	callstack 23
  3976   010C84  BE10               	btfsc	(abs@a+1)^0,7,c
  3977   010C86  EF47  F086         	goto	u1241
  3978   010C8A  EF49  F086         	goto	u1240
  3979   010C8E                     u1241:
  3980   010C8E  EF4F  F086         	goto	l1685
  3981   010C92                     u1240:
  3982   010C92  C00F  F00F         	movff	abs@a,?_abs
  3983   010C96  C010  F010         	movff	abs@a+1,?_abs+1
  3984   010C9A  EF5B  F086         	goto	l1688
  3985   010C9E                     l1685:
  3986   010C9E  C00F  F011         	movff	abs@a,??_abs
  3987   010CA2  C010  F012         	movff	abs@a+1,??_abs+1
  3988   010CA6  1E11               	comf	??_abs^0,f,c
  3989   010CA8  1E12               	comf	(??_abs+1)^0,f,c
  3990   010CAA  4A11               	infsnz	??_abs^0,f,c
  3991   010CAC  2A12               	incf	(??_abs+1)^0,f,c
  3992   010CAE  C011  F00F         	movff	??_abs,?_abs
  3993   010CB2  C012  F010         	movff	??_abs+1,?_abs+1
  3994   010CB6                     l1688:
  3995   010CB6  0012               	return		;funcret
  3996   010CB8                     __end_of_abs:
  3997                           	callstack 0
  3998                           
  3999 ;; *************** function ___awmod *****************
  4000 ;; Defined at:
  4001 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  4002 ;; Parameters:    Size  Location     Type
  4003 ;;  dividend        2    8[COMRAM] int 
  4004 ;;  divisor         2   10[COMRAM] int 
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;  sign            1   13[COMRAM] unsigned char 
  4007 ;;  counter         1   12[COMRAM] unsigned char 
  4008 ;; Return value:  Size  Location     Type
  4009 ;;                  2    8[COMRAM] int 
  4010 ;; Registers used:
  4011 ;;		wreg, status,2, status,0
  4012 ;; Tracked objects:
  4013 ;;		On entry : 0/0
  4014 ;;		On exit  : 0/0
  4015 ;;		Unchanged: 0/0
  4016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4017 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4018 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4020 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4021 ;;Total ram usage:        6 bytes
  4022 ;; Hardware stack levels used: 1
  4023 ;; Hardware stack levels required when called: 3
  4024 ;; This function calls:
  4025 ;;		Nothing
  4026 ;; This function is called by:
  4027 ;;		_vfpfcnvrt
  4028 ;; This function uses a non-reentrant model
  4029 ;;
  4030                           
  4031                           	psect	text28
  4032   010982                     __ptext28:
  4033                           	callstack 0
  4034   010982                     ___awmod:
  4035                           	callstack 23
  4036   010982  0E00               	movlw	0
  4037   010984  6E0E               	movwf	___awmod@sign^0,c
  4038   010986  BE0A               	btfsc	(___awmod@dividend+1)^0,7,c
  4039   010988  EFCA  F084         	goto	u1140
  4040   01098C  EFC8  F084         	goto	u1141
  4041   010990                     u1141:
  4042   010990  EFD0  F084         	goto	l2616
  4043   010994                     u1140:
  4044   010994  6C09               	negf	___awmod@dividend^0,c
  4045   010996  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  4046   010998  B0D8               	btfsc	status,0,c
  4047   01099A  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  4048   01099C  0E01               	movlw	1
  4049   01099E  6E0E               	movwf	___awmod@sign^0,c
  4050   0109A0                     l2616:
  4051   0109A0  BE0C               	btfsc	(___awmod@divisor+1)^0,7,c
  4052   0109A2  EFD7  F084         	goto	u1150
  4053   0109A6  EFD5  F084         	goto	u1151
  4054   0109AA                     u1151:
  4055   0109AA  EFDB  F084         	goto	l2620
  4056   0109AE                     u1150:
  4057   0109AE  6C0B               	negf	___awmod@divisor^0,c
  4058   0109B0  1E0C               	comf	(___awmod@divisor+1)^0,f,c
  4059   0109B2  B0D8               	btfsc	status,0,c
  4060   0109B4  2A0C               	incf	(___awmod@divisor+1)^0,f,c
  4061   0109B6                     l2620:
  4062   0109B6  500B               	movf	___awmod@divisor^0,w,c
  4063   0109B8  100C               	iorwf	(___awmod@divisor+1)^0,w,c
  4064   0109BA  B4D8               	btfsc	status,2,c
  4065   0109BC  EFE2  F084         	goto	u1161
  4066   0109C0  EFE4  F084         	goto	u1160
  4067   0109C4                     u1161:
  4068   0109C4  EF08  F085         	goto	l2636
  4069   0109C8                     u1160:
  4070   0109C8  0E01               	movlw	1
  4071   0109CA  6E0D               	movwf	___awmod@counter^0,c
  4072   0109CC  EFEC  F084         	goto	l2626
  4073   0109D0                     l2624:
  4074   0109D0  90D8               	bcf	status,0,c
  4075   0109D2  360B               	rlcf	___awmod@divisor^0,f,c
  4076   0109D4  360C               	rlcf	(___awmod@divisor+1)^0,f,c
  4077   0109D6  2A0D               	incf	___awmod@counter^0,f,c
  4078   0109D8                     l2626:
  4079   0109D8  AE0C               	btfss	(___awmod@divisor+1)^0,7,c
  4080   0109DA  EFF1  F084         	goto	u1171
  4081   0109DE  EFF3  F084         	goto	u1170
  4082   0109E2                     u1171:
  4083   0109E2  EFE8  F084         	goto	l2624
  4084   0109E6                     u1170:
  4085   0109E6                     l2628:
  4086   0109E6  500B               	movf	___awmod@divisor^0,w,c
  4087   0109E8  5C09               	subwf	___awmod@dividend^0,w,c
  4088   0109EA  500C               	movf	(___awmod@divisor+1)^0,w,c
  4089   0109EC  580A               	subwfb	(___awmod@dividend+1)^0,w,c
  4090   0109EE  A0D8               	btfss	status,0,c
  4091   0109F0  EFFC  F084         	goto	u1181
  4092   0109F4  EFFE  F084         	goto	u1180
  4093   0109F8                     u1181:
  4094   0109F8  EF02  F085         	goto	l2632
  4095   0109FC                     u1180:
  4096   0109FC  500B               	movf	___awmod@divisor^0,w,c
  4097   0109FE  5E09               	subwf	___awmod@dividend^0,f,c
  4098   010A00  500C               	movf	(___awmod@divisor+1)^0,w,c
  4099   010A02  5A0A               	subwfb	(___awmod@dividend+1)^0,f,c
  4100   010A04                     l2632:
  4101   010A04  90D8               	bcf	status,0,c
  4102   010A06  320C               	rrcf	(___awmod@divisor+1)^0,f,c
  4103   010A08  320B               	rrcf	___awmod@divisor^0,f,c
  4104   010A0A  2E0D               	decfsz	___awmod@counter^0,f,c
  4105   010A0C  EFF3  F084         	goto	l2628
  4106   010A10                     l2636:
  4107   010A10  500E               	movf	___awmod@sign^0,w,c
  4108   010A12  B4D8               	btfsc	status,2,c
  4109   010A14  EF0E  F085         	goto	u1191
  4110   010A18  EF10  F085         	goto	u1190
  4111   010A1C                     u1191:
  4112   010A1C  EF14  F085         	goto	l2640
  4113   010A20                     u1190:
  4114   010A20  6C09               	negf	___awmod@dividend^0,c
  4115   010A22  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  4116   010A24  B0D8               	btfsc	status,0,c
  4117   010A26  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  4118   010A28                     l2640:
  4119   010A28  C009  F009         	movff	___awmod@dividend,?___awmod
  4120   010A2C  C00A  F00A         	movff	___awmod@dividend+1,?___awmod+1
  4121   010A30  0012               	return		;funcret
  4122   010A32                     __end_of___awmod:
  4123                           	callstack 0
  4124                           
  4125 ;; *************** function ___awdiv *****************
  4126 ;; Defined at:
  4127 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  4128 ;; Parameters:    Size  Location     Type
  4129 ;;  dividend        2    8[COMRAM] int 
  4130 ;;  divisor         2   10[COMRAM] int 
  4131 ;; Auto vars:     Size  Location     Type
  4132 ;;  quotient        2   14[COMRAM] int 
  4133 ;;  sign            1   13[COMRAM] unsigned char 
  4134 ;;  counter         1   12[COMRAM] unsigned char 
  4135 ;; Return value:  Size  Location     Type
  4136 ;;                  2    8[COMRAM] int 
  4137 ;; Registers used:
  4138 ;;		wreg, status,2, status,0
  4139 ;; Tracked objects:
  4140 ;;		On entry : 0/0
  4141 ;;		On exit  : 0/0
  4142 ;;		Unchanged: 0/0
  4143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4144 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4145 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4147 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4148 ;;Total ram usage:        8 bytes
  4149 ;; Hardware stack levels used: 1
  4150 ;; Hardware stack levels required when called: 3
  4151 ;; This function calls:
  4152 ;;		Nothing
  4153 ;; This function is called by:
  4154 ;;		_vfpfcnvrt
  4155 ;; This function uses a non-reentrant model
  4156 ;;
  4157                           
  4158                           	psect	text29
  4159   010806                     __ptext29:
  4160                           	callstack 0
  4161   010806                     ___awdiv:
  4162                           	callstack 23
  4163   010806  0E00               	movlw	0
  4164   010808  6E0E               	movwf	___awdiv@sign^0,c
  4165   01080A  BE0C               	btfsc	(___awdiv@divisor+1)^0,7,c
  4166   01080C  EF0C  F084         	goto	u1080
  4167   010810  EF0A  F084         	goto	u1081
  4168   010814                     u1081:
  4169   010814  EF12  F084         	goto	l2572
  4170   010818                     u1080:
  4171   010818  6C0B               	negf	___awdiv@divisor^0,c
  4172   01081A  1E0C               	comf	(___awdiv@divisor+1)^0,f,c
  4173   01081C  B0D8               	btfsc	status,0,c
  4174   01081E  2A0C               	incf	(___awdiv@divisor+1)^0,f,c
  4175   010820  0E01               	movlw	1
  4176   010822  6E0E               	movwf	___awdiv@sign^0,c
  4177   010824                     l2572:
  4178   010824  BE0A               	btfsc	(___awdiv@dividend+1)^0,7,c
  4179   010826  EF19  F084         	goto	u1090
  4180   01082A  EF17  F084         	goto	u1091
  4181   01082E                     u1091:
  4182   01082E  EF1F  F084         	goto	l2578
  4183   010832                     u1090:
  4184   010832  6C09               	negf	___awdiv@dividend^0,c
  4185   010834  1E0A               	comf	(___awdiv@dividend+1)^0,f,c
  4186   010836  B0D8               	btfsc	status,0,c
  4187   010838  2A0A               	incf	(___awdiv@dividend+1)^0,f,c
  4188   01083A  0E01               	movlw	1
  4189   01083C  1A0E               	xorwf	___awdiv@sign^0,f,c
  4190   01083E                     l2578:
  4191   01083E  0E00               	movlw	0
  4192   010840  6E10               	movwf	(___awdiv@quotient+1)^0,c
  4193   010842  0E00               	movlw	0
  4194   010844  6E0F               	movwf	___awdiv@quotient^0,c
  4195   010846  500B               	movf	___awdiv@divisor^0,w,c
  4196   010848  100C               	iorwf	(___awdiv@divisor+1)^0,w,c
  4197   01084A  B4D8               	btfsc	status,2,c
  4198   01084C  EF2A  F084         	goto	u1101
  4199   010850  EF2C  F084         	goto	u1100
  4200   010854                     u1101:
  4201   010854  EF54  F084         	goto	l2600
  4202   010858                     u1100:
  4203   010858  0E01               	movlw	1
  4204   01085A  6E0D               	movwf	___awdiv@counter^0,c
  4205   01085C  EF34  F084         	goto	l2586
  4206   010860                     l2584:
  4207   010860  90D8               	bcf	status,0,c
  4208   010862  360B               	rlcf	___awdiv@divisor^0,f,c
  4209   010864  360C               	rlcf	(___awdiv@divisor+1)^0,f,c
  4210   010866  2A0D               	incf	___awdiv@counter^0,f,c
  4211   010868                     l2586:
  4212   010868  AE0C               	btfss	(___awdiv@divisor+1)^0,7,c
  4213   01086A  EF39  F084         	goto	u1111
  4214   01086E  EF3B  F084         	goto	u1110
  4215   010872                     u1111:
  4216   010872  EF30  F084         	goto	l2584
  4217   010876                     u1110:
  4218   010876                     l2588:
  4219   010876  90D8               	bcf	status,0,c
  4220   010878  360F               	rlcf	___awdiv@quotient^0,f,c
  4221   01087A  3610               	rlcf	(___awdiv@quotient+1)^0,f,c
  4222   01087C  500B               	movf	___awdiv@divisor^0,w,c
  4223   01087E  5C09               	subwf	___awdiv@dividend^0,w,c
  4224   010880  500C               	movf	(___awdiv@divisor+1)^0,w,c
  4225   010882  580A               	subwfb	(___awdiv@dividend+1)^0,w,c
  4226   010884  A0D8               	btfss	status,0,c
  4227   010886  EF47  F084         	goto	u1121
  4228   01088A  EF49  F084         	goto	u1120
  4229   01088E                     u1121:
  4230   01088E  EF4E  F084         	goto	l2596
  4231   010892                     u1120:
  4232   010892  500B               	movf	___awdiv@divisor^0,w,c
  4233   010894  5E09               	subwf	___awdiv@dividend^0,f,c
  4234   010896  500C               	movf	(___awdiv@divisor+1)^0,w,c
  4235   010898  5A0A               	subwfb	(___awdiv@dividend+1)^0,f,c
  4236   01089A  800F               	bsf	___awdiv@quotient^0,0,c
  4237   01089C                     l2596:
  4238   01089C  90D8               	bcf	status,0,c
  4239   01089E  320C               	rrcf	(___awdiv@divisor+1)^0,f,c
  4240   0108A0  320B               	rrcf	___awdiv@divisor^0,f,c
  4241   0108A2  2E0D               	decfsz	___awdiv@counter^0,f,c
  4242   0108A4  EF3B  F084         	goto	l2588
  4243   0108A8                     l2600:
  4244   0108A8  500E               	movf	___awdiv@sign^0,w,c
  4245   0108AA  B4D8               	btfsc	status,2,c
  4246   0108AC  EF5A  F084         	goto	u1131
  4247   0108B0  EF5C  F084         	goto	u1130
  4248   0108B4                     u1131:
  4249   0108B4  EF60  F084         	goto	l2604
  4250   0108B8                     u1130:
  4251   0108B8  6C0F               	negf	___awdiv@quotient^0,c
  4252   0108BA  1E10               	comf	(___awdiv@quotient+1)^0,f,c
  4253   0108BC  B0D8               	btfsc	status,0,c
  4254   0108BE  2A10               	incf	(___awdiv@quotient+1)^0,f,c
  4255   0108C0                     l2604:
  4256   0108C0  C00F  F009         	movff	___awdiv@quotient,?___awdiv
  4257   0108C4  C010  F00A         	movff	___awdiv@quotient+1,?___awdiv+1
  4258   0108C8  0012               	return		;funcret
  4259   0108CA                     __end_of___awdiv:
  4260                           	callstack 0
  4261                           
  4262 ;; *************** function _TMR0_Stop *****************
  4263 ;; Defined at:
  4264 ;;		line 80 in file "mcc_generated_files/timer/src/tmr0.c"
  4265 ;; Parameters:    Size  Location     Type
  4266 ;;		None
  4267 ;; Auto vars:     Size  Location     Type
  4268 ;;		None
  4269 ;; Return value:  Size  Location     Type
  4270 ;;                  1    wreg      void 
  4271 ;; Registers used:
  4272 ;;		None
  4273 ;; Tracked objects:
  4274 ;;		On entry : 0/0
  4275 ;;		On exit  : 0/0
  4276 ;;		Unchanged: 0/0
  4277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4282 ;;Total ram usage:        0 bytes
  4283 ;; Hardware stack levels used: 1
  4284 ;; Hardware stack levels required when called: 3
  4285 ;; This function calls:
  4286 ;;		Nothing
  4287 ;; This function is called by:
  4288 ;;		_ApplicationTask
  4289 ;; This function uses a non-reentrant model
  4290 ;;
  4291                           
  4292                           	psect	text30
  4293   010FE8                     __ptext30:
  4294                           	callstack 0
  4295   010FE8                     _TMR0_Stop:
  4296                           	callstack 26
  4297   010FE8                     
  4298                           ;mcc_generated_files/timer/src/tmr0.c: 82:     T0CON0bits.T0EN = 0;
  4299   010FE8  9ED4               	bcf	212,7,c	;volatile
  4300   010FEA  0012               	return		;funcret
  4301   010FEC                     __end_of_TMR0_Stop:
  4302                           	callstack 0
  4303                           
  4304 ;; *************** function _TMR4_Stop *****************
  4305 ;; Defined at:
  4306 ;;		line 100 in file "mcc_generated_files/timer/src/tmr4.c"
  4307 ;; Parameters:    Size  Location     Type
  4308 ;;		None
  4309 ;; Auto vars:     Size  Location     Type
  4310 ;;		None
  4311 ;; Return value:  Size  Location     Type
  4312 ;;                  1    wreg      void 
  4313 ;; Registers used:
  4314 ;;		None
  4315 ;; Tracked objects:
  4316 ;;		On entry : 0/0
  4317 ;;		On exit  : 0/0
  4318 ;;		Unchanged: 0/0
  4319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4324 ;;Total ram usage:        0 bytes
  4325 ;; Hardware stack levels used: 1
  4326 ;; Hardware stack levels required when called: 3
  4327 ;; This function calls:
  4328 ;;		Nothing
  4329 ;; This function is called by:
  4330 ;;		_ApplicationTask
  4331 ;; This function uses a non-reentrant model
  4332 ;;
  4333                           
  4334                           	psect	text31
  4335   010FEC                     __ptext31:
  4336                           	callstack 0
  4337   010FEC                     _TMR4_Stop:
  4338                           	callstack 26
  4339   010FEC                     
  4340                           ;mcc_generated_files/timer/src/tmr4.c: 103:     T4CONbits.TMR4ON = 0;
  4341   010FEC  9EB6               	bcf	182,7,c	;volatile
  4342   010FEE  0012               	return		;funcret
  4343   010FF0                     __end_of_TMR4_Stop:
  4344                           	callstack 0
  4345                           
  4346 ;; *************** function _TMR0_Start *****************
  4347 ;; Defined at:
  4348 ;;		line 75 in file "mcc_generated_files/timer/src/tmr0.c"
  4349 ;; Parameters:    Size  Location     Type
  4350 ;;		None
  4351 ;; Auto vars:     Size  Location     Type
  4352 ;;		None
  4353 ;; Return value:  Size  Location     Type
  4354 ;;                  1    wreg      void 
  4355 ;; Registers used:
  4356 ;;		None
  4357 ;; Tracked objects:
  4358 ;;		On entry : 0/0
  4359 ;;		On exit  : 0/0
  4360 ;;		Unchanged: 0/0
  4361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4366 ;;Total ram usage:        0 bytes
  4367 ;; Hardware stack levels used: 1
  4368 ;; Hardware stack levels required when called: 3
  4369 ;; This function calls:
  4370 ;;		Nothing
  4371 ;; This function is called by:
  4372 ;;		_ApplicationTask
  4373 ;; This function uses a non-reentrant model
  4374 ;;
  4375                           
  4376                           	psect	text32
  4377   010FF0                     __ptext32:
  4378                           	callstack 0
  4379   010FF0                     _TMR0_Start:
  4380                           	callstack 26
  4381   010FF0                     
  4382                           ;mcc_generated_files/timer/src/tmr0.c: 77:     T0CON0bits.T0EN = 1;
  4383   010FF0  8ED4               	bsf	212,7,c	;volatile
  4384   010FF2  0012               	return		;funcret
  4385   010FF4                     __end_of_TMR0_Start:
  4386                           	callstack 0
  4387                           
  4388 ;; *************** function _TMR4_Start *****************
  4389 ;; Defined at:
  4390 ;;		line 94 in file "mcc_generated_files/timer/src/tmr4.c"
  4391 ;; Parameters:    Size  Location     Type
  4392 ;;		None
  4393 ;; Auto vars:     Size  Location     Type
  4394 ;;		None
  4395 ;; Return value:  Size  Location     Type
  4396 ;;                  1    wreg      void 
  4397 ;; Registers used:
  4398 ;;		None
  4399 ;; Tracked objects:
  4400 ;;		On entry : 0/0
  4401 ;;		On exit  : 0/0
  4402 ;;		Unchanged: 0/0
  4403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4408 ;;Total ram usage:        0 bytes
  4409 ;; Hardware stack levels used: 1
  4410 ;; Hardware stack levels required when called: 3
  4411 ;; This function calls:
  4412 ;;		Nothing
  4413 ;; This function is called by:
  4414 ;;		_ApplicationTask
  4415 ;; This function uses a non-reentrant model
  4416 ;;
  4417                           
  4418                           	psect	text33
  4419   010FF4                     __ptext33:
  4420                           	callstack 0
  4421   010FF4                     _TMR4_Start:
  4422                           	callstack 26
  4423   010FF4                     
  4424                           ;mcc_generated_files/timer/src/tmr4.c: 97:     T4CONbits.TMR4ON = 1;
  4425   010FF4  8EB6               	bsf	182,7,c	;volatile
  4426   010FF6  0012               	return		;funcret
  4427   010FF8                     __end_of_TMR4_Start:
  4428                           	callstack 0
  4429                           
  4430 ;; *************** function _TMR0_Reload *****************
  4431 ;; Defined at:
  4432 ;;		line 101 in file "mcc_generated_files/timer/src/tmr0.c"
  4433 ;; Parameters:    Size  Location     Type
  4434 ;;  periodVal       2    8[COMRAM] unsigned int 
  4435 ;; Auto vars:     Size  Location     Type
  4436 ;;		None
  4437 ;; Return value:  Size  Location     Type
  4438 ;;                  1    wreg      void 
  4439 ;; Registers used:
  4440 ;;		None
  4441 ;; Tracked objects:
  4442 ;;		On entry : 0/0
  4443 ;;		On exit  : 0/0
  4444 ;;		Unchanged: 0/0
  4445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4446 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4449 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4450 ;;Total ram usage:        2 bytes
  4451 ;; Hardware stack levels used: 1
  4452 ;; Hardware stack levels required when called: 3
  4453 ;; This function calls:
  4454 ;;		Nothing
  4455 ;; This function is called by:
  4456 ;;		_ApplicationTask
  4457 ;; This function uses a non-reentrant model
  4458 ;;
  4459                           
  4460                           	psect	text34
  4461   010FD0                     __ptext34:
  4462                           	callstack 0
  4463   010FD0                     _TMR0_Reload:
  4464                           	callstack 26
  4465   010FD0                     
  4466                           ;mcc_generated_files/timer/src/tmr0.c: 101: void TMR0_Reload(size_t periodVal);mcc_gener
      +                          ated_files/timer/src/tmr0.c: 102: {;mcc_generated_files/timer/src/tmr0.c: 104:    TMR0H 
      +                          = (uint8_t)periodVal;
  4467   010FD0  C009  FFD3         	movff	TMR0_Reload@periodVal,4051	;volatile
  4468   010FD4  0012               	return		;funcret
  4469   010FD6                     __end_of_TMR0_Reload:
  4470                           	callstack 0
  4471                           
  4472 ;; *************** function _TMR4_PeriodCountSet *****************
  4473 ;; Defined at:
  4474 ;;		line 119 in file "mcc_generated_files/timer/src/tmr4.c"
  4475 ;; Parameters:    Size  Location     Type
  4476 ;;  periodVal       2    8[COMRAM] unsigned int 
  4477 ;; Auto vars:     Size  Location     Type
  4478 ;;		None
  4479 ;; Return value:  Size  Location     Type
  4480 ;;                  1    wreg      void 
  4481 ;; Registers used:
  4482 ;;		None
  4483 ;; Tracked objects:
  4484 ;;		On entry : 0/0
  4485 ;;		On exit  : 0/0
  4486 ;;		Unchanged: 0/0
  4487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4488 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4491 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4492 ;;Total ram usage:        2 bytes
  4493 ;; Hardware stack levels used: 1
  4494 ;; Hardware stack levels required when called: 3
  4495 ;; This function calls:
  4496 ;;		Nothing
  4497 ;; This function is called by:
  4498 ;;		_ApplicationTask
  4499 ;; This function uses a non-reentrant model
  4500 ;;
  4501                           
  4502                           	psect	text35
  4503   010FD6                     __ptext35:
  4504                           	callstack 0
  4505   010FD6                     _TMR4_PeriodCountSet:
  4506                           	callstack 26
  4507   010FD6                     
  4508                           ;mcc_generated_files/timer/src/tmr4.c: 119: void TMR4_PeriodCountSet(size_t periodVal);m
      +                          cc_generated_files/timer/src/tmr4.c: 120: {;mcc_generated_files/timer/src/tmr4.c: 121:  
      +                            PR4 = (uint8_t) periodVal;
  4509   010FD6  C009  FFB5         	movff	TMR4_PeriodCountSet@periodVal,4021	;volatile
  4510   010FDA  0012               	return		;funcret
  4511   010FDC                     __end_of_TMR4_PeriodCountSet:
  4512                           	callstack 0
  4513                           
  4514 ;; *************** function _ADCC_SetChannel *****************
  4515 ;; Defined at:
  4516 ;;		line 249 in file "application.c"
  4517 ;; Parameters:    Size  Location     Type
  4518 ;;  channel         1    wreg     enum E12909
  4519 ;; Auto vars:     Size  Location     Type
  4520 ;;  channel         1    8[COMRAM] enum E12909
  4521 ;; Return value:  Size  Location     Type
  4522 ;;                  1    wreg      void 
  4523 ;; Registers used:
  4524 ;;		wreg
  4525 ;; Tracked objects:
  4526 ;;		On entry : 0/0
  4527 ;;		On exit  : 0/0
  4528 ;;		Unchanged: 0/0
  4529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4531 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4533 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4534 ;;Total ram usage:        1 bytes
  4535 ;; Hardware stack levels used: 1
  4536 ;; Hardware stack levels required when called: 3
  4537 ;; This function calls:
  4538 ;;		Nothing
  4539 ;; This function is called by:
  4540 ;;		_ApplicationTask
  4541 ;; This function uses a non-reentrant model
  4542 ;;
  4543                           
  4544                           	psect	text36
  4545   010FC8                     __ptext36:
  4546                           	callstack 0
  4547   010FC8                     _ADCC_SetChannel:
  4548                           	callstack 26
  4549                           
  4550                           ;incstack = 0
  4551                           ;ADCC_SetChannel@channel stored from wreg
  4552   010FC8  6E09               	movwf	ADCC_SetChannel@channel^0,c
  4553   010FCA                     
  4554                           ;application.c: 249: void ADCC_SetChannel(adcc_channel_t channel);application.c: 250: {;
      +                          application.c: 252:     ADPCH = channel;
  4555   010FCA  C009  FF5A         	movff	ADCC_SetChannel@channel,3930	;volatile
  4556   010FCE  0012               	return		;funcret
  4557   010FD0                     __end_of_ADCC_SetChannel:
  4558                           	callstack 0
  4559                           
  4560 ;; *************** function _ADCC_Initialize_LowPassFilterMode *****************
  4561 ;; Defined at:
  4562 ;;		line 233 in file "application.c"
  4563 ;; Parameters:    Size  Location     Type
  4564 ;;		None
  4565 ;; Auto vars:     Size  Location     Type
  4566 ;;		None
  4567 ;; Return value:  Size  Location     Type
  4568 ;;                  1    wreg      void 
  4569 ;; Registers used:
  4570 ;;		wreg, status,2
  4571 ;; Tracked objects:
  4572 ;;		On entry : 0/0
  4573 ;;		On exit  : 0/0
  4574 ;;		Unchanged: 0/0
  4575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4580 ;;Total ram usage:        0 bytes
  4581 ;; Hardware stack levels used: 1
  4582 ;; Hardware stack levels required when called: 3
  4583 ;; This function calls:
  4584 ;;		Nothing
  4585 ;; This function is called by:
  4586 ;;		_ApplicationTask
  4587 ;; This function uses a non-reentrant model
  4588 ;;
  4589                           
  4590                           	psect	text37
  4591   010ED8                     __ptext37:
  4592                           	callstack 0
  4593   010ED8                     _ADCC_Initialize_LowPassFilterMode:
  4594                           	callstack 26
  4595   010ED8                     
  4596                           ;application.c: 236:     ADRPT = 0x10;
  4597   010ED8  0E10               	movlw	16
  4598   010EDA  6E61               	movwf	97,c	;volatile
  4599                           
  4600                           ;application.c: 238:     ADCON2 = 0x34;
  4601   010EDC  0E34               	movlw	52
  4602   010EDE  010F               	movlb	15	; () banked
  4603   010EE0  6F55               	movwf	85,b	;volatile
  4604                           
  4605                           ;application.c: 240:     ADCON3 = 0x57;
  4606   010EE2  0E57               	movlw	87
  4607   010EE4  6F56               	movwf	86,b	;volatile
  4608                           
  4609                           ;application.c: 242:     ADACT = 0x02;
  4610   010EE6  0E02               	movlw	2
  4611   010EE8  6F51               	movwf	81,b	;volatile
  4612                           
  4613                           ;application.c: 244:     ADCLK = 0x1F;
  4614   010EEA  0E1F               	movlw	31
  4615   010EEC  6F52               	movwf	82,b	;volatile
  4616                           
  4617                           ;application.c: 246:     ADCON0 = 0x84;
  4618   010EEE  0E84               	movlw	132
  4619   010EF0  6F5B               	movwf	91,b	;volatile
  4620   010EF2                     
  4621                           ; BSR set to: 15
  4622   010EF2  0012               	return		;funcret
  4623   010EF4                     __end_of_ADCC_Initialize_LowPassFilterMode:
  4624                           	callstack 0
  4625                           
  4626 ;; *************** function _ADCC_Initialize_BurstAverageMode *****************
  4627 ;; Defined at:
  4628 ;;		line 205 in file "application.c"
  4629 ;; Parameters:    Size  Location     Type
  4630 ;;		None
  4631 ;; Auto vars:     Size  Location     Type
  4632 ;;		None
  4633 ;; Return value:  Size  Location     Type
  4634 ;;                  1    wreg      void 
  4635 ;; Registers used:
  4636 ;;		wreg, status,2
  4637 ;; Tracked objects:
  4638 ;;		On entry : 0/0
  4639 ;;		On exit  : 0/0
  4640 ;;		Unchanged: 0/0
  4641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4646 ;;Total ram usage:        0 bytes
  4647 ;; Hardware stack levels used: 1
  4648 ;; Hardware stack levels required when called: 3
  4649 ;; This function calls:
  4650 ;;		Nothing
  4651 ;; This function is called by:
  4652 ;;		_ApplicationTask
  4653 ;; This function uses a non-reentrant model
  4654 ;;
  4655                           
  4656                           	psect	text38
  4657   010D4E                     __ptext38:
  4658                           	callstack 0
  4659   010D4E                     _ADCC_Initialize_BurstAverageMode:
  4660                           	callstack 26
  4661   010D4E                     
  4662                           ;application.c: 208:     ADLTHL = 0x38;
  4663   010D4E  0E38               	movlw	56
  4664   010D50  6E65               	movwf	101,c	;volatile
  4665   010D52                     
  4666                           ;application.c: 210:     ADLTHH = 0xFF;
  4667   010D52  6866               	setf	102,c	;volatile
  4668                           
  4669                           ;application.c: 212:     ADUTHL = 0xC8;
  4670   010D54  0EC8               	movlw	200
  4671   010D56  6E67               	movwf	103,c	;volatile
  4672                           
  4673                           ;application.c: 214:     ADUTHH = 0x00;
  4674   010D58  0E00               	movlw	0
  4675   010D5A  6E68               	movwf	104,c	;volatile
  4676   010D5C                     
  4677                           ;application.c: 216:     ADSTPTL = 0xFF;
  4678   010D5C  6863               	setf	99,c	;volatile
  4679                           
  4680                           ;application.c: 218:     ADSTPTH = 0x01;
  4681   010D5E  0E01               	movlw	1
  4682   010D60  6E64               	movwf	100,c	;volatile
  4683                           
  4684                           ;application.c: 220:     ADRPT = 0x10;
  4685   010D62  0E10               	movlw	16
  4686   010D64  6E61               	movwf	97,c	;volatile
  4687                           
  4688                           ;application.c: 222:     ADCON2 = 0x43;
  4689   010D66  0E43               	movlw	67
  4690   010D68  010F               	movlb	15	; () banked
  4691   010D6A  6F55               	movwf	85,b	;volatile
  4692                           
  4693                           ;application.c: 224:     ADCON3 = 0x13;
  4694   010D6C  0E13               	movlw	19
  4695   010D6E  6F56               	movwf	86,b	;volatile
  4696                           
  4697                           ;application.c: 226:     ADACT = 0x02;
  4698   010D70  0E02               	movlw	2
  4699   010D72  6F51               	movwf	81,b	;volatile
  4700                           
  4701                           ;application.c: 228:     ADCLK = 0x1F;
  4702   010D74  0E1F               	movlw	31
  4703   010D76  6F52               	movwf	82,b	;volatile
  4704                           
  4705                           ;application.c: 230:     ADCON0 = 0x84;
  4706   010D78  0E84               	movlw	132
  4707   010D7A  6F5B               	movwf	91,b	;volatile
  4708   010D7C                     
  4709                           ; BSR set to: 15
  4710   010D7C  0012               	return		;funcret
  4711   010D7E                     __end_of_ADCC_Initialize_BurstAverageMode:
  4712                           	callstack 0
  4713                           
  4714 ;; *************** function _ADCC_Initialize_BasicMode *****************
  4715 ;; Defined at:
  4716 ;;		line 163 in file "application.c"
  4717 ;; Parameters:    Size  Location     Type
  4718 ;;		None
  4719 ;; Auto vars:     Size  Location     Type
  4720 ;;		None
  4721 ;; Return value:  Size  Location     Type
  4722 ;;                  1    wreg      void 
  4723 ;; Registers used:
  4724 ;;		wreg, status,2
  4725 ;; Tracked objects:
  4726 ;;		On entry : 0/0
  4727 ;;		On exit  : 0/0
  4728 ;;		Unchanged: 0/0
  4729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4734 ;;Total ram usage:        0 bytes
  4735 ;; Hardware stack levels used: 1
  4736 ;; Hardware stack levels required when called: 3
  4737 ;; This function calls:
  4738 ;;		Nothing
  4739 ;; This function is called by:
  4740 ;;		_ApplicationTask
  4741 ;; This function uses a non-reentrant model
  4742 ;;
  4743                           
  4744                           	psect	text39
  4745   010F0C                     __ptext39:
  4746                           	callstack 0
  4747   010F0C                     _ADCC_Initialize_BasicMode:
  4748                           	callstack 26
  4749   010F0C                     
  4750                           ;application.c: 166:     ADCON2 = 0x00;
  4751   010F0C  0E00               	movlw	0
  4752   010F0E  010F               	movlb	15	; () banked
  4753   010F10  6F55               	movwf	85,b	;volatile
  4754                           
  4755                           ;application.c: 168:     ADCON3 = 0x07;
  4756   010F12  0E07               	movlw	7
  4757   010F14  6F56               	movwf	86,b	;volatile
  4758                           
  4759                           ;application.c: 170:     ADACT = 0x02;
  4760   010F16  0E02               	movlw	2
  4761   010F18  6F51               	movwf	81,b	;volatile
  4762                           
  4763                           ;application.c: 172:     ADCLK = 0x1F;
  4764   010F1A  0E1F               	movlw	31
  4765   010F1C  6F52               	movwf	82,b	;volatile
  4766                           
  4767                           ;application.c: 174:     ADCON0 = 0x84;
  4768   010F1E  0E84               	movlw	132
  4769   010F20  6F5B               	movwf	91,b	;volatile
  4770   010F22                     
  4771                           ; BSR set to: 15
  4772   010F22  0012               	return		;funcret
  4773   010F24                     __end_of_ADCC_Initialize_BasicMode:
  4774                           	callstack 0
  4775                           
  4776 ;; *************** function _ADCC_Initialize_AverageMode *****************
  4777 ;; Defined at:
  4778 ;;		line 177 in file "application.c"
  4779 ;; Parameters:    Size  Location     Type
  4780 ;;		None
  4781 ;; Auto vars:     Size  Location     Type
  4782 ;;		None
  4783 ;; Return value:  Size  Location     Type
  4784 ;;                  1    wreg      void 
  4785 ;; Registers used:
  4786 ;;		wreg, status,2
  4787 ;; Tracked objects:
  4788 ;;		On entry : 0/0
  4789 ;;		On exit  : 0/0
  4790 ;;		Unchanged: 0/0
  4791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4796 ;;Total ram usage:        0 bytes
  4797 ;; Hardware stack levels used: 1
  4798 ;; Hardware stack levels required when called: 3
  4799 ;; This function calls:
  4800 ;;		Nothing
  4801 ;; This function is called by:
  4802 ;;		_ApplicationTask
  4803 ;; This function uses a non-reentrant model
  4804 ;;
  4805                           
  4806                           	psect	text40
  4807   010D7E                     __ptext40:
  4808                           	callstack 0
  4809   010D7E                     _ADCC_Initialize_AverageMode:
  4810                           	callstack 26
  4811   010D7E                     
  4812                           ;application.c: 180:     ADLTHL = 0x38;
  4813   010D7E  0E38               	movlw	56
  4814   010D80  6E65               	movwf	101,c	;volatile
  4815   010D82                     
  4816                           ;application.c: 182:     ADLTHH = 0xFF;
  4817   010D82  6866               	setf	102,c	;volatile
  4818                           
  4819                           ;application.c: 184:     ADUTHL = 0xC8;
  4820   010D84  0EC8               	movlw	200
  4821   010D86  6E67               	movwf	103,c	;volatile
  4822                           
  4823                           ;application.c: 186:     ADUTHH = 0x00;
  4824   010D88  0E00               	movlw	0
  4825   010D8A  6E68               	movwf	104,c	;volatile
  4826   010D8C                     
  4827                           ;application.c: 188:     ADSTPTL = 0xFF;
  4828   010D8C  6863               	setf	99,c	;volatile
  4829                           
  4830                           ;application.c: 190:     ADSTPTH = 0x01;
  4831   010D8E  0E01               	movlw	1
  4832   010D90  6E64               	movwf	100,c	;volatile
  4833                           
  4834                           ;application.c: 192:     ADRPT = 0x10;
  4835   010D92  0E10               	movlw	16
  4836   010D94  6E61               	movwf	97,c	;volatile
  4837                           
  4838                           ;application.c: 194:     ADCON2 = 0x42;
  4839   010D96  0E42               	movlw	66
  4840   010D98  010F               	movlb	15	; () banked
  4841   010D9A  6F55               	movwf	85,b	;volatile
  4842                           
  4843                           ;application.c: 196:     ADCON3 = 0x13;
  4844   010D9C  0E13               	movlw	19
  4845   010D9E  6F56               	movwf	86,b	;volatile
  4846                           
  4847                           ;application.c: 198:     ADACT = 0x02;
  4848   010DA0  0E02               	movlw	2
  4849   010DA2  6F51               	movwf	81,b	;volatile
  4850                           
  4851                           ;application.c: 200:     ADCLK = 0x1F;
  4852   010DA4  0E1F               	movlw	31
  4853   010DA6  6F52               	movwf	82,b	;volatile
  4854                           
  4855                           ;application.c: 202:     ADCON0 = 0x84;
  4856   010DA8  0E84               	movlw	132
  4857   010DAA  6F5B               	movwf	91,b	;volatile
  4858   010DAC                     
  4859                           ; BSR set to: 15
  4860   010DAC  0012               	return		;funcret
  4861   010DAE                     __end_of_ADCC_Initialize_AverageMode:
  4862                           	callstack 0
  4863                           
  4864 ;; *************** function _ADCC_HasErrorCrossedUpperThreshold *****************
  4865 ;; Defined at:
  4866 ;;		line 266 in file "mcc_generated_files/adc/src/adcc.c"
  4867 ;; Parameters:    Size  Location     Type
  4868 ;;		None
  4869 ;; Auto vars:     Size  Location     Type
  4870 ;;		None
  4871 ;; Return value:  Size  Location     Type
  4872 ;;                  1    wreg      _Bool 
  4873 ;; Registers used:
  4874 ;;		wreg
  4875 ;; Tracked objects:
  4876 ;;		On entry : 0/0
  4877 ;;		On exit  : 0/0
  4878 ;;		Unchanged: 0/0
  4879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4884 ;;Total ram usage:        0 bytes
  4885 ;; Hardware stack levels used: 1
  4886 ;; Hardware stack levels required when called: 3
  4887 ;; This function calls:
  4888 ;;		Nothing
  4889 ;; This function is called by:
  4890 ;;		_ApplicationTask
  4891 ;; This function uses a non-reentrant model
  4892 ;;
  4893                           
  4894                           	psect	text41
  4895   010F3A                     __ptext41:
  4896                           	callstack 0
  4897   010F3A                     _ADCC_HasErrorCrossedUpperThreshold:
  4898                           	callstack 26
  4899   010F3A                     
  4900                           ;mcc_generated_files/adc/src/adcc.c: 269:     return ADSTATbits.ADUTHR;
  4901   010F3A  BC60               	btfsc	96,6,c	;volatile
  4902   010F3C  EFA2  F087         	goto	u381
  4903   010F40  EFA5  F087         	goto	u380
  4904   010F44                     u381:
  4905   010F44  0E01               	movlw	1
  4906   010F46  EFA6  F087         	goto	u386
  4907   010F4A                     u380:
  4908   010F4A  0E00               	movlw	0
  4909   010F4C                     u386:
  4910   010F4C  0012               	return		;funcret
  4911   010F4E                     __end_of_ADCC_HasErrorCrossedUpperThreshold:
  4912                           	callstack 0
  4913                           
  4914 ;; *************** function _ADCC_HasErrorCrossedLowerThreshold *****************
  4915 ;; Defined at:
  4916 ;;		line 272 in file "mcc_generated_files/adc/src/adcc.c"
  4917 ;; Parameters:    Size  Location     Type
  4918 ;;		None
  4919 ;; Auto vars:     Size  Location     Type
  4920 ;;		None
  4921 ;; Return value:  Size  Location     Type
  4922 ;;                  1    wreg      _Bool 
  4923 ;; Registers used:
  4924 ;;		wreg
  4925 ;; Tracked objects:
  4926 ;;		On entry : 0/0
  4927 ;;		On exit  : 0/0
  4928 ;;		Unchanged: 0/0
  4929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4934 ;;Total ram usage:        0 bytes
  4935 ;; Hardware stack levels used: 1
  4936 ;; Hardware stack levels required when called: 3
  4937 ;; This function calls:
  4938 ;;		Nothing
  4939 ;; This function is called by:
  4940 ;;		_ApplicationTask
  4941 ;; This function uses a non-reentrant model
  4942 ;;
  4943                           
  4944                           	psect	text42
  4945   010F4E                     __ptext42:
  4946                           	callstack 0
  4947   010F4E                     _ADCC_HasErrorCrossedLowerThreshold:
  4948                           	callstack 26
  4949   010F4E                     
  4950                           ;mcc_generated_files/adc/src/adcc.c: 275:     return ADSTATbits.ADLTHR;
  4951   010F4E  BA60               	btfsc	96,5,c	;volatile
  4952   010F50  EFAC  F087         	goto	u391
  4953   010F54  EFAF  F087         	goto	u390
  4954   010F58                     u391:
  4955   010F58  0E01               	movlw	1
  4956   010F5A  EFB0  F087         	goto	u396
  4957   010F5E                     u390:
  4958   010F5E  0E00               	movlw	0
  4959   010F60                     u396:
  4960   010F60  0012               	return		;funcret
  4961   010F62                     __end_of_ADCC_HasErrorCrossedLowerThreshold:
  4962                           	callstack 0
  4963                           
  4964 ;; *************** function _INTERRUPT_InterruptManager *****************
  4965 ;; Defined at:
  4966 ;;		line 80 in file "mcc_generated_files/system/src/interrupt.c"
  4967 ;; Parameters:    Size  Location     Type
  4968 ;;		None
  4969 ;; Auto vars:     Size  Location     Type
  4970 ;;		None
  4971 ;; Return value:  Size  Location     Type
  4972 ;;                  1    wreg      void 
  4973 ;; Registers used:
  4974 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  4975 ;; Tracked objects:
  4976 ;;		On entry : 0/0
  4977 ;;		On exit  : 0/0
  4978 ;;		Unchanged: 0/0
  4979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4982 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4983 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4984 ;;Total ram usage:        6 bytes
  4985 ;; Hardware stack levels used: 1
  4986 ;; Hardware stack levels required when called: 2
  4987 ;; This function calls:
  4988 ;;		NULL
  4989 ;;		_ADCC_ThresholdISR
  4990 ;;		_EUSART1_ReceiveISR
  4991 ;;		_EUSART1_TransmitISR
  4992 ;;		_PIN_MANAGER_IOC
  4993 ;;		_TMR4_ISR
  4994 ;; This function is called by:
  4995 ;;		Interrupt level 2
  4996 ;; This function uses a non-reentrant model
  4997 ;;
  4998                           
  4999                           	psect	intcode
  5000   000008                     __pintcode:
  5001                           	callstack 0
  5002   000008                     _INTERRUPT_InterruptManager:
  5003                           	callstack 21
  5004                           
  5005                           ;incstack = 0
  5006   000008  8257               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5007   00000A  CFFA F003          	movff	pclath,??_INTERRUPT_InterruptManager
  5008   00000E  CFFB F004          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  5009   000012  CFD9 F005          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  5010   000016  CFDA F006          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  5011   00001A  CFF3 F007          	movff	prodl,??_INTERRUPT_InterruptManager+4
  5012   00001E  CFF4 F008          	movff	prodh,??_INTERRUPT_InterruptManager+5
  5013   000022                     
  5014                           ;mcc_generated_files/system/src/interrupt.c: 83:     if(PIE0bits.IOCIE == 1 && PIR0bits.
      +                          IOCIF == 1)
  5015   000022  010E               	movlb	14	; () banked
  5016   000024  A9BD               	btfss	189,4,b	;volatile
  5017   000026  EF17  F000         	goto	i2u173_41
  5018   00002A  EF19  F000         	goto	i2u173_40
  5019   00002E                     i2u173_41:
  5020   00002E  EF24  F000         	goto	i2l353
  5021   000032                     i2u173_40:
  5022   000032                     
  5023                           ; BSR set to: 14
  5024   000032  A9C5               	btfss	197,4,b	;volatile
  5025   000034  EF1E  F000         	goto	i2u174_41
  5026   000038  EF20  F000         	goto	i2u174_40
  5027   00003C                     i2u174_41:
  5028   00003C  EF24  F000         	goto	i2l353
  5029   000040                     i2u174_40:
  5030   000040                     
  5031                           ; BSR set to: 14
  5032                           ;mcc_generated_files/system/src/interrupt.c: 84:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 85:         PIN_MANAGER_IOC();
  5033   000040  ECFE  F087         	call	_PIN_MANAGER_IOC	;wreg free
  5034                           
  5035                           ;mcc_generated_files/system/src/interrupt.c: 86:     }
  5036   000044  EF89  F000         	goto	i2l365
  5037   000048                     i2l353:
  5038                           
  5039                           ; BSR set to: 14
  5040   000048  ACF2               	btfss	242,6,c	;volatile
  5041   00004A  EF29  F000         	goto	i2u175_41
  5042   00004E  EF2B  F000         	goto	i2u175_40
  5043   000052                     i2u175_41:
  5044   000052  EF89  F000         	goto	i2l365
  5045   000056                     i2u175_40:
  5046   000056                     
  5047                           ; BSR set to: 14
  5048                           ;mcc_generated_files/system/src/interrupt.c: 88:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 89:         if(PIE3bits.TX1IE == 1 && PIR3bits.TX1IF == 1)
  5049   000056  A9C0               	btfss	192,4,b	;volatile
  5050   000058  EF30  F000         	goto	i2u176_41
  5051   00005C  EF32  F000         	goto	i2u176_40
  5052   000060                     i2u176_41:
  5053   000060  EF48  F000         	goto	i2l356
  5054   000064                     i2u176_40:
  5055   000064                     
  5056                           ; BSR set to: 14
  5057   000064  A9C8               	btfss	200,4,b	;volatile
  5058   000066  EF37  F000         	goto	i2u177_41
  5059   00006A  EF39  F000         	goto	i2u177_40
  5060   00006E                     i2u177_41:
  5061   00006E  EF48  F000         	goto	i2l356
  5062   000072                     i2u177_40:
  5063   000072                     
  5064                           ; BSR set to: 14
  5065                           ;mcc_generated_files/system/src/interrupt.c: 90:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 91:             EUSART1_TxInterruptHandler();
  5066   000072  D802               	call	i2u178_48
  5067   000074  EF46  F000         	goto	i2u178_49
  5068   000078                     i2u178_48:
  5069   000078  0005               	push	
  5070   00007A  6EFA               	movwf	pclath,c
  5071   00007C  5045               	movf	_EUSART1_TxInterruptHandler^0,w,c
  5072   00007E  6EFD               	movwf	tosl,c
  5073   000080  5046               	movf	(_EUSART1_TxInterruptHandler+1)^0,w,c
  5074   000082  6EFE               	movwf	tosh,c
  5075   000084  5047               	movf	(_EUSART1_TxInterruptHandler+2)^0,w,c
  5076   000086  6EFF               	movwf	tosu,c
  5077   000088  50FA               	movf	pclath,w,c
  5078   00008A  0012               	return		;indir
  5079   00008C                     i2u178_49:
  5080                           
  5081                           ;mcc_generated_files/system/src/interrupt.c: 92:         }
  5082   00008C  EF89  F000         	goto	i2l365
  5083   000090                     i2l356:
  5084                           
  5085                           ; BSR set to: 14
  5086   000090  ABC0               	btfss	192,5,b	;volatile
  5087   000092  EF4D  F000         	goto	i2u179_41
  5088   000096  EF4F  F000         	goto	i2u179_40
  5089   00009A                     i2u179_41:
  5090   00009A  EF65  F000         	goto	i2l358
  5091   00009E                     i2u179_40:
  5092   00009E                     
  5093                           ; BSR set to: 14
  5094   00009E  ABC8               	btfss	200,5,b	;volatile
  5095   0000A0  EF54  F000         	goto	i2u180_41
  5096   0000A4  EF56  F000         	goto	i2u180_40
  5097   0000A8                     i2u180_41:
  5098   0000A8  EF65  F000         	goto	i2l358
  5099   0000AC                     i2u180_40:
  5100   0000AC                     
  5101                           ; BSR set to: 14
  5102                           ;mcc_generated_files/system/src/interrupt.c: 94:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 95:             EUSART1_RxInterruptHandler();
  5103   0000AC  D802               	call	i2u181_48
  5104   0000AE  EF63  F000         	goto	i2u181_49
  5105   0000B2                     i2u181_48:
  5106   0000B2  0005               	push	
  5107   0000B4  6EFA               	movwf	pclath,c
  5108   0000B6  5042               	movf	_EUSART1_RxInterruptHandler^0,w,c
  5109   0000B8  6EFD               	movwf	tosl,c
  5110   0000BA  5043               	movf	(_EUSART1_RxInterruptHandler+1)^0,w,c
  5111   0000BC  6EFE               	movwf	tosh,c
  5112   0000BE  5044               	movf	(_EUSART1_RxInterruptHandler+2)^0,w,c
  5113   0000C0  6EFF               	movwf	tosu,c
  5114   0000C2  50FA               	movf	pclath,w,c
  5115   0000C4  0012               	return		;indir
  5116   0000C6                     i2u181_49:
  5117                           
  5118                           ;mcc_generated_files/system/src/interrupt.c: 96:         }
  5119   0000C6  EF89  F000         	goto	i2l365
  5120   0000CA                     i2l358:
  5121                           
  5122                           ; BSR set to: 14
  5123   0000CA  A7C1               	btfss	193,3,b	;volatile
  5124   0000CC  EF6A  F000         	goto	i2u182_41
  5125   0000D0  EF6C  F000         	goto	i2u182_40
  5126   0000D4                     i2u182_41:
  5127   0000D4  EF77  F000         	goto	i2l360
  5128   0000D8                     i2u182_40:
  5129   0000D8                     
  5130                           ; BSR set to: 14
  5131   0000D8  A7C9               	btfss	201,3,b	;volatile
  5132   0000DA  EF71  F000         	goto	i2u183_41
  5133   0000DE  EF73  F000         	goto	i2u183_40
  5134   0000E2                     i2u183_41:
  5135   0000E2  EF77  F000         	goto	i2l360
  5136   0000E6                     i2u183_40:
  5137   0000E6                     
  5138                           ; BSR set to: 14
  5139                           ;mcc_generated_files/system/src/interrupt.c: 98:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 99:             TMR4_ISR();
  5140   0000E6  EC5C  F086         	call	_TMR4_ISR	;wreg free
  5141                           
  5142                           ;mcc_generated_files/system/src/interrupt.c: 100:         }
  5143   0000EA  EF89  F000         	goto	i2l365
  5144   0000EE                     i2l360:
  5145                           
  5146                           ; BSR set to: 14
  5147   0000EE  A3BE               	btfss	190,1,b	;volatile
  5148   0000F0  EF7C  F000         	goto	i2u184_41
  5149   0000F4  EF7E  F000         	goto	i2u184_40
  5150   0000F8                     i2u184_41:
  5151   0000F8  EF89  F000         	goto	i2l359
  5152   0000FC                     i2u184_40:
  5153   0000FC                     
  5154                           ; BSR set to: 14
  5155   0000FC  A3C6               	btfss	198,1,b	;volatile
  5156   0000FE  EF83  F000         	goto	i2u185_41
  5157   000102  EF85  F000         	goto	i2u185_40
  5158   000106                     i2u185_41:
  5159   000106  EF89  F000         	goto	i2l359
  5160   00010A                     i2u185_40:
  5161   00010A                     
  5162                           ; BSR set to: 14
  5163                           ;mcc_generated_files/system/src/interrupt.c: 102:         {;mcc_generated_files/system/s
      +                          rc/interrupt.c: 103:             ADCC_ThresholdISR();
  5164   00010A  EC27  F086         	call	_ADCC_ThresholdISR	;wreg free
  5165                           
  5166                           ;mcc_generated_files/system/src/interrupt.c: 104:         }
  5167   00010E  EF89  F000         	goto	i2l365
  5168   000112                     i2l359:
  5169   000112                     i2l365:
  5170   000112  C008  FFF4         	movff	??_INTERRUPT_InterruptManager+5,prodh
  5171   000116  C007  FFF3         	movff	??_INTERRUPT_InterruptManager+4,prodl
  5172   00011A  C006  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  5173   00011E  C005  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  5174   000122  C004  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  5175   000126  C003  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  5176   00012A  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5177   00012C  0011               	retfie		f
  5178   00012E                     __end_of_INTERRUPT_InterruptManager:
  5179                           	callstack 0
  5180                           
  5181 ;; *************** function _TMR4_ISR *****************
  5182 ;; Defined at:
  5183 ;;		line 124 in file "mcc_generated_files/timer/src/tmr4.c"
  5184 ;; Parameters:    Size  Location     Type
  5185 ;;		None
  5186 ;; Auto vars:     Size  Location     Type
  5187 ;;		None
  5188 ;; Return value:  Size  Location     Type
  5189 ;;                  1    wreg      void 
  5190 ;; Registers used:
  5191 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5192 ;; Tracked objects:
  5193 ;;		On entry : 0/0
  5194 ;;		On exit  : 0/0
  5195 ;;		Unchanged: 0/0
  5196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5201 ;;Total ram usage:        0 bytes
  5202 ;; Hardware stack levels used: 1
  5203 ;; Hardware stack levels required when called: 1
  5204 ;; This function calls:
  5205 ;;		NULL
  5206 ;;		_TMR0_DefaultOverflowCallback
  5207 ;;		_TMR4UserInterrupt
  5208 ;;		_TMR4_DefaultOverflowCallback
  5209 ;; This function is called by:
  5210 ;;		_INTERRUPT_InterruptManager
  5211 ;; This function uses a non-reentrant model
  5212 ;;
  5213                           
  5214                           	psect	text44
  5215   010CB8                     __ptext44:
  5216                           	callstack 0
  5217   010CB8                     _TMR4_ISR:
  5218                           	callstack 21
  5219   010CB8                     
  5220                           ;mcc_generated_files/timer/src/tmr4.c: 127:      PIR4bits.TMR4IF = 0;
  5221   010CB8  010E               	movlb	14	; () banked
  5222   010CBA  97C9               	bcf	201,3,b	;volatile
  5223   010CBC                     
  5224                           ; BSR set to: 14
  5225                           ;mcc_generated_files/timer/src/tmr4.c: 129:     if(TMR4_OverflowCallback)
  5226   010CBC  5036               	movf	_TMR4_OverflowCallback^0,w,c
  5227   010CBE  1037               	iorwf	(_TMR4_OverflowCallback+1)^0,w,c
  5228   010CC0  1038               	iorwf	(_TMR4_OverflowCallback+2)^0,w,c
  5229   010CC2  B4D8               	btfsc	status,2,c
  5230   010CC4  EF66  F086         	goto	i2u43_41
  5231   010CC8  EF68  F086         	goto	i2u43_40
  5232   010CCC                     i2u43_41:
  5233   010CCC  EF75  F086         	goto	i2l495
  5234   010CD0                     i2u43_40:
  5235   010CD0                     
  5236                           ; BSR set to: 14
  5237                           ;mcc_generated_files/timer/src/tmr4.c: 130:     {;mcc_generated_files/timer/src/tmr4.c: 
      +                          131:         TMR4_OverflowCallback();
  5238   010CD0  D802               	call	i2u44_48
  5239   010CD2  EF75  F086         	goto	i2u44_49
  5240   010CD6                     i2u44_48:
  5241   010CD6  0005               	push	
  5242   010CD8  6EFA               	movwf	pclath,c
  5243   010CDA  5036               	movf	_TMR4_OverflowCallback^0,w,c
  5244   010CDC  6EFD               	movwf	tosl,c
  5245   010CDE  5037               	movf	(_TMR4_OverflowCallback+1)^0,w,c
  5246   010CE0  6EFE               	movwf	tosh,c
  5247   010CE2  5038               	movf	(_TMR4_OverflowCallback+2)^0,w,c
  5248   010CE4  6EFF               	movwf	tosu,c
  5249   010CE6  50FA               	movf	pclath,w,c
  5250   010CE8  0012               	return		;indir
  5251   010CEA                     i2u44_49:
  5252   010CEA                     i2l495:
  5253   010CEA  0012               	return		;funcret
  5254   010CEC                     __end_of_TMR4_ISR:
  5255                           	callstack 0
  5256                           
  5257 ;; *************** function _TMR4UserInterrupt *****************
  5258 ;; Defined at:
  5259 ;;		line 259 in file "application.c"
  5260 ;; Parameters:    Size  Location     Type
  5261 ;;		None
  5262 ;; Auto vars:     Size  Location     Type
  5263 ;;		None
  5264 ;; Return value:  Size  Location     Type
  5265 ;;                  1    wreg      void 
  5266 ;; Registers used:
  5267 ;;		status,2, status,0
  5268 ;; Tracked objects:
  5269 ;;		On entry : 0/0
  5270 ;;		On exit  : 0/0
  5271 ;;		Unchanged: 0/0
  5272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5277 ;;Total ram usage:        0 bytes
  5278 ;; Hardware stack levels used: 1
  5279 ;; This function calls:
  5280 ;;		Nothing
  5281 ;; This function is called by:
  5282 ;;		_main
  5283 ;;		_TMR4_ISR
  5284 ;;		_TMR0_Tasks
  5285 ;; This function uses a non-reentrant model
  5286 ;;
  5287                           
  5288                           	psect	text45
  5289   010F62                     __ptext45:
  5290                           	callstack 0
  5291   010F62                     _TMR4UserInterrupt:
  5292                           	callstack 21
  5293   010F62                     
  5294                           ;application.c: 261:     if ( PORTCbits.RC5)
  5295   010F62  AA8E               	btfss	142,5,c	;volatile
  5296   010F64  EFB6  F087         	goto	i2u40_41
  5297   010F68  EFB8  F087         	goto	i2u40_40
  5298   010F6C                     i2u40_41:
  5299   010F6C  EFB9  F087         	goto	i2l956
  5300   010F70                     i2u40_40:
  5301   010F70                     
  5302                           ;application.c: 262:     {;application.c: 263:         count++;
  5303   010F70  2A50               	incf	_count^0,f,c	;volatile
  5304   010F72                     i2l956:
  5305   010F72  0012               	return		;funcret
  5306   010F74                     __end_of_TMR4UserInterrupt:
  5307                           	callstack 0
  5308                           
  5309 ;; *************** function _TMR0_DefaultOverflowCallback *****************
  5310 ;; Defined at:
  5311 ;;		line 113 in file "mcc_generated_files/timer/src/tmr0.c"
  5312 ;; Parameters:    Size  Location     Type
  5313 ;;		None
  5314 ;; Auto vars:     Size  Location     Type
  5315 ;;		None
  5316 ;; Return value:  Size  Location     Type
  5317 ;;                  1    wreg      void 
  5318 ;; Registers used:
  5319 ;;		None
  5320 ;; Tracked objects:
  5321 ;;		On entry : 0/0
  5322 ;;		On exit  : 0/0
  5323 ;;		Unchanged: 0/0
  5324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5329 ;;Total ram usage:        0 bytes
  5330 ;; Hardware stack levels used: 1
  5331 ;; This function calls:
  5332 ;;		Nothing
  5333 ;; This function is called by:
  5334 ;;		_TMR0_Initialize
  5335 ;;		_TMR4_ISR
  5336 ;;		_TMR0_Tasks
  5337 ;; This function uses a non-reentrant model
  5338 ;;
  5339                           
  5340                           	psect	text46
  5341   010FF8                     __ptext46:
  5342                           	callstack 0
  5343   010FF8                     _TMR0_DefaultOverflowCallback:
  5344                           	callstack 21
  5345   010FF8  0012               	return		;funcret
  5346   010FFA                     __end_of_TMR0_DefaultOverflowCallback:
  5347                           	callstack 0
  5348                           
  5349 ;; *************** function _TMR4_DefaultOverflowCallback *****************
  5350 ;; Defined at:
  5351 ;;		line 140 in file "mcc_generated_files/timer/src/tmr4.c"
  5352 ;; Parameters:    Size  Location     Type
  5353 ;;		None
  5354 ;; Auto vars:     Size  Location     Type
  5355 ;;		None
  5356 ;; Return value:  Size  Location     Type
  5357 ;;                  1    wreg      void 
  5358 ;; Registers used:
  5359 ;;		None
  5360 ;; Tracked objects:
  5361 ;;		On entry : 0/0
  5362 ;;		On exit  : 0/0
  5363 ;;		Unchanged: 0/0
  5364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5369 ;;Total ram usage:        0 bytes
  5370 ;; Hardware stack levels used: 1
  5371 ;; This function calls:
  5372 ;;		Nothing
  5373 ;; This function is called by:
  5374 ;;		_TMR4_Initialize
  5375 ;;		_TMR4_ISR
  5376 ;;		_TMR0_Tasks
  5377 ;; This function uses a non-reentrant model
  5378 ;;
  5379                           
  5380                           	psect	text47
  5381   010FFA                     __ptext47:
  5382                           	callstack 0
  5383   010FFA                     _TMR4_DefaultOverflowCallback:
  5384                           	callstack 21
  5385   010FFA  0012               	return		;funcret
  5386   010FFC                     __end_of_TMR4_DefaultOverflowCallback:
  5387                           	callstack 0
  5388                           
  5389 ;; *************** function _PIN_MANAGER_IOC *****************
  5390 ;; Defined at:
  5391 ;;		line 132 in file "mcc_generated_files/system/src/pins.c"
  5392 ;; Parameters:    Size  Location     Type
  5393 ;;		None
  5394 ;; Auto vars:     Size  Location     Type
  5395 ;;		None
  5396 ;; Return value:  Size  Location     Type
  5397 ;;                  1    wreg      void 
  5398 ;; Registers used:
  5399 ;;		None
  5400 ;; Tracked objects:
  5401 ;;		On entry : 0/0
  5402 ;;		On exit  : 0/0
  5403 ;;		Unchanged: 0/0
  5404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5409 ;;Total ram usage:        0 bytes
  5410 ;; Hardware stack levels used: 1
  5411 ;; This function calls:
  5412 ;;		Nothing
  5413 ;; This function is called by:
  5414 ;;		_INTERRUPT_InterruptManager
  5415 ;; This function uses a non-reentrant model
  5416 ;;
  5417                           
  5418                           	psect	text48
  5419   010FFC                     __ptext48:
  5420                           	callstack 0
  5421   010FFC                     _PIN_MANAGER_IOC:
  5422                           	callstack 22
  5423   010FFC  0012               	return		;funcret
  5424   010FFE                     __end_of_PIN_MANAGER_IOC:
  5425                           	callstack 0
  5426                           
  5427 ;; *************** function _EUSART1_TransmitISR *****************
  5428 ;; Defined at:
  5429 ;;		line 360 in file "mcc_generated_files/uart/src/eusart1.c"
  5430 ;; Parameters:    Size  Location     Type
  5431 ;;		None
  5432 ;; Auto vars:     Size  Location     Type
  5433 ;;  tempTxTail      1    0[COMRAM] unsigned char 
  5434 ;; Return value:  Size  Location     Type
  5435 ;;                  1    wreg      void 
  5436 ;; Registers used:
  5437 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5438 ;; Tracked objects:
  5439 ;;		On entry : 0/0
  5440 ;;		On exit  : 0/0
  5441 ;;		Unchanged: 0/0
  5442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5444 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5446 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5447 ;;Total ram usage:        1 bytes
  5448 ;; Hardware stack levels used: 1
  5449 ;; This function calls:
  5450 ;;		Nothing
  5451 ;; This function is called by:
  5452 ;;		_EUSART1_Initialize
  5453 ;;		_INTERRUPT_InterruptManager
  5454 ;; This function uses a non-reentrant model
  5455 ;;
  5456                           
  5457                           	psect	text49
  5458   010CEC                     __ptext49:
  5459                           	callstack 0
  5460   010CEC                     _EUSART1_TransmitISR:
  5461                           	callstack 22
  5462   010CEC                     
  5463                           ;mcc_generated_files/uart/src/eusart1.c: 362:     uint8_t tempTxTail;;mcc_generated_file
      +                          s/uart/src/eusart1.c: 364:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
  5464   010CEC  0E08               	movlw	8
  5465   010CEE  6054               	cpfslt	_eusart1TxBufferRemaining^0,c	;volatile
  5466   010CF0  EF7C  F086         	goto	i2u150_41
  5467   010CF4  EF7E  F086         	goto	i2u150_40
  5468   010CF8                     i2u150_41:
  5469   010CF8  EF8C  F086         	goto	i2l746
  5470   010CFC                     i2u150_40:
  5471   010CFC                     
  5472                           ;mcc_generated_files/uart/src/eusart1.c: 365:     {;mcc_generated_files/uart/src/eusart1
      +                          .c: 366:        TX1REG = eusart1TxBuffer[eusart1TxTail];
  5473   010CFC  5055               	movf	_eusart1TxTail^0,w,c
  5474   010CFE  0F98               	addlw	low _eusart1TxBuffer
  5475   010D00  6ED9               	movwf	fsr2l,c
  5476   010D02  6ADA               	clrf	fsr2h,c
  5477   010D04  50DF               	movf	indf2,w,c
  5478   010D06  6E99               	movwf	153,c	;volatile
  5479   010D08                     
  5480                           ;mcc_generated_files/uart/src/eusart1.c: 367:        tempTxTail = (eusart1TxTail + 1) & 
      +                          ((8) - 1);
  5481   010D08  2855               	incf	_eusart1TxTail^0,w,c	;volatile
  5482   010D0A  0B07               	andlw	7
  5483   010D0C  6E01               	movwf	EUSART1_TransmitISR@tempTxTail^0,c
  5484   010D0E                     
  5485                           ;mcc_generated_files/uart/src/eusart1.c: 369:        eusart1TxTail = tempTxTail;
  5486   010D0E  C001  F055         	movff	EUSART1_TransmitISR@tempTxTail,_eusart1TxTail	;volatile
  5487   010D12                     
  5488                           ;mcc_generated_files/uart/src/eusart1.c: 370:        eusart1TxBufferRemaining++;
  5489   010D12  2A54               	incf	_eusart1TxBufferRemaining^0,f,c	;volatile
  5490                           
  5491                           ;mcc_generated_files/uart/src/eusart1.c: 371:     }
  5492   010D14  EF8E  F086         	goto	i2l748
  5493   010D18                     i2l746:
  5494                           
  5495                           ;mcc_generated_files/uart/src/eusart1.c: 373:     {;mcc_generated_files/uart/src/eusart1
      +                          .c: 374:         PIE3bits.TX1IE = 0;
  5496   010D18  010E               	movlb	14	; () banked
  5497   010D1A  99C0               	bcf	192,4,b	;volatile
  5498   010D1C                     i2l748:
  5499   010D1C  0012               	return		;funcret
  5500   010D1E                     __end_of_EUSART1_TransmitISR:
  5501                           	callstack 0
  5502                           
  5503 ;; *************** function _EUSART1_ReceiveISR *****************
  5504 ;; Defined at:
  5505 ;;		line 296 in file "mcc_generated_files/uart/src/eusart1.c"
  5506 ;; Parameters:    Size  Location     Type
  5507 ;;		None
  5508 ;; Auto vars:     Size  Location     Type
  5509 ;;  tempRxHead      1    1[COMRAM] unsigned char 
  5510 ;;  regValue        1    0[COMRAM] unsigned char 
  5511 ;; Return value:  Size  Location     Type
  5512 ;;                  1    wreg      void 
  5513 ;; Registers used:
  5514 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  5515 ;; Tracked objects:
  5516 ;;		On entry : 0/0
  5517 ;;		On exit  : 0/0
  5518 ;;		Unchanged: 0/0
  5519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5521 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5523 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5524 ;;Total ram usage:        2 bytes
  5525 ;; Hardware stack levels used: 1
  5526 ;; Hardware stack levels required when called: 1
  5527 ;; This function calls:
  5528 ;;		NULL
  5529 ;;		_EUSART1_DefaultFramingErrorCallback
  5530 ;;		_EUSART1_DefaultOverrunErrorCallback
  5531 ;; This function is called by:
  5532 ;;		_EUSART1_Initialize
  5533 ;;		_INTERRUPT_InterruptManager
  5534 ;; This function uses a non-reentrant model
  5535 ;;
  5536                           
  5537                           	psect	text50
  5538   010660                     __ptext50:
  5539                           	callstack 0
  5540   010660                     _EUSART1_ReceiveISR:
  5541                           	callstack 21
  5542   010660                     
  5543                           ;mcc_generated_files/uart/src/eusart1.c: 298:     uint8_t regValue;;mcc_generated_files/
      +                          uart/src/eusart1.c: 299:  uint8_t tempRxHead;;mcc_generated_files/uart/src/eusart1.c: 30
      +                          2:     eusart1RxStatusBuffer[eusart1RxHead].status = 0;
  5544   010660  5053               	movf	_eusart1RxHead^0,w,c
  5545   010662  0D02               	mullw	2
  5546   010664  50F3               	movf	243,w,c
  5547   010666  0F80               	addlw	low _eusart1RxStatusBuffer
  5548   010668  6ED9               	movwf	fsr2l,c
  5549   01066A  6ADA               	clrf	fsr2h,c
  5550   01066C  6ADE               	clrf	postinc2,c
  5551   01066E  6ADD               	clrf	postdec2,c
  5552   010670                     
  5553                           ;mcc_generated_files/uart/src/eusart1.c: 304:     if(RC1STAbits.OERR)
  5554   010670  A29C               	btfss	156,1,c	;volatile
  5555   010672  EF3D  F083         	goto	i2u143_41
  5556   010676  EF3F  F083         	goto	i2u143_40
  5557   01067A                     i2u143_41:
  5558   01067A  EF5E  F083         	goto	i2l2878
  5559   01067E                     i2u143_40:
  5560   01067E                     
  5561                           ;mcc_generated_files/uart/src/eusart1.c: 305:     {;mcc_generated_files/uart/src/eusart1
      +                          .c: 306:         eusart1RxStatusBuffer[eusart1RxHead].oerr = 1;
  5562   01067E  5053               	movf	_eusart1RxHead^0,w,c
  5563   010680  0D02               	mullw	2
  5564   010682  50F3               	movf	243,w,c
  5565   010684  0F80               	addlw	low _eusart1RxStatusBuffer
  5566   010686  6ED9               	movwf	fsr2l,c
  5567   010688  6ADA               	clrf	fsr2h,c
  5568   01068A  0100               	movlb	0	; () banked
  5569   01068C  84DF               	bsf	indf2,2,c
  5570   01068E                     
  5571                           ; BSR set to: 0
  5572                           ;mcc_generated_files/uart/src/eusart1.c: 307:         if(((void*)0) != EUSART1_OverrunEr
      +                          rorHandler)
  5573   01068E  502D               	movf	_EUSART1_OverrunErrorHandler^0,w,c
  5574   010690  102E               	iorwf	(_EUSART1_OverrunErrorHandler+1)^0,w,c
  5575   010692  102F               	iorwf	(_EUSART1_OverrunErrorHandler+2)^0,w,c
  5576   010694  B4D8               	btfsc	status,2,c
  5577   010696  EF4F  F083         	goto	i2u144_41
  5578   01069A  EF51  F083         	goto	i2u144_40
  5579   01069E                     i2u144_41:
  5580   01069E  EF5E  F083         	goto	i2l2878
  5581   0106A2                     i2u144_40:
  5582   0106A2                     
  5583                           ; BSR set to: 0
  5584                           ;mcc_generated_files/uart/src/eusart1.c: 308:         {;mcc_generated_files/uart/src/eus
      +                          art1.c: 309:             EUSART1_OverrunErrorHandler();
  5585   0106A2  D802               	call	i2u145_48
  5586   0106A4  EF5E  F083         	goto	i2u145_49
  5587   0106A8                     i2u145_48:
  5588   0106A8  0005               	push	
  5589   0106AA  6EFA               	movwf	pclath,c
  5590   0106AC  502D               	movf	_EUSART1_OverrunErrorHandler^0,w,c
  5591   0106AE  6EFD               	movwf	tosl,c
  5592   0106B0  502E               	movf	(_EUSART1_OverrunErrorHandler+1)^0,w,c
  5593   0106B2  6EFE               	movwf	tosh,c
  5594   0106B4  502F               	movf	(_EUSART1_OverrunErrorHandler+2)^0,w,c
  5595   0106B6  6EFF               	movwf	tosu,c
  5596   0106B8  50FA               	movf	pclath,w,c
  5597   0106BA  0012               	return		;indir
  5598   0106BC                     i2u145_49:
  5599   0106BC                     i2l2878:
  5600                           
  5601                           ;mcc_generated_files/uart/src/eusart1.c: 312:     if(RC1STAbits.FERR)
  5602   0106BC  A49C               	btfss	156,2,c	;volatile
  5603   0106BE  EF63  F083         	goto	i2u146_41
  5604   0106C2  EF65  F083         	goto	i2u146_40
  5605   0106C6                     i2u146_41:
  5606   0106C6  EF84  F083         	goto	i2l2886
  5607   0106CA                     i2u146_40:
  5608   0106CA                     
  5609                           ;mcc_generated_files/uart/src/eusart1.c: 313:     {;mcc_generated_files/uart/src/eusart1
      +                          .c: 314:         eusart1RxStatusBuffer[eusart1RxHead].ferr = 1;
  5610   0106CA  5053               	movf	_eusart1RxHead^0,w,c
  5611   0106CC  0D02               	mullw	2
  5612   0106CE  50F3               	movf	243,w,c
  5613   0106D0  0F80               	addlw	low _eusart1RxStatusBuffer
  5614   0106D2  6ED9               	movwf	fsr2l,c
  5615   0106D4  6ADA               	clrf	fsr2h,c
  5616   0106D6  0100               	movlb	0	; () banked
  5617   0106D8  82DF               	bsf	indf2,1,c
  5618   0106DA                     
  5619                           ; BSR set to: 0
  5620                           ;mcc_generated_files/uart/src/eusart1.c: 315:         if(((void*)0) != EUSART1_FramingEr
      +                          rorHandler)
  5621   0106DA  5030               	movf	_EUSART1_FramingErrorHandler^0,w,c
  5622   0106DC  1031               	iorwf	(_EUSART1_FramingErrorHandler+1)^0,w,c
  5623   0106DE  1032               	iorwf	(_EUSART1_FramingErrorHandler+2)^0,w,c
  5624   0106E0  B4D8               	btfsc	status,2,c
  5625   0106E2  EF75  F083         	goto	i2u147_41
  5626   0106E6  EF77  F083         	goto	i2u147_40
  5627   0106EA                     i2u147_41:
  5628   0106EA  EF84  F083         	goto	i2l2886
  5629   0106EE                     i2u147_40:
  5630   0106EE                     
  5631                           ; BSR set to: 0
  5632                           ;mcc_generated_files/uart/src/eusart1.c: 316:         {;mcc_generated_files/uart/src/eus
      +                          art1.c: 317:             EUSART1_FramingErrorHandler();
  5633   0106EE  D802               	call	i2u148_48
  5634   0106F0  EF84  F083         	goto	i2u148_49
  5635   0106F4                     i2u148_48:
  5636   0106F4  0005               	push	
  5637   0106F6  6EFA               	movwf	pclath,c
  5638   0106F8  5030               	movf	_EUSART1_FramingErrorHandler^0,w,c
  5639   0106FA  6EFD               	movwf	tosl,c
  5640   0106FC  5031               	movf	(_EUSART1_FramingErrorHandler+1)^0,w,c
  5641   0106FE  6EFE               	movwf	tosh,c
  5642   010700  5032               	movf	(_EUSART1_FramingErrorHandler+2)^0,w,c
  5643   010702  6EFF               	movwf	tosu,c
  5644   010704  50FA               	movf	pclath,w,c
  5645   010706  0012               	return		;indir
  5646   010708                     i2u148_49:
  5647   010708                     i2l2886:
  5648                           
  5649                           ;mcc_generated_files/uart/src/eusart1.c: 321:     regValue = RC1REG;
  5650   010708  CF98 F001          	movff	3992,EUSART1_ReceiveISR@regValue	;volatile
  5651   01070C                     
  5652                           ;mcc_generated_files/uart/src/eusart1.c: 323:     tempRxHead = (eusart1RxHead + 1) & ((8
      +                          ) - 1);
  5653   01070C  2853               	incf	_eusart1RxHead^0,w,c	;volatile
  5654   01070E  0B07               	andlw	7
  5655   010710  6E02               	movwf	EUSART1_ReceiveISR@tempRxHead^0,c
  5656   010712                     
  5657                           ;mcc_generated_files/uart/src/eusart1.c: 324:     if (tempRxHead == eusart1RxTail)
  5658   010712  5052               	movf	_eusart1RxTail^0,w,c	;volatile
  5659   010714  1802               	xorwf	EUSART1_ReceiveISR@tempRxHead^0,w,c
  5660   010716  A4D8               	btfss	status,2,c
  5661   010718  EF90  F083         	goto	i2u149_41
  5662   01071C  EF92  F083         	goto	i2u149_40
  5663   010720                     i2u149_41:
  5664   010720  EF94  F083         	goto	i2l2894
  5665   010724                     i2u149_40:
  5666   010724  EF9D  F083         	goto	i2l736
  5667   010728                     i2l2894:
  5668                           
  5669                           ;mcc_generated_files/uart/src/eusart1.c: 329:     {;mcc_generated_files/uart/src/eusart1
      +                          .c: 330:         eusart1RxBuffer[eusart1RxHead] = regValue;
  5670   010728  5053               	movf	_eusart1RxHead^0,w,c
  5671   01072A  0F90               	addlw	low _eusart1RxBuffer
  5672   01072C  6ED9               	movwf	fsr2l,c
  5673   01072E  6ADA               	clrf	fsr2h,c
  5674   010730  C001  FFDF         	movff	EUSART1_ReceiveISR@regValue,indf2
  5675   010734                     
  5676                           ;mcc_generated_files/uart/src/eusart1.c: 331:   eusart1RxHead = tempRxHead;
  5677   010734  C002  F053         	movff	EUSART1_ReceiveISR@tempRxHead,_eusart1RxHead	;volatile
  5678   010738                     
  5679                           ;mcc_generated_files/uart/src/eusart1.c: 332:   eusart1RxCount++;
  5680   010738  2A51               	incf	_eusart1RxCount^0,f,c	;volatile
  5681   01073A                     i2l736:
  5682   01073A  0012               	return		;funcret
  5683   01073C                     __end_of_EUSART1_ReceiveISR:
  5684                           	callstack 0
  5685                           
  5686 ;; *************** function _EUSART1_DefaultOverrunErrorCallback *****************
  5687 ;; Defined at:
  5688 ;;		line 395 in file "mcc_generated_files/uart/src/eusart1.c"
  5689 ;; Parameters:    Size  Location     Type
  5690 ;;		None
  5691 ;; Auto vars:     Size  Location     Type
  5692 ;;		None
  5693 ;; Return value:  Size  Location     Type
  5694 ;;                  1    wreg      void 
  5695 ;; Registers used:
  5696 ;;		None
  5697 ;; Tracked objects:
  5698 ;;		On entry : 0/0
  5699 ;;		On exit  : 0/0
  5700 ;;		Unchanged: 0/0
  5701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5706 ;;Total ram usage:        0 bytes
  5707 ;; Hardware stack levels used: 1
  5708 ;; This function calls:
  5709 ;;		Nothing
  5710 ;; This function is called by:
  5711 ;;		_EUSART1_Initialize
  5712 ;;		_EUSART1_ReceiveISR
  5713 ;; This function uses a non-reentrant model
  5714 ;;
  5715                           
  5716                           	psect	text51
  5717   010FDC                     __ptext51:
  5718                           	callstack 0
  5719   010FDC                     _EUSART1_DefaultOverrunErrorCallback:
  5720                           	callstack 21
  5721   010FDC                     
  5722                           ;mcc_generated_files/uart/src/eusart1.c: 398:     RC1STAbits.CREN = 0;
  5723   010FDC  989C               	bcf	156,4,c	;volatile
  5724                           
  5725                           ;mcc_generated_files/uart/src/eusart1.c: 399:     RC1STAbits.CREN = 1;
  5726   010FDE  889C               	bsf	156,4,c	;volatile
  5727   010FE0  0012               	return		;funcret
  5728   010FE2                     __end_of_EUSART1_DefaultOverrunErrorCallback:
  5729                           	callstack 0
  5730                           
  5731 ;; *************** function _EUSART1_DefaultFramingErrorCallback *****************
  5732 ;; Defined at:
  5733 ;;		line 390 in file "mcc_generated_files/uart/src/eusart1.c"
  5734 ;; Parameters:    Size  Location     Type
  5735 ;;		None
  5736 ;; Auto vars:     Size  Location     Type
  5737 ;;		None
  5738 ;; Return value:  Size  Location     Type
  5739 ;;                  1    wreg      void 
  5740 ;; Registers used:
  5741 ;;		None
  5742 ;; Tracked objects:
  5743 ;;		On entry : 0/0
  5744 ;;		On exit  : 0/0
  5745 ;;		Unchanged: 0/0
  5746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5751 ;;Total ram usage:        0 bytes
  5752 ;; Hardware stack levels used: 1
  5753 ;; This function calls:
  5754 ;;		Nothing
  5755 ;; This function is called by:
  5756 ;;		_EUSART1_Initialize
  5757 ;;		_EUSART1_ReceiveISR
  5758 ;; This function uses a non-reentrant model
  5759 ;;
  5760                           
  5761                           	psect	text52
  5762   010FFE                     __ptext52:
  5763                           	callstack 0
  5764   010FFE                     _EUSART1_DefaultFramingErrorCallback:
  5765                           	callstack 21
  5766   010FFE  0012               	return		;funcret
  5767   011000                     __end_of_EUSART1_DefaultFramingErrorCallback:
  5768                           	callstack 0
  5769                           
  5770 ;; *************** function _ADCC_ThresholdISR *****************
  5771 ;; Defined at:
  5772 ;;		line 285 in file "mcc_generated_files/adc/src/adcc.c"
  5773 ;; Parameters:    Size  Location     Type
  5774 ;;		None
  5775 ;; Auto vars:     Size  Location     Type
  5776 ;;		None
  5777 ;; Return value:  Size  Location     Type
  5778 ;;                  1    wreg      void 
  5779 ;; Registers used:
  5780 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5781 ;; Tracked objects:
  5782 ;;		On entry : 0/0
  5783 ;;		On exit  : 0/0
  5784 ;;		Unchanged: 0/0
  5785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5790 ;;Total ram usage:        0 bytes
  5791 ;; Hardware stack levels used: 1
  5792 ;; Hardware stack levels required when called: 1
  5793 ;; This function calls:
  5794 ;;		NULL
  5795 ;;		_ADCC_DefaultADTI_ISR
  5796 ;;		_ADCUserInterrupt
  5797 ;; This function is called by:
  5798 ;;		_INTERRUPT_InterruptManager
  5799 ;; This function uses a non-reentrant model
  5800 ;;
  5801                           
  5802                           	psect	text53
  5803   010C4E                     __ptext53:
  5804                           	callstack 0
  5805   010C4E                     _ADCC_ThresholdISR:
  5806                           	callstack 21
  5807   010C4E                     
  5808                           ;mcc_generated_files/adc/src/adcc.c: 288:     PIR1bits.ADTIF = 0;
  5809   010C4E  010E               	movlb	14	; () banked
  5810   010C50  93C6               	bcf	198,1,b	;volatile
  5811   010C52                     
  5812                           ; BSR set to: 14
  5813                           ;mcc_generated_files/adc/src/adcc.c: 290:     if (ADCC_ADTI_InterruptHandler != ((void*)
      +                          0))
  5814   010C52  0100               	movlb	0	; () banked
  5815   010C54  51AC               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
  5816   010C56  11AD               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
  5817   010C58  11AE               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
  5818   010C5A  B4D8               	btfsc	status,2,c
  5819   010C5C  EF32  F086         	goto	i2u140_41
  5820   010C60  EF34  F086         	goto	i2u140_40
  5821   010C64                     i2u140_41:
  5822   010C64  EF41  F086         	goto	i2l168
  5823   010C68                     i2u140_40:
  5824   010C68                     
  5825                           ; BSR set to: 0
  5826                           ;mcc_generated_files/adc/src/adcc.c: 291:     {;mcc_generated_files/adc/src/adcc.c: 292:
      +                                   ADCC_ADTI_InterruptHandler();
  5827   010C68  D802               	call	i2u141_48
  5828   010C6A  EF41  F086         	goto	i2u141_49
  5829   010C6E                     i2u141_48:
  5830   010C6E  0005               	push	
  5831   010C70  6EFA               	movwf	pclath,c
  5832   010C72  51AC               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
  5833   010C74  6EFD               	movwf	tosl,c
  5834   010C76  51AD               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
  5835   010C78  6EFE               	movwf	tosh,c
  5836   010C7A  51AE               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
  5837   010C7C  6EFF               	movwf	tosu,c
  5838   010C7E  50FA               	movf	pclath,w,c
  5839   010C80  0012               	return		;indir
  5840   010C82                     i2u141_49:
  5841   010C82                     i2l168:
  5842   010C82  0012               	return		;funcret
  5843   010C84                     __end_of_ADCC_ThresholdISR:
  5844                           	callstack 0
  5845                           
  5846 ;; *************** function _ADCC_DefaultADTI_ISR *****************
  5847 ;; Defined at:
  5848 ;;		line 301 in file "mcc_generated_files/adc/src/adcc.c"
  5849 ;; Parameters:    Size  Location     Type
  5850 ;;		None
  5851 ;; Auto vars:     Size  Location     Type
  5852 ;;		None
  5853 ;; Return value:  Size  Location     Type
  5854 ;;                  1    wreg      void 
  5855 ;; Registers used:
  5856 ;;		None
  5857 ;; Tracked objects:
  5858 ;;		On entry : 0/0
  5859 ;;		On exit  : 0/0
  5860 ;;		Unchanged: 0/0
  5861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5866 ;;Total ram usage:        0 bytes
  5867 ;; Hardware stack levels used: 1
  5868 ;; This function calls:
  5869 ;;		Nothing
  5870 ;; This function is called by:
  5871 ;;		_ADCC_Initialize
  5872 ;;		_ADCC_ThresholdISR
  5873 ;; This function uses a non-reentrant model
  5874 ;;
  5875                           
  5876                           	psect	text54
  5877   011000                     __ptext54:
  5878                           	callstack 0
  5879   011000                     _ADCC_DefaultADTI_ISR:
  5880                           	callstack 21
  5881   011000  0012               	return		;funcret
  5882   011002                     __end_of_ADCC_DefaultADTI_ISR:
  5883                           	callstack 0
  5884                           
  5885 ;; *************** function _ADCUserInterrupt *****************
  5886 ;; Defined at:
  5887 ;;		line 254 in file "application.c"
  5888 ;; Parameters:    Size  Location     Type
  5889 ;;		None
  5890 ;; Auto vars:     Size  Location     Type
  5891 ;;		None
  5892 ;; Return value:  Size  Location     Type
  5893 ;;                  1    wreg      void 
  5894 ;; Registers used:
  5895 ;;		wreg, status,2
  5896 ;; Tracked objects:
  5897 ;;		On entry : 0/0
  5898 ;;		On exit  : 0/0
  5899 ;;		Unchanged: 0/0
  5900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5905 ;;Total ram usage:        0 bytes
  5906 ;; Hardware stack levels used: 1
  5907 ;; This function calls:
  5908 ;;		Nothing
  5909 ;; This function is called by:
  5910 ;;		_main
  5911 ;;		_ADCC_ThresholdISR
  5912 ;; This function uses a non-reentrant model
  5913 ;;
  5914                           
  5915                           	psect	text55
  5916   010FE2                     __ptext55:
  5917                           	callstack 0
  5918   010FE2                     _ADCUserInterrupt:
  5919                           	callstack 21
  5920   010FE2                     
  5921                           ;application.c: 256:     adcReadyFlag = 1;
  5922   010FE2  0E01               	movlw	1
  5923   010FE4  6E4F               	movwf	_adcReadyFlag^0,c	;volatile
  5924   010FE6  0012               	return		;funcret
  5925   010FE8                     __end_of_ADCUserInterrupt:
  5926                           	callstack 0
  5927                           
  5928                           	psect	text56
  5929   000000                     __ptext56:
  5930                           	callstack 0
  5931   000000                     
  5932                           	psect	rparam
  5933   000000                     
  5934                           	psect	temp
  5935   000057                     btemp:
  5936                           	callstack 0
  5937   000057                     	ds	1
  5938   000000                     int$flags	set	btemp
  5939   000000                     wtemp8	set	btemp+1
  5940   000000                     ttemp5	set	btemp+1
  5941   000000                     ttemp6	set	btemp+4
  5942   000000                     ttemp7	set	btemp+8
  5943                           
  5944                           	psect	config
  5945                           
  5946                           ;Config register CONFIG1L @ 0x300000
  5947                           ;	External Oscillator mode Selection bits
  5948                           ;	FEXTOSC = ECH, EC (external clock) above 8 MHz; PFM set to high power
  5949                           ;	Power-up default value for COSC bits
  5950                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  5951   300000                     	org	3145728
  5952   300000  FF                 	db	255
  5953                           
  5954                           ;Config register CONFIG1H @ 0x300001
  5955                           ;	Clock Out Enable bit
  5956                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  5957                           ;	Clock Switch Enable bit
  5958                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  5959                           ;	Fail-Safe Clock Monitor Enable bit
  5960                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  5961   300001                     	org	3145729
  5962   300001  FF                 	db	255
  5963                           
  5964                           ;Config register CONFIG2L @ 0x300002
  5965                           ;	Master Clear Enable bit
  5966                           ;	MCLRE = EXTMCLR, MCLR pin (RE3) is MCLR
  5967                           ;	Power-up Timer Enable bit
  5968                           ;	PWRTE = OFF, Power up timer disabled
  5969                           ;	Low-power BOR enable bit
  5970                           ;	LPBOREN = OFF, Low power BOR is disabled
  5971                           ;	Brown-out Reset Enable bits
  5972                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  5973   300002                     	org	3145730
  5974   300002  FF                 	db	255
  5975                           
  5976                           ;Config register CONFIG2H @ 0x300003
  5977                           ;	Brown Out Reset Voltage selection bits
  5978                           ;	BORV = VBOR_190, Brown-out Reset Voltage (VBOR) set to 1.90V
  5979                           ;	ZCD Disable bit
  5980                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  5981                           ;	PPSLOCK bit One-Way Set Enable bit
  5982                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  5983                           ;	Stack Full/Underflow Reset Enable bit
  5984                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5985                           ;	Extended Instruction Set Enable bit
  5986                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  5987   300003                     	org	3145731
  5988   300003  FF                 	db	255
  5989                           
  5990                           ;Config register CONFIG3L @ 0x300004
  5991                           ;	WDT Period Select bits
  5992                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  5993                           ;	WDT operating mode
  5994                           ;	WDTE = OFF, WDT Disabled
  5995   300004                     	org	3145732
  5996   300004  9F                 	db	159
  5997                           
  5998                           ;Config register CONFIG3H @ 0x300005
  5999                           ;	WDT Window Select bits
  6000                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  6001                           ;	WDT input clock selector
  6002                           ;	WDTCCS = SC, Software Control
  6003   300005                     	org	3145733
  6004   300005  FF                 	db	255
  6005                           
  6006                           ;Config register CONFIG4L @ 0x300006
  6007                           ;	Write Protection Block 0
  6008                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  6009                           ;	Write Protection Block 1
  6010                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  6011                           ;	Write Protection Block 2
  6012                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  6013                           ;	Write Protection Block 3
  6014                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  6015                           ;	Write Protection Block 4
  6016                           ;	WRT4 = OFF, Block 4 (010000-013FFFh) not write-protected
  6017                           ;	Write Protection Block 5
  6018                           ;	WRT5 = OFF, Block 5 (014000-017FFFh) not write-protected
  6019                           ;	Write Protection Block 6
  6020                           ;	WRT6 = OFF, Block 6 (018000-01BFFFh) not write-protected
  6021                           ;	Write Protection Block 7
  6022                           ;	WRT7 = OFF, Block 7 (01C000-01FFFFh) not write-protected
  6023   300006                     	org	3145734
  6024   300006  FF                 	db	255
  6025                           
  6026                           ;Config register CONFIG4H @ 0x300007
  6027                           ;	Configuration Register Write Protection bit
  6028                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
  6029                           ;	Boot Block Write Protection bit
  6030                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  6031                           ;	Data EEPROM Write Protection bit
  6032                           ;	WRTD = OFF, Data EEPROM not write-protected
  6033                           ;	Scanner Enable bit
  6034                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
  6035                           ;	Low Voltage Programming Enable bit
  6036                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  6037   300007                     	org	3145735
  6038   300007  FF                 	db	255
  6039                           
  6040                           ;Config register CONFIG5L @ 0x300008
  6041                           ;	UserNVM Program Memory Code Protection bit
  6042                           ;	CP = OFF, UserNVM code protection disabled
  6043                           ;	DataNVM Memory Code Protection bit
  6044                           ;	CPD = OFF, DataNVM code protection disabled
  6045   300008                     	org	3145736
  6046   300008  FF                 	db	255
  6047                           
  6048                           ;Config register CONFIG5H @ 0x300009
  6049                           ;	unspecified, using default values
  6050   300009                     	org	3145737
  6051   300009  FF                 	db	255
  6052                           
  6053                           ;Config register CONFIG6L @ 0x30000A
  6054                           ;	Table Read Protection Block 0
  6055                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  6056                           ;	Table Read Protection Block 1
  6057                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  6058                           ;	Table Read Protection Block 2
  6059                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  6060                           ;	Table Read Protection Block 3
  6061                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  6062                           ;	Table Read Protection Block 4
  6063                           ;	EBTR4 = OFF, Block 4 (010000-013FFFh) not protected from table reads executed in other
      +                           blocks
  6064                           ;	Table Read Protection Block 5
  6065                           ;	EBTR5 = OFF, Block 5 (014000-017FFFh) not protected from table reads executed in other
      +                           blocks
  6066                           ;	Table Read Protection Block 6
  6067                           ;	EBTR6 = OFF, Block 6 (018000-01BFFFh) not protected from table reads executed in other
      +                           blocks
  6068                           ;	Table Read Protection Block 7
  6069                           ;	EBTR7 = OFF, Block 7 (01C000-01FFFFh) not protected from table reads executed in other
      +                           blocks
  6070   30000A                     	org	3145738
  6071   30000A  FF                 	db	255
  6072                           
  6073                           ;Config register CONFIG6H @ 0x30000B
  6074                           ;	Boot Block Table Read Protection bit
  6075                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  6076   30000B                     	org	3145739
  6077   30000B  FF                 	db	255
  6078                           tosu	equ	0xFFF
  6079                           tosh	equ	0xFFE
  6080                           tosl	equ	0xFFD
  6081                           stkptr	equ	0xFFC
  6082                           pclatu	equ	0xFFB
  6083                           pclath	equ	0xFFA
  6084                           pcl	equ	0xFF9
  6085                           tblptru	equ	0xFF8
  6086                           tblptrh	equ	0xFF7
  6087                           tblptrl	equ	0xFF6
  6088                           tablat	equ	0xFF5
  6089                           prodh	equ	0xFF4
  6090                           prodl	equ	0xFF3
  6091                           indf0	equ	0xFEF
  6092                           postinc0	equ	0xFEE
  6093                           postdec0	equ	0xFED
  6094                           preinc0	equ	0xFEC
  6095                           plusw0	equ	0xFEB
  6096                           fsr0h	equ	0xFEA
  6097                           fsr0l	equ	0xFE9
  6098                           wreg	equ	0xFE8
  6099                           indf1	equ	0xFE7
  6100                           postinc1	equ	0xFE6
  6101                           postdec1	equ	0xFE5
  6102                           preinc1	equ	0xFE4
  6103                           plusw1	equ	0xFE3
  6104                           fsr1h	equ	0xFE2
  6105                           fsr1l	equ	0xFE1
  6106                           bsr	equ	0xFE0
  6107                           indf2	equ	0xFDF
  6108                           postinc2	equ	0xFDE
  6109                           postdec2	equ	0xFDD
  6110                           preinc2	equ	0xFDC
  6111                           plusw2	equ	0xFDB
  6112                           fsr2h	equ	0xFDA
  6113                           fsr2l	equ	0xFD9
  6114                           status	equ	0xFD8

Data Sizes:
    Strings     168
    Constant    108
    Data        0
    BSS         110
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      86
    BANK0           160      8      79
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK14           31      0       0

Pointer List with Targets:

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultADTI_ISR(), ADCUserInterrupt(), NULL(), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultADTI_ISR(), ADCUserInterrupt(), 

    EUSART1_FramingErrorCallbackRegister@callbackHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultFramingErrorCallback(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultFramingErrorCallback(), NULL(), 

    EUSART1_OverrunErrorCallbackRegister@callbackHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorCallback(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorCallback(), NULL(), 

    EUSART1_RxCompleteCallbackRegister@callbackHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_ReceiveISR(), 

    EUSART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_ReceiveISR(), NULL(), 

    EUSART1_TxCompleteCallbackRegister@callbackHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_TransmitISR(), 

    EUSART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_TransmitISR(), NULL(), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), NULL(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), NULL(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), NULL(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_1(CODE[25]), STR_2(CODE[23]), STR_3(CODE[51]), STR_4(CODE[51]), 
		 -> STR_5(CODE[29]), STR_6(CODE[57]), STR_7(CODE[57]), 

    S1211$17$0	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_TransmitISR(), 

    S1211$18$0	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_ReceiveISR(), 

    S1211$20$0	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultFramingErrorCallback(), 

    S1211$21$0	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorCallback(), 

    S1211$AutoBaudEventEnableGet	PTR FTN()_Bool  size(3) Largest target is 1
		 -> NULL(), 

    S1211$AutoBaudQuery	PTR FTN()_Bool  size(3) Largest target is 1
		 -> EUSART1_AutoBaudQuery(), 

    S1211$AutoBaudSet	PTR FTN(_Bool ,)void  size(3) Largest target is 1
		 -> EUSART1_AutoBaudSet(), 

    S1211$BaudRateGet	PTR FTN()unsigned long  size(3) Largest target is 1
		 -> NULL(), 

    S1211$BaudRateSet	PTR FTN(unsigned long ,)void  size(3) Largest target is 1
		 -> NULL(), 

    S1211$BRGCountGet	PTR FTN()unsigned long  size(3) Largest target is 1
		 -> NULL(), 

    S1211$BRGCountSet	PTR FTN(unsigned long ,)void  size(3) Largest target is 1
		 -> NULL(), 

    S1211$Deinitialize	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_Deinitialize(), 

    S1211$ErrorGet	PTR FTN()unsigned int  size(3) Largest target is 2
		 -> EUSART1_ErrorGet(), 

    S1211$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    S1211$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> EUSART1_FramingErrorCallbackRegister(), 

    S1211$Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_Initialize(), 

    S1211$IsRxReady	PTR FTN()_Bool  size(3) Largest target is 1
		 -> EUSART1_IsRxReady(), 

    S1211$IsTxDone	PTR FTN()_Bool  size(3) Largest target is 1
		 -> EUSART1_IsTxDone(), 

    S1211$IsTxReady	PTR FTN()_Bool  size(3) Largest target is 1
		 -> EUSART1_IsTxReady(), 

    S1211$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> EUSART1_OverrunErrorCallbackRegister(), 

    S1211$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    S1211$Read	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> EUSART1_Read(), 

    S1211$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> EUSART1_RxCompleteCallbackRegister(), 

    S1211$TransmitDisable	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_TransmitDisable(), 

    S1211$TransmitEnable	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_TransmitEnable(), 

    S1211$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    S1211$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> EUSART1_TxCompleteCallbackRegister(), 

    S1211$Write	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> EUSART1_Write(), 

    S2295$buffer	PTR unsigned char  size(2) Largest target is 0

    S2295$source	PTR const unsigned char  size(2) Largest target is 0

    S758$4$0	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultOverflowCallback(), TMR4_DefaultOverflowCallback(), TMR4UserInterrupt(), 

    S758TMR_INTERFACE$Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Initialize(), TMR4_Initialize(), 

    S758TMR_INTERFACE$PeriodCountSet	PTR FTN(unsigned int ,)void  size(3) Largest target is 1
		 -> TMR0_Reload(), TMR4_PeriodCountSet(), 

    S758TMR_INTERFACE$Start	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Start(), TMR4_Start(), 

    S758TMR_INTERFACE$Stop	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Stop(), TMR4_Stop(), 

    S758TMR_INTERFACE$Tasks	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Tasks(), NULL(), 

    S758TMR_INTERFACE$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> TMR0_OverflowCallbackRegister(), TMR4_OverflowCallbackRegister(), 

    Timer0$Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Initialize(), TMR4_Initialize(), 

    Timer0$PeriodCountSet	PTR FTN(unsigned int ,)void  size(3) Largest target is 1
		 -> TMR0_Reload(), TMR4_PeriodCountSet(), 

    Timer0$Start	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Start(), TMR4_Start(), 

    Timer0$Stop	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Stop(), TMR4_Stop(), 

    Timer0$Tasks	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Tasks(), NULL(), 

    Timer0$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> TMR0_OverflowCallbackRegister(), TMR4_OverflowCallbackRegister(), 

    Timer4$Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Initialize(), TMR4_Initialize(), 

    Timer4$PeriodCountSet	PTR FTN(unsigned int ,)void  size(3) Largest target is 1
		 -> TMR0_Reload(), TMR4_PeriodCountSet(), 

    Timer4$Start	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Start(), TMR4_Start(), 

    Timer4$Stop	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Stop(), TMR4_Stop(), 

    Timer4$Tasks	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Tasks(), NULL(), 

    Timer4$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> TMR0_OverflowCallbackRegister(), TMR4_OverflowCallbackRegister(), 

    TMR0_OverflowCallback	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultOverflowCallback(), TMR4_DefaultOverflowCallback(), TMR4UserInterrupt(), NULL(), 

    TMR0_OverflowCallbackRegister@CallbackHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultOverflowCallback(), TMR4_DefaultOverflowCallback(), TMR4UserInterrupt(), 

    TMR4_OverflowCallback	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultOverflowCallback(), TMR4_DefaultOverflowCallback(), TMR4UserInterrupt(), NULL(), 

    TMR4_OverflowCallbackRegister@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultOverflowCallback(), TMR4_DefaultOverflowCallback(), TMR4UserInterrupt(), 

    UART1$AutoBaudEventEnableGet	PTR FTN()_Bool  size(3) Largest target is 1
		 -> NULL(), 

    UART1$AutoBaudQuery	PTR FTN()_Bool  size(3) Largest target is 1
		 -> EUSART1_AutoBaudQuery(), 

    UART1$AutoBaudSet	PTR FTN(_Bool ,)void  size(3) Largest target is 1
		 -> EUSART1_AutoBaudSet(), 

    UART1$BaudRateGet	PTR FTN()unsigned long  size(3) Largest target is 1
		 -> NULL(), 

    UART1$BaudRateSet	PTR FTN(unsigned long ,)void  size(3) Largest target is 1
		 -> NULL(), 

    UART1$BRGCountGet	PTR FTN()unsigned long  size(3) Largest target is 1
		 -> NULL(), 

    UART1$BRGCountSet	PTR FTN(unsigned long ,)void  size(3) Largest target is 1
		 -> NULL(), 

    UART1$Deinitialize	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_Deinitialize(), 

    UART1$ErrorGet	PTR FTN()unsigned int  size(3) Largest target is 2
		 -> EUSART1_ErrorGet(), 

    UART1$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    UART1$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> EUSART1_FramingErrorCallbackRegister(), 

    UART1$Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_Initialize(), 

    UART1$IsRxReady	PTR FTN()_Bool  size(3) Largest target is 1
		 -> EUSART1_IsRxReady(), 

    UART1$IsTxDone	PTR FTN()_Bool  size(3) Largest target is 1
		 -> EUSART1_IsTxDone(), 

    UART1$IsTxReady	PTR FTN()_Bool  size(3) Largest target is 1
		 -> EUSART1_IsTxReady(), 

    UART1$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> EUSART1_OverrunErrorCallbackRegister(), 

    UART1$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    UART1$Read	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> EUSART1_Read(), 

    UART1$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> EUSART1_RxCompleteCallbackRegister(), 

    UART1$TransmitDisable	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_TransmitDisable(), 

    UART1$TransmitEnable	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_TransmitEnable(), 

    UART1$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    UART1$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> EUSART1_TxCompleteCallbackRegister(), 

    UART1$Write	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> EUSART1_Write(), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 57
		 -> STR_1(CODE[25]), STR_2(CODE[23]), STR_3(CODE[51]), STR_4(CODE[51]), 
		 -> STR_5(CODE[29]), STR_6(CODE[57]), STR_7(CODE[57]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 57
		 -> STR_1(CODE[25]), STR_2(CODE[23]), STR_3(CODE[51]), STR_4(CODE[51]), 
		 -> STR_5(CODE[29]), STR_6(CODE[57]), STR_7(CODE[57]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_1(CODE[25]), STR_2(CODE[23]), STR_3(CODE[51]), STR_4(CODE[51]), 
		 -> STR_5(CODE[29]), STR_6(CODE[57]), STR_7(CODE[57]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_ApplicationTask
    _TMR4_Initialize->_TMR4_OverflowCallbackRegister
    _TMR0_Initialize->_TMR0_OverflowCallbackRegister
    _INTERRUPT_Initialize->_INT0_SetInterruptHandler
    _INTERRUPT_Initialize->_INT1_SetInterruptHandler
    _INTERRUPT_Initialize->_INT2_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_FramingErrorCallbackRegister
    _EUSART1_Initialize->_EUSART1_OverrunErrorCallbackRegister
    _EUSART1_Initialize->_EUSART1_RxCompleteCallbackRegister
    _EUSART1_Initialize->_EUSART1_TxCompleteCallbackRegister
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _ApplicationTask->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _abs->___awmod

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_EUSART1_ReceiveISR

Critical Paths under _main in BANK0

    _ApplicationTask->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5503
       _ADCC_SetADTIInterruptHandler
                    _ApplicationTask
                  _SYSTEM_Initialize
      _TMR0_OverflowCallbackRegister *
      _TMR4_OverflowCallbackRegister *
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1168
                    _ADCC_Initialize
                   _CLOCK_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR4_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0      98
      _TMR4_OverflowCallbackRegister
 ---------------------------------------------------------------------------------
 (1) _TMR4_OverflowCallbackRegister                        3     0      3      98
                                              8 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     122
      _TMR0_OverflowCallbackRegister
 ---------------------------------------------------------------------------------
 (1) _TMR0_OverflowCallbackRegister                        3     0      3     122
                                              8 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0     294
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3      98
                                              8 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      98
                                              8 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      98
                                              8 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     480
_EUSART1_FramingErrorCallbackRegiste
_EUSART1_OverrunErrorCallbackRegiste
 _EUSART1_RxCompleteCallbackRegister
 _EUSART1_TxCompleteCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _EUSART1_TxCompleteCallbackRegister                   3     0      3     120
                                              8 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART1_RxCompleteCallbackRegister                   3     0      3     120
                                              8 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART1_OverrunErrorCallbackRegister                 3     0      3     120
                                              8 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART1_FramingErrorCallbackRegister                 3     0      3     120
                                              8 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     174
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADTIInterruptHandler                         3     0      3     174
                                              8 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _ApplicationTask                                      2     2      0    3941
                                             42 COMRAM     2     2      0
 _ADCC_HasErrorCrossedLowerThreshold
 _ADCC_HasErrorCrossedUpperThreshold
        _ADCC_Initialize_AverageMode
          _ADCC_Initialize_BasicMode
   _ADCC_Initialize_BurstAverageMode
  _ADCC_Initialize_LowPassFilterMode
                    _ADCC_SetChannel
                      _EUSART1_Write
                        _TMR0_Reload *
                         _TMR0_Start *
                          _TMR0_Stop *
                _TMR4_PeriodCountSet *
                         _TMR4_Start *
                          _TMR4_Stop *
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              11     3      8    3736
                                             41 COMRAM     1     1      0
                                              0 BANK0      8     0      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             7     2      5    3025
                                             34 COMRAM     7     2      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           14    10      4    2675
                                             20 COMRAM    14    10      4
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     871
                                             11 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      89
                                             10 COMRAM     1     1      0
                  _EUSART1_IsTxReady
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Write                                        2     2      0      67
                                              8 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _EUSART1_IsTxReady                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             14 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              8 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _TMR4_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_PeriodCountSet                                  2     0      2      22
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Reload                                          2     0      2     101
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetChannel                                      1     1      0      15
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize_LowPassFilterMode                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize_BurstAverageMode                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize_BasicMode                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize_AverageMode                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_HasErrorCrossedUpperThreshold                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_HasErrorCrossedLowerThreshold                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManager                           6     6      0      91
                                              2 COMRAM     6     6      0
                                NULL *
                  _ADCC_ThresholdISR
                 _EUSART1_ReceiveISR *
                _EUSART1_TransmitISR *
                    _PIN_MANAGER_IOC
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (9) _TMR4_ISR                                             0     0      0       0
                                NULL *
       _TMR0_DefaultOverflowCallback *
                  _TMR4UserInterrupt *
       _TMR4_DefaultOverflowCallback *
 ---------------------------------------------------------------------------------
 (10) _TMR4_DefaultOverflowCallback                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR4UserInterrupt                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR0_DefaultOverflowCallback                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _PIN_MANAGER_IOC                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART1_TransmitISR                                  1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _EUSART1_ReceiveISR                                   2     2      0      68
                                              0 COMRAM     2     2      0
                                NULL *
_EUSART1_DefaultFramingErrorCallback *
_EUSART1_DefaultOverrunErrorCallback *
 ---------------------------------------------------------------------------------
 (10) _EUSART1_DefaultOverrunErrorCallback                 0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART1_DefaultFramingErrorCallback                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _ADCC_ThresholdISR                                    0     0      0       0
                                NULL *
               _ADCC_DefaultADTI_ISR *
                   _ADCUserInterrupt *
 ---------------------------------------------------------------------------------
 (10) _ADCUserInterrupt                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _ADCC_DefaultADTI_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_SetADTIInterruptHandler
   _ApplicationTask
     _ADCC_HasErrorCrossedLowerThreshold
     _ADCC_HasErrorCrossedUpperThreshold
     _ADCC_Initialize_AverageMode
     _ADCC_Initialize_BasicMode
     _ADCC_Initialize_BurstAverageMode
     _ADCC_Initialize_LowPassFilterMode
     _ADCC_SetChannel
     _EUSART1_Write
     _TMR0_Reload *
     _TMR0_Start *
     _TMR0_Stop *
     _TMR4_PeriodCountSet *
     _TMR4_Start *
     _TMR4_Stop *
     _printf *
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
               _EUSART1_IsTxReady
               _EUSART1_Write
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _CLOCK_Initialize
     _EUSART1_Initialize
       _EUSART1_FramingErrorCallbackRegister
       _EUSART1_OverrunErrorCallbackRegister
       _EUSART1_RxCompleteCallbackRegister
       _EUSART1_TxCompleteCallbackRegister
     _INTERRUPT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_OverflowCallbackRegister
     _TMR4_Initialize
       _TMR4_OverflowCallbackRegister
   _TMR0_OverflowCallbackRegister *
   _TMR4_OverflowCallbackRegister *

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _ADCC_ThresholdISR *
     NULL(Fake) *
     _ADCC_DefaultADTI_ISR *
     _ADCUserInterrupt *
   _EUSART1_ReceiveISR *
     NULL(Fake) *
     _EUSART1_DefaultFramingErrorCallback *
     _EUSART1_DefaultOverrunErrorCallback *
   _EUSART1_TransmitISR *
   _PIN_MANAGER_IOC *
   _TMR4_ISR *
     NULL(Fake) *
     _TMR0_DefaultOverflowCallback *
     _TMR4UserInterrupt *
     _TMR4_DefaultOverflowCallback *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      54        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFR          100      0       0      53        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      8      4F       5       49.4%
BITBIGSFR_1llll     88      0       0      51        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      56       1       91.5%
BITBIGSFR_1llll     27      0       0      40        0.0%
BITBANK14           1F      0       0      31        0.0%
BANK14              1F      0       0      32        0.0%
BIGRAM_1            1F      0       0      52        0.0%
BITBIGSFR_1llll     1E      0       0      42        0.0%
BITBIGSFR_1hhhh     1C      0       0      34        0.0%
BITBIGSFR_1hhhh     18      0       0      35        0.0%
BITBIGSFR_1hhhh     15      0       0      36        0.0%
BITBIGSFR_1hhhl     13      0       0      39        0.0%
BITBIGSFR_1hhhh      D      0       0      33        0.0%
BITBIGSFR_1llll      C      0       0      41        0.0%
BITBIGSFR_1llll      C      0       0      49        0.0%
BITBIGSFR_1hhhh      9      0       0      37        0.0%
BITBIGSFR_1llll      9      0       0      45        0.0%
BITBIGSFR_1llll      8      0       0      50        0.0%
BITBIGSFR_1llll      3      0       0      47        0.0%
BITBIGSFR_1hhhh      2      0       0      38        0.0%
BITBIGSFR_1llll      1      0       0      43        0.0%
BITBIGSFR_1llll      1      0       0      44        0.0%
BITBIGSFR_1llll      1      0       0      48        0.0%
BITBIGSFR_1llll      1      0       0      46        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A5      18        0.0%
DATA                 0      0      A5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Dec 12 11:41:48 2023

                           _eusart1TxBufferRemaining 0054                                                   l83 0B1C  
                                       ___awdiv@sign 000E                                 TMR0_Reload@periodVal 0009  
                                       _adcReadyFlag 004F                                 ?_TMR4_PeriodCountSet 0009  
                                                l161 0F60                                                  l401 0F9C  
                                                l171 0FC6                                                  l158 0F4C  
                                                l425 0E9A                                                  l540 0FEA  
                                                l348 0C4C                                                  l293 0F0A  
                                                l277 0980                                                  l534 0DD2  
                                                l470 0D4C                                                  l375 0FB8  
                                                l552 0F80                                                  l537 0FF2  
                                                l482 0FEE                                                  l491 0FDA  
                                                l740 0C04                                                  l388 0FAA  
                                                l549 0FD4                                                  l717 0F38  
                                                l479 0FF6                                                  l743 0C06  
                                                l760 0ED6                                                  l770 0E7C  
                                                l658 0AB2                                                  l498 0F8E  
                                                l940 0DAC                                                  l934 0470  
                                                l774 0E5A                                                  l782 0E16  
                                                l943 0D7C                                                  l937 0F22  
                                                l946 0EF2                                                  l778 0E38  
                                                l949 0FCE                                                  _PR4 0FB5  
                                                u380 0F4A                                                  u381 0F44  
                                                u390 0F5E                                                  u391 0F58  
                                                u386 0F4C                                                  u396 0F60  
                         ??_INT0_SetInterruptHandler 000C                                                  _abs 0C84  
                                       ___awmod@sign 000E                                                  tosl 0FFD  
                                                wreg 0FE8                                         _BAUD1CONbits 0F9E  
                                               l1203 0A30                                                 ?_abs 000F  
                                               l2020 0DBA                                                 l2022 0DCA  
                                               l2024 0DCE                                                 l2050 0F0C  
                                               l2042 0FF0                                                 l2018 0DAE  
                                               l2060 0D7E                                                 l2052 0FCA  
                                               l2036 0FF4                                                 l2044 0FE8  
                                               l2062 0D82                                                 l2070 0D5C  
                                               l2046 0FD0                                                 l2038 0FEC  
                                               l1190 08C8                                                 l3110 0000  
                                               l2064 0D8C                                                 l2072 0ED8  
                                               l3104 0E9C                                                 l3200 0344  
                                               l3120 0078                                                 l3112 0004  
                                               l2066 0D4E                                                 l3106 0EA0  
                                               l3210 03B2                                                 l3202 03A4  
                                               l3130 00C6                                                 l3122 007C  
                                               l3114 0014                                                 l2068 0D52  
                                               l1700 0804                                                 l3220 03FE  
                                               l3212 03DE                                                 l3204 03A6  
                                               l3140 0122                                                 l3132 00CA  
                                               l3124 0082                                                 l3116 0074  
                                               l3230 0420                                                 l3222 0404  
                                               l3214 03E2                                                 l3206 03A8  
                                               l3150 015E                                                 l3142 0124  
                                               l3134 00E4                                                 l3126 00AE  
                                               l3118 0076                                                 l2600 08A8  
                                               l3232 042A                                                 l3224 040C  
                                               l3208 03AC                                                 l3216 03EA  
                                               l3160 01A4                                                 l3144 0128  
                                               l3136 00F4                                                 l3152 0166  
                                               l3128 00B6                                                 l2602 08B8  
                                               l2610 0986                                                 l3226 0414  
                                               l3218 03FA                                                 l3170 0248  
                                               l3162 01CE                                                 l3154 0176  
                                               l3146 012E                                                 l3138 0120  
                                               l3242 0B1E                                                 l2604 08C0  
                                               l2620 09B6                                                 l2612 0994  
                                               l2540 0BC2                                                 l2700 060E  
                                               l3228 041A                                                 l3180 0282  
                                               l3172 024A                                                 l3164 01E2  
                                               l3156 017A                                                 l3148 015A  
                                               l3236 0436                                                 l3244 0B32  
                                               l1637 0EB8                                                 l2630 09FC  
                                               l2622 09C8                                                 l2614 099C  
                                               l2550 0BFC                                                 l2542 0BD2  
                                               l2702 0624                                                 l3190 02B8  
                                               l3182 0286                                                 l3174 024C  
                                               l3166 020C                                                 l3158 0190  
                                               l3246 0B6A                                                 l2640 0A28  
                                               l2632 0A04                                                 l2624 09D0  
                                               l2616 09A0                                                 l2608 0982  
                                               l2536 0F24                                                 l2552 0C00  
                                               l2544 0BDA                                                 l2560 0ED0  
                                               l3192 02CC                                                 l3176 0250  
                                               l3168 021C                                                 l3184 028E  
                                               l2712 0FBA                                                 l2800 0AA6  
                                               l2720 0F82                                                 l1681 0BBE  
                                               l2570 0820                                                 l2634 0A0A  
                                               l2626 09D8                                                 l2618 09AE  
                                               l2554 0C02                                                 l2546 0BEA  
                                               l2650 076A                                                 l2706 0634  
                                               l3194 02F6                                                 l3186 029E  
                                               l3178 0256                                                 l2730 0E5C  
                                               l2722 0E18                                                 l2802 0AAA  
                                               l2714 0FAC                                                 l2810 0D42  
                                               l1675 065E                                                 l2580 0846  
                                               l2572 0824                                                 l2564 0806  
                                               l2628 09E6                                                 l2636 0A10  
                                               l2660 0C92                                                 l2548 0BF6  
                                               l2556 0EBC                                                 l2652 0788  
                                               l2644 073C                                                 l2740 0B82  
                                               l3268 044A                                                 l3196 030A  
                                               l3188 02A2                                                 l2732 0E70  
                                               l2724 0E2C                                                 l2804 0AAE  
                                               l2716 0F9E                                                 l2812 0D46  
                                               l1685 0C9E                                                 l1934 0F3A  
                                               l2590 087C                                                 l2582 0858  
                                               l2574 0832                                                 l2566 080A  
                                               l2638 0A20                                                 l2558 0EBC  
                                               l2654 07BE                                                 l2646 074E  
                                               l2670 04B6                                                 l2662 0472  
                                               l2742 0B96                                                 l3198 0334  
                                               l2750 0B02                                                 l2734 0E3A  
                                               l2726 0DF6                                                 l2718 0F90  
                                               l1950 08FA                                                 l1942 08CA  
                                               l2814 0D48                                                 l2806 0D1E  
                                               l2816 0FD6                                                 l2592 0892  
                                               l2584 0860                                                 l2576 083A  
                                               l2568 0818                                                 l1688 0CB6  
                                               l2648 0760                                                 l2680 0536  
                                               l2672 04C4                                                 l2664 0498  
                                               l2744 0BB6                                                 l2752 0B06  
                                               l2736 0E4E                                                 l2728 0E0A  
                                               l2760 0C10                                                 l1960 0934  
                                               l1952 0928                                                 l1944 08E2  
                                               l2808 0D32                                                 l2840 0E8E  
                                               l1938 0F4E                                                 l2594 089A  
                                               l2586 0868                                                 l2578 083E  
                                               l2658 0C84                                                 l2690 05BC  
                                               l2682 054E                                                 l2674 04E4  
                                               l2666 04A4                                                 l2738 0B76  
                                               l2754 0B08                                                 l2770 0A32  
                                               l2762 0C20                                                 l1962 0936  
                                               l1954 092A                                                 l1946 08E8  
                                               l2842 0E92                                                 l2834 0E7E  
                                               l2596 089C                                                 l2588 0876  
                                               l2692 05CC                                                 l2684 057E  
                                               l2676 0504                                                 l2668 04B2  
                                               l2756 0B18                                                 l2748 0AB4  
                                               l2780 0A62                                                 l2772 0A36  
                                               l2764 0C24                                                 l1964 0938  
                                               l1956 092C                                                 l1948 08F4  
                                               l2844 0E96                                                 l2836 0E86  
                                               l2598 08A2                                                 l2694 05DC  
                                               l2686 059A                                                 l2678 051C  
                                               l2790 0A8E                                                 l2782 0A66  
                                               l2774 0A46                                                 l2766 0C36  
                                               l2758 0C08                                                 l1966 093A  
                                               l1958 092E                                                 l2838 0E8A  
                                               l2696 05EE                                                 l2688 05AC  
                                               l1968 0EF4                                                 l2792 0A96  
                                               l2784 0A6A                                                 l2776 0A5A  
                                               l2768 0C3A                                                 l1896 0F74  
                                               l2698 060C                                                 l2794 0A9A  
                                               l2786 0A6E                                                 l2778 0A5E  
                                               l2796 0A9E                                                 l2788 0A7E  
                                               l2798 0AA2                                                 STR_1 FFE6  
                                               STR_2 FFCF                                                 STR_3 FF96  
                                               STR_4 FF5D                                                 STR_5 FFC9  
                                               STR_6 FF90                                                 STR_7 FF57  
                                               u1100 0858                                                 u1101 0854  
                                               u1110 0876                                                 u1030 0F36  
                                               u1111 0872                                                 u1031 0F30  
                                               u1120 0892                                                 u1040 0F38  
                                               u1200 074E                                                 u1121 088E  
                                               u1201 074A                                                 u1130 08B8  
                                               u1050 0BD2                                                 u1210 0760  
                                               u1131 08B4                                                 u1051 0BCE  
                                               u1211 075C                                                 u1140 0994  
                                               u1060 0BEA                                                 u1220 0788  
                                               u1300 05AC                                                 u2020 029E  
                                               u1141 0990                                                 u1061 0BE6  
                                               u1221 0784                                                 u1301 05A8  
                                               u2021 029A                                                 u1150 09AE  
                                               u1070 0ED0                                                 u1230 07BE  
                                               u1310 05BC                                                 u2030 02CC  
                                               u1151 09AA                                                 u1071 0ECC  
                                               u1231 07BA                                                 u1311 05B8  
                                               u2031 02C8                                                 u1080 0818  
                                               u1160 09C8                                                 u1240 0C92  
                                               u1320 05CC                                                 u2040 030A  
                                               u2008 022E                                                 u1081 0814  
                                               u1161 09C4                                                 u1241 0C8E  
                                               u1321 05C8                                                 u2041 0306  
                                               u2009 0248                                                 u1090 0832  
                                               u1170 09E6                                                 u1330 05DC  
                                               u1250 0498                                                 u2050 0344  
                                               u2018 0268                                                 u1091 082E  
                                               u1171 09E2                                                 u1331 05D8  
                                               u1251 0494                                                 u2051 0340  
                                               u2019 0282                                                 u1180 09FC  
                                               u1340 0620                                                 u1260 04E4  
                                               u2108 0B50                                                 u1181 09F8  
                                               u1341 061C                                                 u1261 04E0  
                                               u2109 0B6A                                                 _LATA 0F82  
                                               u1190 0A20                                                 u1270 0504  
                                               u1350 0E2C                                                 _LATB 0F83  
                                               u1191 0A1C                                                 u1271 0500  
                                               u1351 0E28                                                 _LATC 0F84  
                                               u1280 054A                                                 u1360 0E0A  
                                               _LATD 0F85                                                 u1281 0544  
                                               u1361 0E06                                                 _LATE 0F86  
                                               u1290 054C                                                 u2090 03FA  
                                               u1370 0E70                                                 u2091 03F6  
                                               u1371 0E6C                                                 u2068 0356  
                                               u1380 0E4E                                                 u2069 0370  
                                               u1381 0E4A                                                 u1390 0BB6  
                                               u2078 038A                                                 u1391 0BB2  
                                               u2079 03A4                                                 u2088 03C4  
                                               u2089 03DE                                                 u1920 00C6  
                                               u1921 00C2                                                 u1930 00F4  
                                               _T4PR 0FB5                                                 u1931 00F0  
                                               u1908 005A                                                 u1909 0074  
                                               u1918 0094                                                 u1919 00AE  
                                               u1960 0176                                                 u1880 0014  
                                               u1961 0172                                                 u1881 0010  
                                               u1970 01A4                                                 u1971 01A0  
                                               u1980 01E2                                                 u1948 0106  
                                               u1981 01DE                                                 u1949 0120  
                                               u1990 021C                                                 u1958 0140  
                                               u1991 0218                                                 u1959 015A  
                                               u1898 0026                                                 u1899 0040  
                                               _TMR4 0FB4                                                 _WPUA 0F0B  
                                               _WPUB 0F13                                                 _WPUC 0F1B  
                                               _WPUD 0F20                                                 _WPUE 0F28  
                                _EUSART1_TransmitISR 0CEC                                        _EUSART1_Write 0BC0  
                                               abs@a 000F                                                 _dbuf 0060  
                                               _main 0B1E                                                 _prec 00A2  
                                               fsr1h 0FE2                                                 fsr2h 0FDA  
                                               indf2 0FDF                                                 fsr1l 0FE1  
                                               fsr2l 0FD9                                                 btemp 0057  
                          ?_INT2_SetInterruptHandler 0009                                                 prodh 0FF4  
                                               prodl 0FF3                                                 start 012E  
                                       ___param_bank 0000                               ADCC_SetChannel@channel 0009  
                                              ??_abs 0011                              __end_of_TMR0_Initialize 0DD4  
                               ?_EUSART1_TransmitISR 0001                              __end_of_ApplicationTask 0472  
                              ??_TMR4_PeriodCountSet 000B                                _eusart1RxStatusBuffer 0080  
                                              _ADACQ 0F57                                                _ADCAP 0F58  
                                              _ADACT 0F51                                                ?_main 0001  
                                              _ADCLK 0F52                                                _ADCNT 0F62  
                                              _ADPCH 0F5A                                                _ADREF 0F53  
                                    __end_of___awdiv 08CA                                                _ADLTH 0F65  
                                              _ADRES 0F5E                                                _ADPRE 0F59  
                                    __end_of___awmod 0A32                                                _ADRPT 0F61  
                                              _ADUTH 0F67                fp__EUSART1_TxCompleteCallbackRegister 0000  
         __end_of_EUSART1_TxCompleteCallbackRegister 0E18                 ??_EUSART1_TxCompleteCallbackRegister 000C  
                ?_EUSART1_TxCompleteCallbackRegister 0009                   _EUSART1_TxCompleteCallbackRegister 0DF6  
                                    ___awdiv@divisor 000B                        EUSART1_TransmitISR@tempTxTail 0001  
                                              _T4CON 0FB6                                                _IOCAF 0F05  
                                              _IOCBF 0F0D                                                _IOCCF 0F15  
                                              _IOCAN 0F06                                                _IOCEF 0F22  
                                              _IOCAP 0F07                                                _IOCBN 0F0E  
                                              _IOCBP 0F0F                                                _IOCCN 0F16  
                                              _IOCCP 0F17                                                _T4HLT 0FB7  
                                              _IOCEN 0F23                                                _IOCEP 0F24  
                         _ADCC_ADTI_InterruptHandler 00AC                                                _T4TMR 0FB4  
                                              _T4RST 0FB9                                                i2l501 0FFA  
                                              i2l174 1000                                                i2l168 0C82  
                                              i2l280 0FFC                                                i2l360 00EE  
                                              i2l353 0048                                                i2l356 0090  
                                              i2l365 0112                                                i2l358 00CA  
                                              i2l359 0112                                                i2l555 0FF8  
                                              i2l495 0CEA                                                i2l736 073A  
                                              i2l746 0D18                                                i2l763 0FFE  
                                              i2l748 0D1C                                                i2l766 0FE0  
                                              i2l952 0FE6                                                i2l956 0F72  
                                    ___awdiv@counter 000D                                                _OSCEN 0ED7  
                                              _UART1 FEEB                                         vfpfcnvrt@fmt 0017  
                                              _TMR0H 0FD3                                                _TMR0L 0FD2  
                                              _TRISA 0F87                                                _TRISB 0F88  
                                              _TRISC 0F89                                                _TRISD 0F8A  
                                              _TRISE 0F8B                                      _TMR4_Initialize 0D1E  
            fp__EUSART1_FramingErrorCallbackRegister 0000         __end_of_EUSART1_FramingErrorCallbackRegister 0E7E  
             ??_EUSART1_FramingErrorCallbackRegister 000C                ?_EUSART1_FramingErrorCallbackRegister 0009  
               _EUSART1_FramingErrorCallbackRegister 0E5C                                     __end_of_TMR4_ISR 0CEC  
                                        ?_TMR0_Start 0001                              __end_of_PIN_MANAGER_IOC 0FFE  
                                              _flags 004A                                                _count 0050  
                                              _fputc 073C                                          ?_TMR4_Start 0001  
                                              _width 00A0                                                _putch 0EBA  
                     ??_TMR4_DefaultOverflowCallback 0001                             _INT1_SetInterruptHandler 0F9E  
                                     ?_EUSART1_Write 0001                                                pclath 0FFA  
                                              pclatu 0FFB                                                tablat 0FF5  
                             ??_ADCC_DefaultADTI_ISR 0001                                _EUSART1_AutoBaudQuery 0000  
                                              ttemp5 0058                                                ttemp6 005B  
                                              ttemp7 005F                                                status 0FD8  
                                              wtemp8 0058                                 fp__EUSART1_IsTxReady 0000  
                            EUSART1_Write@tempTxHead 0009                         ?_ADCC_Initialize_AverageMode 0001  
                                    __initialization 0DD4                           __end_of_EUSART1_Initialize 0AB4  
                                       __end_of_main 0B76                                ??_EUSART1_TransmitISR 0001  
                        ?_INTERRUPT_InterruptManager 0001                           __end_of_EUSART1_ReceiveISR 073C  
                                             ??_main 002D                                        __activetblptr 0003  
                                     fp__TMR0_Reload 0000    EUSART1_TxCompleteCallbackRegister@callbackHandler 0009  
  EUSART1_RxCompleteCallbackRegister@callbackHandler 0009  EUSART1_OverrunErrorCallbackRegister@callbackHandler 0009  
EUSART1_FramingErrorCallbackRegister@callbackHandler 0009                                               _ADACCH 0F6C  
                                             _ADACCL 0F6B                                               _ADCON0 0F5B  
                                             _ADCON1 0F54                                               _ADCON2 0F55  
                                             _ADCON3 0F56                                               _ADFLTR 0F6D  
                                             _ADERRH 0F6A                                               _ADERRL 0F69  
                                             ?_fputc 000C                                               _ADLTHH 0F66  
                                             _ADLTHL 0F65                                               _ADRESH 0F5F  
                                             _ADRESL 0F5E                                               _ADSTAT 0F60  
                                             _ADUTHH 0F68                                     ___awdiv@dividend 0009  
                                             _ADUTHL 0F67                                               _ADSTPT 0F63  
                                             _ANSELA 0F0C                                               ?_putch 0001  
                                             _ANSELB 0F14                                               _ANSELC 0F1C  
                                             _ANSELD 0F21                                               _ANSELE 0F29  
                                             _T0CON0 0FD4                                               _T0CON1 0FD5  
                                             _RC1REG 0F98                                               _RC1STA 0F9C  
                                             _ODCONA 0F0A                                               _ODCONB 0F12  
                                             _RC6PPS 0EF8                                               _ODCONC 0F1A  
                                             _ODCOND 0F1F                                               _ODCONE 0F27  
                                             i2l2090 0CD0                                               i2l3050 0064  
                                             i2l3042 0022                                               i2l2076 0F62  
                                             i2l3060 00E6                                               i2l3052 0072  
                                             i2l3044 0032                                               i2l2078 0F70  
                                             i2l2086 0CB8                                               i2l3062 00FC  
                                             i2l3054 009E                                               i2l3046 0040  
                                             i2l2088 0CBC                                               i2l3064 010A  
                                             i2l3056 00AC                                               i2l3048 0056  
                                             i2l3058 00D8                                               i2l2900 0CEC  
                                             i2l2830 0C52                                               i2l2902 0CFC  
                                             i2l2832 0C68                                               i2l2904 0D08  
                                             i2l2826 0FE2                                               i2l2818 0FDC  
                                             i2l2906 0D0E                                               i2l2828 0C4E  
                                             i2l2908 0D12                                               i2l2870 0670  
                                             i2l2880 06CA                                               i2l2872 067E  
                                             _INLVLA 0F08                                               i2l2890 0712  
                                             i2l2882 06DA                                               i2l2874 068E  
                                             _INLVLB 0F10                                               _INLVLC 0F18  
                                             i2l2884 06EE                                               i2l2876 06A2  
                                             i2l2868 0660                                               _INLVLD 0F1D  
                                             _INLVLE 0F25                                               i2l2894 0728  
                                             i2l2886 0708                                               i2l2878 06BC  
                                             i2l2896 0734                                               i2l2888 070C  
                                             i2l2898 0738                                               _OSCFRQ 0ED9  
                                      vfpfcnvrt@done 001B                                               _RX1PPS 0EB0  
                                             _TX1REG 0F99                                               _TX1STA 0F9D  
                                             _Timer0 FF33                                               _Timer4 FF45  
                                       vfprintf@cfmt 0028                                         ?_TMR0_Reload 0009  
                                  _ADCC_ThresholdISR 0C4E                                    __end_of_TMR0_Stop 0FEC  
                                          ??___awdiv 000D                                            ??___awmod 000D  
                                  __end_of_TMR4_Stop 0FF0                                     ?_TMR0_Initialize 0001  
                                 ?_ADCC_ThresholdISR 0001                              __end_of_TMR4_Initialize 0D4E  
                                             clear_0 0DDA                                               clear_1 0DE6  
                                   ___awdiv@quotient 000F                                      ___awmod@divisor 000B  
                                             isa$std 0001                                      ___awmod@counter 000D  
                                             _printf 0E9C                                     ?_ApplicationTask 0001  
                                  ?_CLOCK_Initialize 0001                __end_of_TMR4_OverflowCallbackRegister 0F90  
                      _TMR4_OverflowCallbackRegister 0F82                                      _ADCC_Initialize 0AB4  
                                  ?_ADCUserInterrupt 0001                                               fputc@c 000C  
                       _INT2_DefaultInterruptHandler 0000                                   ??_CLOCK_Initialize 0009  
                                ??_ADCC_ThresholdISR 0001                                         __mediumconst FEEA  
                       EUSART1_ReceiveISR@tempRxHead 0002                                   ??_ADCUserInterrupt 0001  
                                             tblptrh 0FF7                                               tblptrl 0FF6  
                                             tblptru 0FF8              fp__EUSART1_OverrunErrorCallbackRegister 0000  
       __end_of_EUSART1_OverrunErrorCallbackRegister 0E5C               ??_EUSART1_OverrunErrorCallbackRegister 000C  
              ?_EUSART1_OverrunErrorCallbackRegister 0009                 _EUSART1_OverrunErrorCallbackRegister 0E3A  
                                   __end_of_vfprintf 0BC0                                      ??_EUSART1_Write 0009  
           INT2_SetInterruptHandler@InterruptHandler 0009             INT1_SetInterruptHandler@InterruptHandler 0009  
           INT0_SetInterruptHandler@InterruptHandler 0009         ADCC_SetADTIInterruptHandler@InterruptHandler 0009  
                                   ?_PIN_MANAGER_IOC 0001                                      _ADCC_SetChannel 0FC8  
                                    _eusart1RxBuffer 0090                                      _eusart1TxBuffer 0098  
                                  _SYSTEM_Initialize 0E7E                                           __accesstop 0060  
                            __end_of__initialization 0DEC                                   ?_SYSTEM_Initialize 0001  
                                      ___rparam_used 0001                                        __end_of_UART1 FF33  
                          __end_of_ADCC_ThresholdISR 0C84                           _EUSART1_TxInterruptHandler 0045  
                                     __pcstackCOMRAM 0001                                  ??_SYSTEM_Initialize 000C  
                                          ?_TMR4_ISR 0001                                        __end_of_fputc 0806  
                                      __end_of_putch 0ED8                                fp__EUSART1_Initialize 0000  
                              fp__EUSART1_ReceiveISR 0000                     __end_of_INT2_SetInterruptHandler 0F9E  
                                            ??_fputc 0010                            __end_of_SYSTEM_Initialize 0E9C  
                                            ??_putch 000B                                        _eusart1RxHead 0053  
                                      _eusart1TxHead 0056                                        _eusart1RxTail 0052  
                                         __pbssBANK0 0060                                        _eusart1TxTail 0055  
                              _INT0_InterruptHandler 003F                                _TMR0_OverflowCallback 0033  
                            fp__ADCC_DefaultADTI_ISR 0000           __end_of_ADCC_HasErrorCrossedLowerThreshold 0F62  
               ??_ADCC_HasErrorCrossedLowerThreshold 0009                  ?_ADCC_HasErrorCrossedLowerThreshold 0001  
                 _ADCC_HasErrorCrossedLowerThreshold 0F4E                                 fp__TMR4UserInterrupt 0000  
                                         ??_TMR4_ISR 0001                              __end_of_ADCC_Initialize 0B1E  
                                            _ADFLTRH 0F6E                                              _ADFLTRL 0F6D  
                                            _ADPREVH 0F5D                                              _ADPREVL 0F5C  
               __end_of_ADCC_SetADTIInterruptHandler 0FC8                         _ADCC_SetADTIInterruptHandler 0FBA  
                                   _EUSART1_IsTxDone 0000                                     ?_TMR4_Initialize 0001  
                                            _ADSTPTH 0F64                                              _ADSTPTL 0F63  
                                            ?_printf 00A4                                     _EUSART1_ErrorGet 0000  
                                            _T4INPPS 0EA7                           ??_INT1_SetInterruptHandler 000C  
                            __end_of_ADCC_SetChannel 0FD0                                              _SP1BRGH 0F9B  
                                            _SP1BRGL 0F9A                                              _OSCCON1 0ED3  
                                            _OSCCON3 0ED5                                              i2u40_40 0F70  
                                            i2u40_41 0F6C                                              i2u43_40 0CD0  
                                            i2u43_41 0CCC                                              i2u44_48 0CD6  
                                            i2u44_49 0CEA                                              _OSCTUNE 0ED8  
                                       ??_TMR0_Start 0009                                              _SLRCONA 0F09  
                                            _SLRCONB 0F11                                              _SLRCONC 0F19  
                                            _SLRCOND 0F1E                                              _SLRCONE 0F26  
                   fp__TMR4_OverflowCallbackRegister 0000                       ?_TMR4_OverflowCallbackRegister 0009  
                                       ??_TMR4_Start 0009           __end_of_ADCC_HasErrorCrossedUpperThreshold 0F4E  
               ??_ADCC_HasErrorCrossedUpperThreshold 0009                  ?_ADCC_HasErrorCrossedUpperThreshold 0001  
                 _ADCC_HasErrorCrossedUpperThreshold 0F3A                            ?_INT0_SetInterruptHandler 0009  
                               _EUSART1_Deinitialize 0000                               _EUSART1_TransmitEnable 0000  
                                            __Hparam 0000                                              __Lparam 0000  
                         EUSART1_ReceiveISR@regValue 0001                          __end_of_TMR4_PeriodCountSet 0FDC  
                                            ___awdiv 0806                                              ___awmod 0982  
                                          ?_vfprintf 0023                                   __end_of_TMR0_Start 0FF4  
                                            __pcinit 0DD4                                   __end_of_TMR4_Start 0FF8  
                                            __ramtop 0F00                                              __ptext0 0B1E  
                                            __ptext1 0E7E                                              __ptext2 0D1E  
                                            __ptext3 0F74                                              __ptext4 0F82  
                                            __ptext5 0DAE                                              __ptext6 08CA  
                                            __ptext7 0C08                                              __ptext8 0F90  
                                            __ptext9 0F9E                        ?_ADCC_SetADTIInterruptHandler 0009  
                                      _basicModeInit 004E                                     ___awmod@dividend 0009  
                                          _T4CONbits 0FB6                                   _EUSART1_Initialize 0A32  
                           ??_PIN_MANAGER_Initialize 0009                                            _T4HLTbits 0FB7  
                                 _EUSART1_ReceiveISR 0660        TMR4_OverflowCallbackRegister@InterruptHandler 0009  
                               end_of_initialization 0DEC                             _INT2_SetInterruptHandler 0F90  
                                ?_EUSART1_Initialize 0001                                            _T4RSTbits 0FB9  
                                            fputc@fp 000E                          _EUSART1_OverrunErrorHandler 002D  
           __end_of_ADCC_Initialize_BurstAverageMode 0D7E                   ??_ADCC_Initialize_BurstAverageMode 0009  
                  ?_ADCC_Initialize_BurstAverageMode 0001                     _ADCC_Initialize_BurstAverageMode 0D4E  
                                ?_EUSART1_ReceiveISR 0001                          __end_of_EUSART1_TransmitISR 0D1E  
                                  __end_of_vfpfcnvrt 0660                                              postdec2 0FDD  
                                            postinc0 0FEE                                              postinc1 0FE6  
                                            postinc2 0FDE                                     vfpfcnvrt@convarg 001E  
                                   ?_ADCC_Initialize 0001                                           ??_vfprintf 0028  
                               ??_EUSART1_Initialize 000C                                _INT1_InterruptHandler 003C  
                                          _TMR0_Stop 0FE8                                            _PORTCbits 0F8E  
                                          _TMR4_Stop 0FEC                                 ??_EUSART1_ReceiveISR 0001  
              __end_of_TMR0_OverflowCallbackRegister 0F82                        _TMR0_OverflowCallbackRegister 0F74  
                                   ?_ADCC_SetChannel 0001         TMR0_OverflowCallbackRegister@CallbackHandler 0009  
                                EUSART1_Write@txData 000A                                         _EUSART1_Read 0000  
               __end_of_TMR0_DefaultOverflowCallback 0FFA                         _TMR0_DefaultOverflowCallback 0FF8  
                                     __end_of_Timer0 FF45                                       __end_of_Timer4 FF57  
                       __end_of_INTERRUPT_Initialize 0C4E                         _INT0_DefaultInterruptHandler 0000  
                                        vfpfcnvrt@ap 0018                                          vfpfcnvrt@cp 001C  
                                        vfpfcnvrt@fp 0015                                           ?_TMR0_Stop 0001  
                                         ?_TMR4_Stop 0001                                       __end_of_printf 0EBA  
                                start_initialization 0DD4                                   fp__TMR0_Initialize 0000  
                                        __end_of_abs 0CB8                                          putch@txData 000B  
                              __end_of_EUSART1_Write 0C08                                        fp__TMR0_Start 0000  
                                      fp__TMR4_Start 0000                  __end_of_ADCC_Initialize_AverageMode 0DAE  
                        _ADCC_Initialize_AverageMode 0D7E                      fp__TMR0_DefaultOverflowCallback 0000  
                      ?_TMR0_DefaultOverflowCallback 0001                                          vfprintf@fmt 0025  
                         ?_ADCC_Initialize_BasicMode 0001                        ??_ADCC_Initialize_AverageMode 0009  
                                           ??_printf 002A                                       _eusart1RxCount 0051  
                                        __pbssCOMRAM 002D                     __end_of_INT0_SetInterruptHandler 0FBA  
                                      __pcstackBANK0 00A4                     fp__TMR0_OverflowCallbackRegister 0000  
                     ?_TMR0_OverflowCallbackRegister 0009                                _INT2_InterruptHandler 0039  
                                          __pnvBANK0 00AC                               _PIN_MANAGER_Initialize 08CA  
                    ??_TMR4_OverflowCallbackRegister 000C                                            __pintcode 0008  
                                      __pmediumconst FEEA                    __end_of_ADCC_Initialize_BasicMode 0F24  
                                           ?___awdiv 0009                                             ?___awmod 0009  
                                        _avgModeInit 004D                         ??_INTERRUPT_InterruptManager 0003  
                                        ??_TMR0_Stop 0009                                          ??_TMR4_Stop 0009  
                                           _BAUD1CON 0F9E                               fp__TMR4_PeriodCountSet 0000  
                         ??_INT2_SetInterruptHandler 000C                                    _EUSART1_IsRxReady 0000  
                                  _EUSART1_IsTxReady 0F24                                   fp__TMR4_Initialize 0000  
                                 ?_EUSART1_IsTxReady 0001                                             _T4CLKCON 0FB8  
                               _INTERRUPT_Initialize 0C08                                     _CLOCK_Initialize 0EF4  
                                  ??_TMR0_Initialize 000C                                             _LATAbits 0F82  
                                   _ADCUserInterrupt 0FE2                fp__EUSART1_RxCompleteCallbackRegister 0000  
         __end_of_EUSART1_RxCompleteCallbackRegister 0E3A                 ??_EUSART1_RxCompleteCallbackRegister 000C  
                ?_EUSART1_RxCompleteCallbackRegister 0009                   _EUSART1_RxCompleteCallbackRegister 0E18  
                                  ??_ApplicationTask 002B                                  ??_EUSART1_IsTxReady 0009  
                          ?_INT1_SetInterruptHandler 0009                                             _PIE0bits 0EBD  
                                           _PIE1bits 0EBE                                             _PIE3bits 0EC0  
                                           _PIE4bits 0EC1                                             i2u140_40 0C68  
                                           i2u140_41 0C64                                             i2u141_48 0C6E  
                                           i2u150_40 0CFC                                             i2u141_49 0C82  
                                           i2u150_41 0CF8                                             i2u143_40 067E  
                                           i2u143_41 067A                                             i2u144_40 06A2  
                                           i2u144_41 069E                                             i2u146_40 06CA  
                                           i2u145_48 06A8                                             i2u146_41 06C6  
                                           i2u145_49 06BC                                             i2u147_40 06EE  
                                           i2u147_41 06EA                                             i2u180_40 00AC  
                                           i2u180_41 00A8                                             i2u149_40 0724  
                                           i2u148_48 06F4                                             i2u173_40 0032  
                                           i2u149_41 0720                                             i2u148_49 0708  
                                           i2u173_41 002E                                             i2u182_40 00D8  
                                           i2u181_48 00B2                                             i2u174_40 0040  
                                           i2u182_41 00D4                                             i2u181_49 00C6  
                                           i2u174_41 003C                                             i2u183_40 00E6  
                                           i2u175_40 0056                                             i2u183_41 00E2  
                                           i2u175_41 0052                                             _PIR0bits 0EC5  
                                           i2u184_40 00FC                                             i2u176_40 0064  
                                           i2u184_41 00F8                                             i2u176_41 0060  
                                           i2u185_40 010A                                             i2u177_40 0072  
                                           i2u185_41 0106                                             i2u177_41 006E  
                                           _PIR1bits 0EC6                                             i2u179_40 009E  
                                           i2u178_48 0078                                             i2u179_41 009A  
                                           i2u178_49 008C                                             _PIR3bits 0EC8  
                                           _PIR4bits 0EC9                                        ??_TMR0_Reload 000B  
                                           _TMR4_ISR 0CB8                                    ??_PIN_MANAGER_IOC 0001  
                     ??_TMR0_DefaultOverflowCallback 0001                                            _vfpfcnvrt 0472  
                             fp__EUSART1_TransmitISR 0000                         __end_of_ADCC_DefaultADTI_ISR 1002  
                                         _ADCON0bits 0F5B                                           _ADCON1bits 0F54  
                                         _ADCON2bits 0F55                                           _ADCON3bits 0F56  
                          __end_of_EUSART1_IsTxReady 0F3A                                     _burstAvgModeInit 004C  
                                         vfpfcnvrt@c 0022                                ?_INTERRUPT_Initialize 0001  
                           _INT0_SetInterruptHandler 0FAC                                  _EUSART1_AutoBaudSet 0000  
                            _EUSART1_TransmitDisable 0000                                         fp__TMR0_Stop 0000  
                                       fp__TMR4_Stop 0000                                           _ADSTATbits 0F60  
          __end_of_ADCC_Initialize_LowPassFilterMode 0EF4                  ??_ADCC_Initialize_LowPassFilterMode 0009  
                 ?_ADCC_Initialize_LowPassFilterMode 0001                    _ADCC_Initialize_LowPassFilterMode 0ED8  
                                           __Hrparam 0000                                           vfprintf@ap 0027  
                                           __Lrparam 0000                                           vfprintf@fp 0023  
                                        _lpfModeInit 004B                                           ?_vfpfcnvrt 0015  
                                __end_of_TMR0_Reload 0FD6               fp__EUSART1_DefaultFramingErrorCallback 0000  
        __end_of_EUSART1_DefaultFramingErrorCallback 1000                ??_EUSART1_DefaultFramingErrorCallback 0001  
               ?_EUSART1_DefaultFramingErrorCallback 0001                  _EUSART1_DefaultFramingErrorCallback 0FFE  
                                         _T0CON0bits 0FD4                                             __ptext10 0FAC  
                                           __ptext11 0A32                                             __ptext20 0E9C  
                                           __ptext12 0DF6                                             __ptext21 0B76  
                                           __ptext13 0E18                                             __ptext30 0FE8  
                                           __ptext22 0472                                             __ptext14 0E3A  
                                           __ptext31 0FEC                                             __ptext23 073C  
                                           __ptext15 0E5C                                             __ptext40 0D7E  
                                           __ptext32 0FF0                                             __ptext24 0EBA  
                                           __ptext16 0EF4                                             __ptext41 0F3A  
                                           __ptext33 0FF4                                             __ptext25 0BC0  
                                           __ptext17 0AB4                                             __ptext50 0660  
                                           __ptext42 0F4E                                             __ptext34 0FD0  
                                           __ptext26 0F24                                             __ptext18 0FBA  
                                           __ptext51 0FDC                                             __ptext35 0FD6  
                                           __ptext27 0C84                                             __ptext19 0000  
                                           __ptext52 0FFE                                             __ptext44 0CB8  
                                           __ptext36 0FC8                                             __ptext28 0982  
                                           __ptext53 0C4E                                             __ptext45 0F62  
                                           __ptext37 0ED8                                             __ptext29 0806  
                                           __ptext54 1000                                             __ptext46 0FF8  
                                           __ptext38 0D4E                                             __ptext55 0FE2  
                                           __ptext47 0FFA                                             __ptext39 0F0C  
                                           __ptext56 0000                                             __ptext48 0FFC  
                                           __ptext49 0CEC                                    ??_TMR4_Initialize 000C  
                                         _RC1STAbits 0F9C                                             isa$xinst 0000  
                        ??_ADCC_Initialize_BasicMode 0009                                             int$flags 0057  
                                           _vfprintf 0B76                   __end_of_INTERRUPT_InterruptManager 012E  
                         _INTERRUPT_InterruptManager 0008                                            printf@fmt 00A4  
                        _EUSART1_FramingErrorHandler 0030                         _INT1_DefaultInterruptHandler 0000  
               __end_of_TMR4_DefaultOverflowCallback 0FFC                         _TMR4_DefaultOverflowCallback 0FFA  
                                         _INTCONbits 0FF2                               ??_INTERRUPT_Initialize 000C  
                                  _TMR4UserInterrupt 0F62                                   ?_TMR4UserInterrupt 0001  
                                           intlevel2 0000                         TMR4_PeriodCountSet@periodVal 0009  
                            ?_PIN_MANAGER_Initialize 0001                                 _ADCC_DefaultADTI_ISR 1000  
                                ??_TMR4UserInterrupt 0001                           _EUSART1_RxInterruptHandler 0042  
                                fp__ADCUserInterrupt 0000                      ??_TMR0_OverflowCallbackRegister 000C  
                                        _TMR0_Reload 0FD0                                             printf@ap 002A  
                                        ??_vfpfcnvrt 0019                                   _eusart1RxLastError 0048  
                                   fp__EUSART1_Write 0000                             __end_of_CLOCK_Initialize 0F0C  
                           __end_of_ADCUserInterrupt 0FE8                                      _TMR0_Initialize 0DAE  
                    fp__TMR4_DefaultOverflowCallback 0000                            __end_of_TMR4UserInterrupt 0F74  
                      ?_TMR4_DefaultOverflowCallback 0001                     __end_of_INT1_SetInterruptHandler 0FAC  
             fp__EUSART1_DefaultOverrunErrorCallback 0000          __end_of_EUSART1_DefaultOverrunErrorCallback 0FE2  
              ??_EUSART1_DefaultOverrunErrorCallback 0001                 ?_EUSART1_DefaultOverrunErrorCallback 0001  
                _EUSART1_DefaultOverrunErrorCallback 0FDC                                      _ApplicationTask 0000  
                          _ADCC_Initialize_BasicMode 0F0C                                           _TMR0_Tasks 0000  
                                         _TMR0_Start 0FF0                                           _TX1STAbits 0F9D  
                                         _TMR4_Start 0FF4                       ??_ADCC_SetADTIInterruptHandler 000C  
                     __end_of_PIN_MANAGER_Initialize 0982                                    ??_ADCC_Initialize 000C  
                              ?_ADCC_DefaultADTI_ISR 0001                                _TMR4_OverflowCallback 0036  
                                    _PIN_MANAGER_IOC 0FFC                                  _TMR4_PeriodCountSet 0FD6  
                                  ??_ADCC_SetChannel 0009  
